package org.xtext.example.mydsl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyBashGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMyBashParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Function", "While", "Case", "Done", "Elif", "Else", "Esac", "Then", "DollarSignLeftParenthesisLeftParenthesis", "AmpersandGreaterThanSignGreaterThanSign", "SemicolonSemicolonAmpersand", "LessThanSignLessThanSignEqualsSign", "GreaterThanSignGreaterThanSignEqualsSign", "For", "ExclamationMarkEqualsSign", "NumberSignNumberSign", "DollarSignLeftCurlyBracket", "PercentSignPercentSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AmpersandEqualsSign", "AmpersandGreaterThanSign", "LeftParenthesisLeftParenthesis", "RightParenthesisRightParenthesis", "AsteriskAsterisk", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "CommaComma", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "SolidusSolidus", "SolidusEqualsSign", "ColonPlusSign", "ColonHyphenMinus", "ColonEqualsSign", "ColonQuestionMark", "SemicolonAmpersand", "SemicolonSemicolon", "LessThanSignAmpersand", "LessThanSignLeftParenthesis", "LessThanSignLessThanSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "LessThanSignVerticalLine", "EqualsSignEqualsSign", "EqualsSignTilde", "GreaterThanSignAmpersand", "GreaterThanSignLeftParenthesis", "GreaterThanSignEqualsSign", "GreaterThanSignGreaterThanSign", "GreaterThanSignVerticalLine", "LeftSquareBracketLeftSquareBracket", "RightSquareBracketRightSquareBracket", "CircumflexAccentEqualsSign", "CircumflexAccentCircumflexAccent", "Do", "Fi", "If", "In", "VerticalLineAmpersand", "VerticalLineEqualsSign", "VerticalLineVerticalLine", "ExclamationMark", "QuotationMark", "NumberSign", "PercentSign", "Ampersand", "Apostrophe", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "CommercialAt", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "Tilde", "RULE_I_NUMBER", "RULE_NEW_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE", "RULE_NAME", "RULE_S_WORD_PART", "RULE_WORD_PART", "RULE_SL_COMMENT", "RULE_VARIABLE", "RULE_A_PREFIX", "RULE_C_S_OP", "RULE_C_B_OP", "RULE_C_LINE", "RULE_CS_START", "RULE_CS_END", "RULE_HERE_DOC_WORD", "RULE_HERE_DOC_START", "RULE_HERE_DOC_END", "RULE_HERE_DOC_PART"
    };
    public static final int LessThanSignGreaterThanSign=47;
    public static final int RULE_HERE_DOC_START=110;
    public static final int Elif=8;
    public static final int LessThanSign=82;
    public static final int CircumflexAccentCircumflexAccent=59;
    public static final int AmpersandGreaterThanSign=25;
    public static final int LeftParenthesis=73;
    public static final int CommaComma=32;
    public static final int Then=11;
    public static final int EqualsSignTilde=50;
    public static final int ExclamationMark=67;
    public static final int LessThanSignAmpersand=43;
    public static final int GreaterThanSign=84;
    public static final int SolidusSolidus=35;
    public static final int RULE_CS_END=108;
    public static final int DollarSignLeftParenthesisLeftParenthesis=12;
    public static final int GreaterThanSignEqualsSign=53;
    public static final int EqualsSignEqualsSign=49;
    public static final int VerticalLine=91;
    public static final int PlusSign=76;
    public static final int PercentSignPercentSign=21;
    public static final int LeftSquareBracketLeftSquareBracket=56;
    public static final int LeftSquareBracket=87;
    public static final int VerticalLineAmpersand=64;
    public static final int LessThanSignLessThanSign=45;
    public static final int If=62;
    public static final int In=63;
    public static final int VerticalLineVerticalLine=66;
    public static final int QuotationMark=68;
    public static final int Case=6;
    public static final int Esac=10;
    public static final int Comma=77;
    public static final int HyphenMinus=78;
    public static final int LeftParenthesisLeftParenthesis=26;
    public static final int LessThanSignEqualsSign=46;
    public static final int Solidus=79;
    public static final int RightCurlyBracket=92;
    public static final int Apostrophe=72;
    public static final int PercentSignEqualsSign=22;
    public static final int NumberSignNumberSign=19;
    public static final int RULE_VARIABLE=102;
    public static final int CommercialAt=86;
    public static final int Semicolon=81;
    public static final int RightParenthesisRightParenthesis=27;
    public static final int PlusSignPlusSign=30;
    public static final int QuestionMark=85;
    public static final int Else=9;
    public static final int ColonPlusSign=37;
    public static final int GreaterThanSignLeftParenthesis=52;
    public static final int RULE_I_NUMBER=94;
    public static final int ExclamationMarkEqualsSign=18;
    public static final int AmpersandGreaterThanSignGreaterThanSign=13;
    public static final int RULE_HERE_DOC_END=111;
    public static final int HyphenMinusHyphenMinus=33;
    public static final int Done=7;
    public static final int AmpersandEqualsSign=24;
    public static final int DollarSignLeftCurlyBracket=20;
    public static final int SolidusEqualsSign=36;
    public static final int RULE_HIDEN_NEW_LINE=97;
    public static final int RULE_WORD_PART=100;
    public static final int PercentSign=70;
    public static final int RightSquareBracketRightSquareBracket=57;
    public static final int Ampersand=71;
    public static final int AsteriskEqualsSign=29;
    public static final int VerticalLineEqualsSign=65;
    public static final int SemicolonAmpersand=41;
    public static final int RightSquareBracket=88;
    public static final int RULE_HERE_DOC_WORD=109;
    public static final int RULE_C_S_OP=104;
    public static final int For=17;
    public static final int RightParenthesis=74;
    public static final int SemicolonSemicolon=42;
    public static final int Do=60;
    public static final int ColonEqualsSign=39;
    public static final int RULE_S_WORD_PART=99;
    public static final int RULE_NEW_LINE=95;
    public static final int GreaterThanSignAmpersand=51;
    public static final int NumberSign=69;
    public static final int AsteriskAsterisk=28;
    public static final int RULE_HERE_DOC_PART=112;
    public static final int CircumflexAccentEqualsSign=58;
    public static final int LessThanSignLessThanSignEqualsSign=15;
    public static final int RULE_NAME=98;
    public static final int RULE_SL_COMMENT=101;
    public static final int Function=4;
    public static final int EqualsSign=83;
    public static final int AmpersandAmpersand=23;
    public static final int LessThanSignVerticalLine=48;
    public static final int RULE_C_B_OP=105;
    public static final int HyphenMinusEqualsSign=34;
    public static final int LessThanSignLeftParenthesis=44;
    public static final int Colon=80;
    public static final int RULE_C_LINE=106;
    public static final int EOF=-1;
    public static final int Asterisk=75;
    public static final int PlusSignEqualsSign=31;
    public static final int Fi=61;
    public static final int RULE_CS_START=107;
    public static final int RULE_WS=96;
    public static final int LeftCurlyBracket=90;
    public static final int Tilde=93;
    public static final int While=5;
    public static final int GreaterThanSignVerticalLine=55;
    public static final int GreaterThanSignGreaterThanSign=54;
    public static final int ColonHyphenMinus=38;
    public static final int CircumflexAccent=89;
    public static final int ColonQuestionMark=40;
    public static final int SemicolonSemicolonAmpersand=14;
    public static final int GreaterThanSignGreaterThanSignEqualsSign=16;
    public static final int RULE_A_PREFIX=103;

    // delegates
    // delegators


        public InternalMyBashParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMyBashParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMyBashParser.tokenNames; }
    public String getGrammarFileName() { return "InternalMyBashParser.g"; }


    	private MyBashGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("ExclamationMark", "'!'");
    		tokenNameToValue.put("QuotationMark", "'\"'");
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("PercentSign", "'%'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("Apostrophe", "'\''");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("QuestionMark", "'?'");
    		tokenNameToValue.put("CommercialAt", "'@'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("CircumflexAccent", "'^'");
    		tokenNameToValue.put("LeftCurlyBracket", "'{'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("Tilde", "'~'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("NumberSignNumberSign", "'##'");
    		tokenNameToValue.put("DollarSignLeftCurlyBracket", "'\\u0024{'");
    		tokenNameToValue.put("PercentSignPercentSign", "'%%'");
    		tokenNameToValue.put("PercentSignEqualsSign", "'%='");
    		tokenNameToValue.put("AmpersandAmpersand", "'&&'");
    		tokenNameToValue.put("AmpersandEqualsSign", "'&='");
    		tokenNameToValue.put("AmpersandGreaterThanSign", "'&>'");
    		tokenNameToValue.put("LeftParenthesisLeftParenthesis", "'(('");
    		tokenNameToValue.put("RightParenthesisRightParenthesis", "'))'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("AsteriskEqualsSign", "'*='");
    		tokenNameToValue.put("PlusSignPlusSign", "'++'");
    		tokenNameToValue.put("PlusSignEqualsSign", "'+='");
    		tokenNameToValue.put("CommaComma", "',,'");
    		tokenNameToValue.put("HyphenMinusHyphenMinus", "'--'");
    		tokenNameToValue.put("HyphenMinusEqualsSign", "'-='");
    		tokenNameToValue.put("SolidusSolidus", "'//'");
    		tokenNameToValue.put("SolidusEqualsSign", "'/='");
    		tokenNameToValue.put("ColonPlusSign", "':+'");
    		tokenNameToValue.put("ColonHyphenMinus", "':-'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("ColonQuestionMark", "':?'");
    		tokenNameToValue.put("SemicolonAmpersand", "';&'");
    		tokenNameToValue.put("SemicolonSemicolon", "';;'");
    		tokenNameToValue.put("LessThanSignAmpersand", "'<&'");
    		tokenNameToValue.put("LessThanSignLeftParenthesis", "'<('");
    		tokenNameToValue.put("LessThanSignLessThanSign", "'<<'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("LessThanSignVerticalLine", "'<|'");
    		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
    		tokenNameToValue.put("EqualsSignTilde", "'=~'");
    		tokenNameToValue.put("GreaterThanSignAmpersand", "'>&'");
    		tokenNameToValue.put("GreaterThanSignLeftParenthesis", "'>('");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("GreaterThanSignGreaterThanSign", "'>>'");
    		tokenNameToValue.put("GreaterThanSignVerticalLine", "'>|'");
    		tokenNameToValue.put("LeftSquareBracketLeftSquareBracket", "'[['");
    		tokenNameToValue.put("RightSquareBracketRightSquareBracket", "']]'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("CircumflexAccentCircumflexAccent", "'^^'");
    		tokenNameToValue.put("Do", "'do'");
    		tokenNameToValue.put("Fi", "'fi'");
    		tokenNameToValue.put("If", "'if'");
    		tokenNameToValue.put("In", "'in'");
    		tokenNameToValue.put("VerticalLineAmpersand", "'|&'");
    		tokenNameToValue.put("VerticalLineEqualsSign", "'|='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("DollarSignLeftParenthesisLeftParenthesis", "'\\u0024(('");
    		tokenNameToValue.put("AmpersandGreaterThanSignGreaterThanSign", "'&>>'");
    		tokenNameToValue.put("SemicolonSemicolonAmpersand", "';;&'");
    		tokenNameToValue.put("LessThanSignLessThanSignEqualsSign", "'<<='");
    		tokenNameToValue.put("GreaterThanSignGreaterThanSignEqualsSign", "'>>='");
    		tokenNameToValue.put("For", "'for'");
    		tokenNameToValue.put("Case", "'case'");
    		tokenNameToValue.put("Done", "'done'");
    		tokenNameToValue.put("Elif", "'elif'");
    		tokenNameToValue.put("Else", "'else'");
    		tokenNameToValue.put("Esac", "'esac'");
    		tokenNameToValue.put("Then", "'then'");
    		tokenNameToValue.put("While", "'while'");
    		tokenNameToValue.put("Function", "'function'");
    	}

    	public void setGrammarAccess(MyBashGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleBash"
    // InternalMyBashParser.g:146:1: entryRuleBash : ruleBash EOF ;
    public final void entryRuleBash() throws RecognitionException {
        try {
            // InternalMyBashParser.g:147:1: ( ruleBash EOF )
            // InternalMyBashParser.g:148:1: ruleBash EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBash();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBash"


    // $ANTLR start "ruleBash"
    // InternalMyBashParser.g:155:1: ruleBash : ( ( rule__Bash__Alternatives ) ) ;
    public final void ruleBash() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:159:2: ( ( ( rule__Bash__Alternatives ) ) )
            // InternalMyBashParser.g:160:2: ( ( rule__Bash__Alternatives ) )
            {
            // InternalMyBashParser.g:160:2: ( ( rule__Bash__Alternatives ) )
            // InternalMyBashParser.g:161:3: ( rule__Bash__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:162:3: ( rule__Bash__Alternatives )
            // InternalMyBashParser.g:162:4: rule__Bash__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Bash__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBash"


    // $ANTLR start "entryRuleCompoundList"
    // InternalMyBashParser.g:171:1: entryRuleCompoundList : ruleCompoundList EOF ;
    public final void entryRuleCompoundList() throws RecognitionException {
        try {
            // InternalMyBashParser.g:172:1: ( ruleCompoundList EOF )
            // InternalMyBashParser.g:173:1: ruleCompoundList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCompoundList"


    // $ANTLR start "ruleCompoundList"
    // InternalMyBashParser.g:180:1: ruleCompoundList : ( ( rule__CompoundList__Group__0 ) ) ;
    public final void ruleCompoundList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:184:2: ( ( ( rule__CompoundList__Group__0 ) ) )
            // InternalMyBashParser.g:185:2: ( ( rule__CompoundList__Group__0 ) )
            {
            // InternalMyBashParser.g:185:2: ( ( rule__CompoundList__Group__0 ) )
            // InternalMyBashParser.g:186:3: ( rule__CompoundList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getGroup()); 
            }
            // InternalMyBashParser.g:187:3: ( rule__CompoundList__Group__0 )
            // InternalMyBashParser.g:187:4: rule__CompoundList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompoundList"


    // $ANTLR start "entryRuleSimpleList"
    // InternalMyBashParser.g:196:1: entryRuleSimpleList : ruleSimpleList EOF ;
    public final void entryRuleSimpleList() throws RecognitionException {
        try {
            // InternalMyBashParser.g:197:1: ( ruleSimpleList EOF )
            // InternalMyBashParser.g:198:1: ruleSimpleList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleList"


    // $ANTLR start "ruleSimpleList"
    // InternalMyBashParser.g:205:1: ruleSimpleList : ( ( rule__SimpleList__Group__0 ) ) ;
    public final void ruleSimpleList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:209:2: ( ( ( rule__SimpleList__Group__0 ) ) )
            // InternalMyBashParser.g:210:2: ( ( rule__SimpleList__Group__0 ) )
            {
            // InternalMyBashParser.g:210:2: ( ( rule__SimpleList__Group__0 ) )
            // InternalMyBashParser.g:211:3: ( rule__SimpleList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getGroup()); 
            }
            // InternalMyBashParser.g:212:3: ( rule__SimpleList__Group__0 )
            // InternalMyBashParser.g:212:4: rule__SimpleList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleList"


    // $ANTLR start "entryRulePipelineCommand"
    // InternalMyBashParser.g:221:1: entryRulePipelineCommand : rulePipelineCommand EOF ;
    public final void entryRulePipelineCommand() throws RecognitionException {
        try {
            // InternalMyBashParser.g:222:1: ( rulePipelineCommand EOF )
            // InternalMyBashParser.g:223:1: rulePipelineCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePipelineCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePipelineCommand"


    // $ANTLR start "rulePipelineCommand"
    // InternalMyBashParser.g:230:1: rulePipelineCommand : ( ( rule__PipelineCommand__Alternatives ) ) ;
    public final void rulePipelineCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:234:2: ( ( ( rule__PipelineCommand__Alternatives ) ) )
            // InternalMyBashParser.g:235:2: ( ( rule__PipelineCommand__Alternatives ) )
            {
            // InternalMyBashParser.g:235:2: ( ( rule__PipelineCommand__Alternatives ) )
            // InternalMyBashParser.g:236:3: ( rule__PipelineCommand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:237:3: ( rule__PipelineCommand__Alternatives )
            // InternalMyBashParser.g:237:4: rule__PipelineCommand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PipelineCommand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePipelineCommand"


    // $ANTLR start "entryRulePipeline"
    // InternalMyBashParser.g:246:1: entryRulePipeline : rulePipeline EOF ;
    public final void entryRulePipeline() throws RecognitionException {
        try {
            // InternalMyBashParser.g:247:1: ( rulePipeline EOF )
            // InternalMyBashParser.g:248:1: rulePipeline EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePipeline();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePipeline"


    // $ANTLR start "rulePipeline"
    // InternalMyBashParser.g:255:1: rulePipeline : ( ( rule__Pipeline__Group__0 ) ) ;
    public final void rulePipeline() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:259:2: ( ( ( rule__Pipeline__Group__0 ) ) )
            // InternalMyBashParser.g:260:2: ( ( rule__Pipeline__Group__0 ) )
            {
            // InternalMyBashParser.g:260:2: ( ( rule__Pipeline__Group__0 ) )
            // InternalMyBashParser.g:261:3: ( rule__Pipeline__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getGroup()); 
            }
            // InternalMyBashParser.g:262:3: ( rule__Pipeline__Group__0 )
            // InternalMyBashParser.g:262:4: rule__Pipeline__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Pipeline__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePipeline"


    // $ANTLR start "entryRuleCommand"
    // InternalMyBashParser.g:271:1: entryRuleCommand : ruleCommand EOF ;
    public final void entryRuleCommand() throws RecognitionException {
        try {
            // InternalMyBashParser.g:272:1: ( ruleCommand EOF )
            // InternalMyBashParser.g:273:1: ruleCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCommand"


    // $ANTLR start "ruleCommand"
    // InternalMyBashParser.g:280:1: ruleCommand : ( ( rule__Command__Alternatives ) ) ;
    public final void ruleCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:284:2: ( ( ( rule__Command__Alternatives ) ) )
            // InternalMyBashParser.g:285:2: ( ( rule__Command__Alternatives ) )
            {
            // InternalMyBashParser.g:285:2: ( ( rule__Command__Alternatives ) )
            // InternalMyBashParser.g:286:3: ( rule__Command__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:287:3: ( rule__Command__Alternatives )
            // InternalMyBashParser.g:287:4: rule__Command__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Command__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCommand"


    // $ANTLR start "entryRuleFunctionDefine"
    // InternalMyBashParser.g:296:1: entryRuleFunctionDefine : ruleFunctionDefine EOF ;
    public final void entryRuleFunctionDefine() throws RecognitionException {
        try {
            // InternalMyBashParser.g:297:1: ( ruleFunctionDefine EOF )
            // InternalMyBashParser.g:298:1: ruleFunctionDefine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionDefine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionDefine"


    // $ANTLR start "ruleFunctionDefine"
    // InternalMyBashParser.g:305:1: ruleFunctionDefine : ( ( rule__FunctionDefine__Alternatives ) ) ;
    public final void ruleFunctionDefine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:309:2: ( ( ( rule__FunctionDefine__Alternatives ) ) )
            // InternalMyBashParser.g:310:2: ( ( rule__FunctionDefine__Alternatives ) )
            {
            // InternalMyBashParser.g:310:2: ( ( rule__FunctionDefine__Alternatives ) )
            // InternalMyBashParser.g:311:3: ( rule__FunctionDefine__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:312:3: ( rule__FunctionDefine__Alternatives )
            // InternalMyBashParser.g:312:4: rule__FunctionDefine__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionDefine"


    // $ANTLR start "entryRuleSimpleCommand"
    // InternalMyBashParser.g:321:1: entryRuleSimpleCommand : ruleSimpleCommand EOF ;
    public final void entryRuleSimpleCommand() throws RecognitionException {
        try {
            // InternalMyBashParser.g:322:1: ( ruleSimpleCommand EOF )
            // InternalMyBashParser.g:323:1: ruleSimpleCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleCommand"


    // $ANTLR start "ruleSimpleCommand"
    // InternalMyBashParser.g:330:1: ruleSimpleCommand : ( ( rule__SimpleCommand__Alternatives ) ) ;
    public final void ruleSimpleCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:334:2: ( ( ( rule__SimpleCommand__Alternatives ) ) )
            // InternalMyBashParser.g:335:2: ( ( rule__SimpleCommand__Alternatives ) )
            {
            // InternalMyBashParser.g:335:2: ( ( rule__SimpleCommand__Alternatives ) )
            // InternalMyBashParser.g:336:3: ( rule__SimpleCommand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:337:3: ( rule__SimpleCommand__Alternatives )
            // InternalMyBashParser.g:337:4: rule__SimpleCommand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleCommand"


    // $ANTLR start "entryRuleShellCommand"
    // InternalMyBashParser.g:346:1: entryRuleShellCommand : ruleShellCommand EOF ;
    public final void entryRuleShellCommand() throws RecognitionException {
        try {
            // InternalMyBashParser.g:347:1: ( ruleShellCommand EOF )
            // InternalMyBashParser.g:348:1: ruleShellCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShellCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleShellCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShellCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShellCommand"


    // $ANTLR start "ruleShellCommand"
    // InternalMyBashParser.g:355:1: ruleShellCommand : ( ( rule__ShellCommand__Alternatives ) ) ;
    public final void ruleShellCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:359:2: ( ( ( rule__ShellCommand__Alternatives ) ) )
            // InternalMyBashParser.g:360:2: ( ( rule__ShellCommand__Alternatives ) )
            {
            // InternalMyBashParser.g:360:2: ( ( rule__ShellCommand__Alternatives ) )
            // InternalMyBashParser.g:361:3: ( rule__ShellCommand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShellCommandAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:362:3: ( rule__ShellCommand__Alternatives )
            // InternalMyBashParser.g:362:4: rule__ShellCommand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ShellCommand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShellCommandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShellCommand"


    // $ANTLR start "entryRuleGroupCommand"
    // InternalMyBashParser.g:371:1: entryRuleGroupCommand : ruleGroupCommand EOF ;
    public final void entryRuleGroupCommand() throws RecognitionException {
        try {
            // InternalMyBashParser.g:372:1: ( ruleGroupCommand EOF )
            // InternalMyBashParser.g:373:1: ruleGroupCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupCommand"


    // $ANTLR start "ruleGroupCommand"
    // InternalMyBashParser.g:380:1: ruleGroupCommand : ( ( rule__GroupCommand__Group__0 ) ) ;
    public final void ruleGroupCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:384:2: ( ( ( rule__GroupCommand__Group__0 ) ) )
            // InternalMyBashParser.g:385:2: ( ( rule__GroupCommand__Group__0 ) )
            {
            // InternalMyBashParser.g:385:2: ( ( rule__GroupCommand__Group__0 ) )
            // InternalMyBashParser.g:386:3: ( rule__GroupCommand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupCommandAccess().getGroup()); 
            }
            // InternalMyBashParser.g:387:3: ( rule__GroupCommand__Group__0 )
            // InternalMyBashParser.g:387:4: rule__GroupCommand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupCommand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupCommandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupCommand"


    // $ANTLR start "entryRuleCondCommand"
    // InternalMyBashParser.g:396:1: entryRuleCondCommand : ruleCondCommand EOF ;
    public final void entryRuleCondCommand() throws RecognitionException {
        try {
            // InternalMyBashParser.g:397:1: ( ruleCondCommand EOF )
            // InternalMyBashParser.g:398:1: ruleCondCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCondCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCondCommand"


    // $ANTLR start "ruleCondCommand"
    // InternalMyBashParser.g:405:1: ruleCondCommand : ( ( rule__CondCommand__Group__0 ) ) ;
    public final void ruleCondCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:409:2: ( ( ( rule__CondCommand__Group__0 ) ) )
            // InternalMyBashParser.g:410:2: ( ( rule__CondCommand__Group__0 ) )
            {
            // InternalMyBashParser.g:410:2: ( ( rule__CondCommand__Group__0 ) )
            // InternalMyBashParser.g:411:3: ( rule__CondCommand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondCommandAccess().getGroup()); 
            }
            // InternalMyBashParser.g:412:3: ( rule__CondCommand__Group__0 )
            // InternalMyBashParser.g:412:4: rule__CondCommand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CondCommand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondCommandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondCommand"


    // $ANTLR start "entryRuleArithmeticCommand"
    // InternalMyBashParser.g:421:1: entryRuleArithmeticCommand : ruleArithmeticCommand EOF ;
    public final void entryRuleArithmeticCommand() throws RecognitionException {
        try {
            // InternalMyBashParser.g:422:1: ( ruleArithmeticCommand EOF )
            // InternalMyBashParser.g:423:1: ruleArithmeticCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArithmeticCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArithmeticCommand"


    // $ANTLR start "ruleArithmeticCommand"
    // InternalMyBashParser.g:430:1: ruleArithmeticCommand : ( ( rule__ArithmeticCommand__Group__0 ) ) ;
    public final void ruleArithmeticCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:434:2: ( ( ( rule__ArithmeticCommand__Group__0 ) ) )
            // InternalMyBashParser.g:435:2: ( ( rule__ArithmeticCommand__Group__0 ) )
            {
            // InternalMyBashParser.g:435:2: ( ( rule__ArithmeticCommand__Group__0 ) )
            // InternalMyBashParser.g:436:3: ( rule__ArithmeticCommand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticCommandAccess().getGroup()); 
            }
            // InternalMyBashParser.g:437:3: ( rule__ArithmeticCommand__Group__0 )
            // InternalMyBashParser.g:437:4: rule__ArithmeticCommand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticCommand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticCommandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArithmeticCommand"


    // $ANTLR start "entryRuleSubshell"
    // InternalMyBashParser.g:446:1: entryRuleSubshell : ruleSubshell EOF ;
    public final void entryRuleSubshell() throws RecognitionException {
        try {
            // InternalMyBashParser.g:447:1: ( ruleSubshell EOF )
            // InternalMyBashParser.g:448:1: ruleSubshell EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubshellRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubshell();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubshellRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubshell"


    // $ANTLR start "ruleSubshell"
    // InternalMyBashParser.g:455:1: ruleSubshell : ( ( rule__Subshell__Group__0 ) ) ;
    public final void ruleSubshell() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:459:2: ( ( ( rule__Subshell__Group__0 ) ) )
            // InternalMyBashParser.g:460:2: ( ( rule__Subshell__Group__0 ) )
            {
            // InternalMyBashParser.g:460:2: ( ( rule__Subshell__Group__0 ) )
            // InternalMyBashParser.g:461:3: ( rule__Subshell__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubshellAccess().getGroup()); 
            }
            // InternalMyBashParser.g:462:3: ( rule__Subshell__Group__0 )
            // InternalMyBashParser.g:462:4: rule__Subshell__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Subshell__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubshellAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubshell"


    // $ANTLR start "entryRuleCommandName"
    // InternalMyBashParser.g:471:1: entryRuleCommandName : ruleCommandName EOF ;
    public final void entryRuleCommandName() throws RecognitionException {
        try {
            // InternalMyBashParser.g:472:1: ( ruleCommandName EOF )
            // InternalMyBashParser.g:473:1: ruleCommandName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCommandName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCommandName"


    // $ANTLR start "ruleCommandName"
    // InternalMyBashParser.g:480:1: ruleCommandName : ( ( rule__CommandName__Alternatives ) ) ;
    public final void ruleCommandName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:484:2: ( ( ( rule__CommandName__Alternatives ) ) )
            // InternalMyBashParser.g:485:2: ( ( rule__CommandName__Alternatives ) )
            {
            // InternalMyBashParser.g:485:2: ( ( rule__CommandName__Alternatives ) )
            // InternalMyBashParser.g:486:3: ( rule__CommandName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandNameAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:487:3: ( rule__CommandName__Alternatives )
            // InternalMyBashParser.g:487:4: rule__CommandName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CommandName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandNameAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCommandName"


    // $ANTLR start "entryRuleCaseStatement"
    // InternalMyBashParser.g:496:1: entryRuleCaseStatement : ruleCaseStatement EOF ;
    public final void entryRuleCaseStatement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:497:1: ( ruleCaseStatement EOF )
            // InternalMyBashParser.g:498:1: ruleCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseStatement"


    // $ANTLR start "ruleCaseStatement"
    // InternalMyBashParser.g:505:1: ruleCaseStatement : ( ( rule__CaseStatement__Group__0 ) ) ;
    public final void ruleCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:509:2: ( ( ( rule__CaseStatement__Group__0 ) ) )
            // InternalMyBashParser.g:510:2: ( ( rule__CaseStatement__Group__0 ) )
            {
            // InternalMyBashParser.g:510:2: ( ( rule__CaseStatement__Group__0 ) )
            // InternalMyBashParser.g:511:3: ( rule__CaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getGroup()); 
            }
            // InternalMyBashParser.g:512:3: ( rule__CaseStatement__Group__0 )
            // InternalMyBashParser.g:512:4: rule__CaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseStatement"


    // $ANTLR start "entryRuleCasePattern"
    // InternalMyBashParser.g:521:1: entryRuleCasePattern : ruleCasePattern EOF ;
    public final void entryRuleCasePattern() throws RecognitionException {
        try {
            // InternalMyBashParser.g:522:1: ( ruleCasePattern EOF )
            // InternalMyBashParser.g:523:1: ruleCasePattern EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCasePattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCasePattern"


    // $ANTLR start "ruleCasePattern"
    // InternalMyBashParser.g:530:1: ruleCasePattern : ( ( rule__CasePattern__Group__0 ) ) ;
    public final void ruleCasePattern() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:534:2: ( ( ( rule__CasePattern__Group__0 ) ) )
            // InternalMyBashParser.g:535:2: ( ( rule__CasePattern__Group__0 ) )
            {
            // InternalMyBashParser.g:535:2: ( ( rule__CasePattern__Group__0 ) )
            // InternalMyBashParser.g:536:3: ( rule__CasePattern__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternAccess().getGroup()); 
            }
            // InternalMyBashParser.g:537:3: ( rule__CasePattern__Group__0 )
            // InternalMyBashParser.g:537:4: rule__CasePattern__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CasePattern__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCasePattern"


    // $ANTLR start "entryRuleCasePatternContinue"
    // InternalMyBashParser.g:546:1: entryRuleCasePatternContinue : ruleCasePatternContinue EOF ;
    public final void entryRuleCasePatternContinue() throws RecognitionException {
        try {
            // InternalMyBashParser.g:547:1: ( ruleCasePatternContinue EOF )
            // InternalMyBashParser.g:548:1: ruleCasePatternContinue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCasePatternContinue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCasePatternContinue"


    // $ANTLR start "ruleCasePatternContinue"
    // InternalMyBashParser.g:555:1: ruleCasePatternContinue : ( ( rule__CasePatternContinue__Group__0 ) ) ;
    public final void ruleCasePatternContinue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:559:2: ( ( ( rule__CasePatternContinue__Group__0 ) ) )
            // InternalMyBashParser.g:560:2: ( ( rule__CasePatternContinue__Group__0 ) )
            {
            // InternalMyBashParser.g:560:2: ( ( rule__CasePatternContinue__Group__0 ) )
            // InternalMyBashParser.g:561:3: ( rule__CasePatternContinue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getGroup()); 
            }
            // InternalMyBashParser.g:562:3: ( rule__CasePatternContinue__Group__0 )
            // InternalMyBashParser.g:562:4: rule__CasePatternContinue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCasePatternContinue"


    // $ANTLR start "entryRulePattern"
    // InternalMyBashParser.g:571:1: entryRulePattern : rulePattern EOF ;
    public final void entryRulePattern() throws RecognitionException {
        try {
            // InternalMyBashParser.g:572:1: ( rulePattern EOF )
            // InternalMyBashParser.g:573:1: rulePattern EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePattern"


    // $ANTLR start "rulePattern"
    // InternalMyBashParser.g:580:1: rulePattern : ( ( rule__Pattern__Group__0 ) ) ;
    public final void rulePattern() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:584:2: ( ( ( rule__Pattern__Group__0 ) ) )
            // InternalMyBashParser.g:585:2: ( ( rule__Pattern__Group__0 ) )
            {
            // InternalMyBashParser.g:585:2: ( ( rule__Pattern__Group__0 ) )
            // InternalMyBashParser.g:586:3: ( rule__Pattern__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getGroup()); 
            }
            // InternalMyBashParser.g:587:3: ( rule__Pattern__Group__0 )
            // InternalMyBashParser.g:587:4: rule__Pattern__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePattern"


    // $ANTLR start "entryRuleIfStatement"
    // InternalMyBashParser.g:596:1: entryRuleIfStatement : ruleIfStatement EOF ;
    public final void entryRuleIfStatement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:597:1: ( ruleIfStatement EOF )
            // InternalMyBashParser.g:598:1: ruleIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIfStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIfStatement"


    // $ANTLR start "ruleIfStatement"
    // InternalMyBashParser.g:605:1: ruleIfStatement : ( ( rule__IfStatement__Group__0 ) ) ;
    public final void ruleIfStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:609:2: ( ( ( rule__IfStatement__Group__0 ) ) )
            // InternalMyBashParser.g:610:2: ( ( rule__IfStatement__Group__0 ) )
            {
            // InternalMyBashParser.g:610:2: ( ( rule__IfStatement__Group__0 ) )
            // InternalMyBashParser.g:611:3: ( rule__IfStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getGroup()); 
            }
            // InternalMyBashParser.g:612:3: ( rule__IfStatement__Group__0 )
            // InternalMyBashParser.g:612:4: rule__IfStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIfStatement"


    // $ANTLR start "entryRuleElseIfBlock"
    // InternalMyBashParser.g:621:1: entryRuleElseIfBlock : ruleElseIfBlock EOF ;
    public final void entryRuleElseIfBlock() throws RecognitionException {
        try {
            // InternalMyBashParser.g:622:1: ( ruleElseIfBlock EOF )
            // InternalMyBashParser.g:623:1: ruleElseIfBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleElseIfBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElseIfBlock"


    // $ANTLR start "ruleElseIfBlock"
    // InternalMyBashParser.g:630:1: ruleElseIfBlock : ( ( rule__ElseIfBlock__Group__0 ) ) ;
    public final void ruleElseIfBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:634:2: ( ( ( rule__ElseIfBlock__Group__0 ) ) )
            // InternalMyBashParser.g:635:2: ( ( rule__ElseIfBlock__Group__0 ) )
            {
            // InternalMyBashParser.g:635:2: ( ( rule__ElseIfBlock__Group__0 ) )
            // InternalMyBashParser.g:636:3: ( rule__ElseIfBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getGroup()); 
            }
            // InternalMyBashParser.g:637:3: ( rule__ElseIfBlock__Group__0 )
            // InternalMyBashParser.g:637:4: rule__ElseIfBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElseIfBlock"


    // $ANTLR start "entryRuleForStatement"
    // InternalMyBashParser.g:646:1: entryRuleForStatement : ruleForStatement EOF ;
    public final void entryRuleForStatement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:647:1: ( ruleForStatement EOF )
            // InternalMyBashParser.g:648:1: ruleForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleForStatement"


    // $ANTLR start "ruleForStatement"
    // InternalMyBashParser.g:655:1: ruleForStatement : ( ( rule__ForStatement__Group__0 ) ) ;
    public final void ruleForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:659:2: ( ( ( rule__ForStatement__Group__0 ) ) )
            // InternalMyBashParser.g:660:2: ( ( rule__ForStatement__Group__0 ) )
            {
            // InternalMyBashParser.g:660:2: ( ( rule__ForStatement__Group__0 ) )
            // InternalMyBashParser.g:661:3: ( rule__ForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getGroup()); 
            }
            // InternalMyBashParser.g:662:3: ( rule__ForStatement__Group__0 )
            // InternalMyBashParser.g:662:4: rule__ForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleForStatement"


    // $ANTLR start "entryRuleWhileStatement"
    // InternalMyBashParser.g:671:1: entryRuleWhileStatement : ruleWhileStatement EOF ;
    public final void entryRuleWhileStatement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:672:1: ( ruleWhileStatement EOF )
            // InternalMyBashParser.g:673:1: ruleWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWhileStatement"


    // $ANTLR start "ruleWhileStatement"
    // InternalMyBashParser.g:680:1: ruleWhileStatement : ( ( rule__WhileStatement__Group__0 ) ) ;
    public final void ruleWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:684:2: ( ( ( rule__WhileStatement__Group__0 ) ) )
            // InternalMyBashParser.g:685:2: ( ( rule__WhileStatement__Group__0 ) )
            {
            // InternalMyBashParser.g:685:2: ( ( rule__WhileStatement__Group__0 ) )
            // InternalMyBashParser.g:686:3: ( rule__WhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getGroup()); 
            }
            // InternalMyBashParser.g:687:3: ( rule__WhileStatement__Group__0 )
            // InternalMyBashParser.g:687:4: rule__WhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWhileStatement"


    // $ANTLR start "entryRuleRedirection"
    // InternalMyBashParser.g:696:1: entryRuleRedirection : ruleRedirection EOF ;
    public final void entryRuleRedirection() throws RecognitionException {
        try {
            // InternalMyBashParser.g:697:1: ( ruleRedirection EOF )
            // InternalMyBashParser.g:698:1: ruleRedirection EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRedirection();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRedirection"


    // $ANTLR start "ruleRedirection"
    // InternalMyBashParser.g:705:1: ruleRedirection : ( ( rule__Redirection__Group__0 ) ) ;
    public final void ruleRedirection() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:709:2: ( ( ( rule__Redirection__Group__0 ) ) )
            // InternalMyBashParser.g:710:2: ( ( rule__Redirection__Group__0 ) )
            {
            // InternalMyBashParser.g:710:2: ( ( rule__Redirection__Group__0 ) )
            // InternalMyBashParser.g:711:3: ( rule__Redirection__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getGroup()); 
            }
            // InternalMyBashParser.g:712:3: ( rule__Redirection__Group__0 )
            // InternalMyBashParser.g:712:4: rule__Redirection__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRedirection"


    // $ANTLR start "entryRuleArray"
    // InternalMyBashParser.g:721:1: entryRuleArray : ruleArray EOF ;
    public final void entryRuleArray() throws RecognitionException {
        try {
            // InternalMyBashParser.g:722:1: ( ruleArray EOF )
            // InternalMyBashParser.g:723:1: ruleArray EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArray();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArray"


    // $ANTLR start "ruleArray"
    // InternalMyBashParser.g:730:1: ruleArray : ( ( rule__Array__Group__0 ) ) ;
    public final void ruleArray() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:734:2: ( ( ( rule__Array__Group__0 ) ) )
            // InternalMyBashParser.g:735:2: ( ( rule__Array__Group__0 ) )
            {
            // InternalMyBashParser.g:735:2: ( ( rule__Array__Group__0 ) )
            // InternalMyBashParser.g:736:3: ( rule__Array__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getGroup()); 
            }
            // InternalMyBashParser.g:737:3: ( rule__Array__Group__0 )
            // InternalMyBashParser.g:737:4: rule__Array__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Array__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArray"


    // $ANTLR start "entryRuleArrayStart"
    // InternalMyBashParser.g:746:1: entryRuleArrayStart : ruleArrayStart EOF ;
    public final void entryRuleArrayStart() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");

        try {
            // InternalMyBashParser.g:750:1: ( ruleArrayStart EOF )
            // InternalMyBashParser.g:751:1: ruleArrayStart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleArrayStart"


    // $ANTLR start "ruleArrayStart"
    // InternalMyBashParser.g:761:1: ruleArrayStart : ( ( rule__ArrayStart__Group__0 ) ) ;
    public final void ruleArrayStart() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:766:2: ( ( ( rule__ArrayStart__Group__0 ) ) )
            // InternalMyBashParser.g:767:2: ( ( rule__ArrayStart__Group__0 ) )
            {
            // InternalMyBashParser.g:767:2: ( ( rule__ArrayStart__Group__0 ) )
            // InternalMyBashParser.g:768:3: ( rule__ArrayStart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:769:3: ( rule__ArrayStart__Group__0 )
            // InternalMyBashParser.g:769:4: rule__ArrayStart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayStart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleArrayStart"


    // $ANTLR start "entryRuleArrayEnd"
    // InternalMyBashParser.g:779:1: entryRuleArrayEnd : ruleArrayEnd EOF ;
    public final void entryRuleArrayEnd() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:783:1: ( ruleArrayEnd EOF )
            // InternalMyBashParser.g:784:1: ruleArrayEnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayEndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayEndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleArrayEnd"


    // $ANTLR start "ruleArrayEnd"
    // InternalMyBashParser.g:794:1: ruleArrayEnd : ( RightParenthesis ) ;
    public final void ruleArrayEnd() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:799:2: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:800:2: ( RightParenthesis )
            {
            // InternalMyBashParser.g:800:2: ( RightParenthesis )
            // InternalMyBashParser.g:801:3: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayEndAccess().getRightParenthesisKeyword()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayEndAccess().getRightParenthesisKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleArrayEnd"


    // $ANTLR start "entryRuleWord"
    // InternalMyBashParser.g:812:1: entryRuleWord : ruleWord EOF ;
    public final void entryRuleWord() throws RecognitionException {
        try {
            // InternalMyBashParser.g:813:1: ( ruleWord EOF )
            // InternalMyBashParser.g:814:1: ruleWord EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWord"


    // $ANTLR start "ruleWord"
    // InternalMyBashParser.g:821:1: ruleWord : ( ( rule__Word__Alternatives ) ) ;
    public final void ruleWord() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:825:2: ( ( ( rule__Word__Alternatives ) ) )
            // InternalMyBashParser.g:826:2: ( ( rule__Word__Alternatives ) )
            {
            // InternalMyBashParser.g:826:2: ( ( rule__Word__Alternatives ) )
            // InternalMyBashParser.g:827:3: ( rule__Word__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:828:3: ( rule__Word__Alternatives )
            // InternalMyBashParser.g:828:4: rule__Word__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Word__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWord"


    // $ANTLR start "entryRuleLiteralWord"
    // InternalMyBashParser.g:837:1: entryRuleLiteralWord : ruleLiteralWord EOF ;
    public final void entryRuleLiteralWord() throws RecognitionException {
        try {
            // InternalMyBashParser.g:838:1: ( ruleLiteralWord EOF )
            // InternalMyBashParser.g:839:1: ruleLiteralWord EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLiteralWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralWord"


    // $ANTLR start "ruleLiteralWord"
    // InternalMyBashParser.g:846:1: ruleLiteralWord : ( ( rule__LiteralWord__Group__0 ) ) ;
    public final void ruleLiteralWord() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:850:2: ( ( ( rule__LiteralWord__Group__0 ) ) )
            // InternalMyBashParser.g:851:2: ( ( rule__LiteralWord__Group__0 ) )
            {
            // InternalMyBashParser.g:851:2: ( ( rule__LiteralWord__Group__0 ) )
            // InternalMyBashParser.g:852:3: ( rule__LiteralWord__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordAccess().getGroup()); 
            }
            // InternalMyBashParser.g:853:3: ( rule__LiteralWord__Group__0 )
            // InternalMyBashParser.g:853:4: rule__LiteralWord__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWord__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralWord"


    // $ANTLR start "entryRuleAssignment"
    // InternalMyBashParser.g:862:1: entryRuleAssignment : ruleAssignment EOF ;
    public final void entryRuleAssignment() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:866:1: ( ruleAssignment EOF )
            // InternalMyBashParser.g:867:1: ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAssignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalMyBashParser.g:877:1: ruleAssignment : ( ( rule__Assignment__Group__0 ) ) ;
    public final void ruleAssignment() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:882:2: ( ( ( rule__Assignment__Group__0 ) ) )
            // InternalMyBashParser.g:883:2: ( ( rule__Assignment__Group__0 ) )
            {
            // InternalMyBashParser.g:883:2: ( ( rule__Assignment__Group__0 ) )
            // InternalMyBashParser.g:884:3: ( rule__Assignment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getGroup()); 
            }
            // InternalMyBashParser.g:885:3: ( rule__Assignment__Group__0 )
            // InternalMyBashParser.g:885:4: rule__Assignment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleLAssignment"
    // InternalMyBashParser.g:895:1: entryRuleLAssignment : ruleLAssignment EOF ;
    public final void entryRuleLAssignment() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:899:1: ( ruleLAssignment EOF )
            // InternalMyBashParser.g:900:1: ruleLAssignment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLAssignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleLAssignment"


    // $ANTLR start "ruleLAssignment"
    // InternalMyBashParser.g:910:1: ruleLAssignment : ( ( rule__LAssignment__Group__0 ) ) ;
    public final void ruleLAssignment() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:915:2: ( ( ( rule__LAssignment__Group__0 ) ) )
            // InternalMyBashParser.g:916:2: ( ( rule__LAssignment__Group__0 ) )
            {
            // InternalMyBashParser.g:916:2: ( ( rule__LAssignment__Group__0 ) )
            // InternalMyBashParser.g:917:3: ( rule__LAssignment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getGroup()); 
            }
            // InternalMyBashParser.g:918:3: ( rule__LAssignment__Group__0 )
            // InternalMyBashParser.g:918:4: rule__LAssignment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LAssignment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleLAssignment"


    // $ANTLR start "entryRuleAssignable"
    // InternalMyBashParser.g:928:1: entryRuleAssignable : ruleAssignable EOF ;
    public final void entryRuleAssignable() throws RecognitionException {
        try {
            // InternalMyBashParser.g:929:1: ( ruleAssignable EOF )
            // InternalMyBashParser.g:930:1: ruleAssignable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAssignable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignable"


    // $ANTLR start "ruleAssignable"
    // InternalMyBashParser.g:937:1: ruleAssignable : ( ( rule__Assignable__Alternatives ) ) ;
    public final void ruleAssignable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:941:2: ( ( ( rule__Assignable__Alternatives ) ) )
            // InternalMyBashParser.g:942:2: ( ( rule__Assignable__Alternatives ) )
            {
            // InternalMyBashParser.g:942:2: ( ( rule__Assignable__Alternatives ) )
            // InternalMyBashParser.g:943:3: ( rule__Assignable__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignableAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:944:3: ( rule__Assignable__Alternatives )
            // InternalMyBashParser.g:944:4: rule__Assignable__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Assignable__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignableAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignable"


    // $ANTLR start "entryRuleWords"
    // InternalMyBashParser.g:953:1: entryRuleWords : ruleWords EOF ;
    public final void entryRuleWords() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:957:1: ( ruleWords EOF )
            // InternalMyBashParser.g:958:1: ruleWords EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWords();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleWords"


    // $ANTLR start "ruleWords"
    // InternalMyBashParser.g:968:1: ruleWords : ( ( ( rule__Words__ElementsAssignment ) ) ( ( rule__Words__ElementsAssignment )* ) ) ;
    public final void ruleWords() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:973:2: ( ( ( ( rule__Words__ElementsAssignment ) ) ( ( rule__Words__ElementsAssignment )* ) ) )
            // InternalMyBashParser.g:974:2: ( ( ( rule__Words__ElementsAssignment ) ) ( ( rule__Words__ElementsAssignment )* ) )
            {
            // InternalMyBashParser.g:974:2: ( ( ( rule__Words__ElementsAssignment ) ) ( ( rule__Words__ElementsAssignment )* ) )
            // InternalMyBashParser.g:975:3: ( ( rule__Words__ElementsAssignment ) ) ( ( rule__Words__ElementsAssignment )* )
            {
            // InternalMyBashParser.g:975:3: ( ( rule__Words__ElementsAssignment ) )
            // InternalMyBashParser.g:976:4: ( rule__Words__ElementsAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordsAccess().getElementsAssignment()); 
            }
            // InternalMyBashParser.g:977:4: ( rule__Words__ElementsAssignment )
            // InternalMyBashParser.g:977:5: rule__Words__ElementsAssignment
            {
            pushFollow(FOLLOW_3);
            rule__Words__ElementsAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordsAccess().getElementsAssignment()); 
            }

            }

            // InternalMyBashParser.g:980:3: ( ( rule__Words__ElementsAssignment )* )
            // InternalMyBashParser.g:981:4: ( rule__Words__ElementsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordsAccess().getElementsAssignment()); 
            }
            // InternalMyBashParser.g:982:4: ( rule__Words__ElementsAssignment )*
            loop1:
            do {
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
            	case 1 :
            	    // InternalMyBashParser.g:982:5: rule__Words__ElementsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Words__ElementsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordsAccess().getElementsAssignment()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleWords"


    // $ANTLR start "entryRuleDQString"
    // InternalMyBashParser.g:993:1: entryRuleDQString : ruleDQString EOF ;
    public final void entryRuleDQString() throws RecognitionException {
        try {
            // InternalMyBashParser.g:994:1: ( ruleDQString EOF )
            // InternalMyBashParser.g:995:1: ruleDQString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDQStringRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDQString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDQStringRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDQString"


    // $ANTLR start "ruleDQString"
    // InternalMyBashParser.g:1002:1: ruleDQString : ( ( rule__DQString__Group__0 ) ) ;
    public final void ruleDQString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1006:2: ( ( ( rule__DQString__Group__0 ) ) )
            // InternalMyBashParser.g:1007:2: ( ( rule__DQString__Group__0 ) )
            {
            // InternalMyBashParser.g:1007:2: ( ( rule__DQString__Group__0 ) )
            // InternalMyBashParser.g:1008:3: ( rule__DQString__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDQStringAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1009:3: ( rule__DQString__Group__0 )
            // InternalMyBashParser.g:1009:4: rule__DQString__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DQString__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDQStringAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDQString"


    // $ANTLR start "entryRuleExpansion"
    // InternalMyBashParser.g:1018:1: entryRuleExpansion : ruleExpansion EOF ;
    public final void entryRuleExpansion() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1019:1: ( ruleExpansion EOF )
            // InternalMyBashParser.g:1020:1: ruleExpansion EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpansionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpansion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpansionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpansion"


    // $ANTLR start "ruleExpansion"
    // InternalMyBashParser.g:1027:1: ruleExpansion : ( ( rule__Expansion__Alternatives ) ) ;
    public final void ruleExpansion() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1031:2: ( ( ( rule__Expansion__Alternatives ) ) )
            // InternalMyBashParser.g:1032:2: ( ( rule__Expansion__Alternatives ) )
            {
            // InternalMyBashParser.g:1032:2: ( ( rule__Expansion__Alternatives ) )
            // InternalMyBashParser.g:1033:3: ( rule__Expansion__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpansionAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:1034:3: ( rule__Expansion__Alternatives )
            // InternalMyBashParser.g:1034:4: rule__Expansion__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Expansion__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpansionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpansion"


    // $ANTLR start "entryRuleWordElement"
    // InternalMyBashParser.g:1043:1: entryRuleWordElement : ruleWordElement EOF ;
    public final void entryRuleWordElement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1044:1: ( ruleWordElement EOF )
            // InternalMyBashParser.g:1045:1: ruleWordElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWordElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWordElement"


    // $ANTLR start "ruleWordElement"
    // InternalMyBashParser.g:1052:1: ruleWordElement : ( ( rule__WordElement__Alternatives ) ) ;
    public final void ruleWordElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1056:2: ( ( ( rule__WordElement__Alternatives ) ) )
            // InternalMyBashParser.g:1057:2: ( ( rule__WordElement__Alternatives ) )
            {
            // InternalMyBashParser.g:1057:2: ( ( rule__WordElement__Alternatives ) )
            // InternalMyBashParser.g:1058:3: ( rule__WordElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordElementAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:1059:3: ( rule__WordElement__Alternatives )
            // InternalMyBashParser.g:1059:4: rule__WordElement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__WordElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWordElement"


    // $ANTLR start "entryRuleStringElement"
    // InternalMyBashParser.g:1068:1: entryRuleStringElement : ruleStringElement EOF ;
    public final void entryRuleStringElement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1069:1: ( ruleStringElement EOF )
            // InternalMyBashParser.g:1070:1: ruleStringElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringElement"


    // $ANTLR start "ruleStringElement"
    // InternalMyBashParser.g:1077:1: ruleStringElement : ( ( rule__StringElement__Alternatives ) ) ;
    public final void ruleStringElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1081:2: ( ( ( rule__StringElement__Alternatives ) ) )
            // InternalMyBashParser.g:1082:2: ( ( rule__StringElement__Alternatives ) )
            {
            // InternalMyBashParser.g:1082:2: ( ( rule__StringElement__Alternatives ) )
            // InternalMyBashParser.g:1083:3: ( rule__StringElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringElementAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:1084:3: ( rule__StringElement__Alternatives )
            // InternalMyBashParser.g:1084:4: rule__StringElement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__StringElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringElement"


    // $ANTLR start "entryRuleLiteralStringPart"
    // InternalMyBashParser.g:1093:1: entryRuleLiteralStringPart : ruleLiteralStringPart EOF ;
    public final void entryRuleLiteralStringPart() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1094:1: ( ruleLiteralStringPart EOF )
            // InternalMyBashParser.g:1095:1: ruleLiteralStringPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralStringPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLiteralStringPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralStringPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralStringPart"


    // $ANTLR start "ruleLiteralStringPart"
    // InternalMyBashParser.g:1102:1: ruleLiteralStringPart : ( ( rule__LiteralStringPart__Group__0 ) ) ;
    public final void ruleLiteralStringPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1106:2: ( ( ( rule__LiteralStringPart__Group__0 ) ) )
            // InternalMyBashParser.g:1107:2: ( ( rule__LiteralStringPart__Group__0 ) )
            {
            // InternalMyBashParser.g:1107:2: ( ( rule__LiteralStringPart__Group__0 ) )
            // InternalMyBashParser.g:1108:3: ( rule__LiteralStringPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralStringPartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1109:3: ( rule__LiteralStringPart__Group__0 )
            // InternalMyBashParser.g:1109:4: rule__LiteralStringPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralStringPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralStringPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralStringPart"


    // $ANTLR start "entryRuleLiteralWordPart"
    // InternalMyBashParser.g:1118:1: entryRuleLiteralWordPart : ruleLiteralWordPart EOF ;
    public final void entryRuleLiteralWordPart() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1119:1: ( ruleLiteralWordPart EOF )
            // InternalMyBashParser.g:1120:1: ruleLiteralWordPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLiteralWordPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralWordPart"


    // $ANTLR start "ruleLiteralWordPart"
    // InternalMyBashParser.g:1127:1: ruleLiteralWordPart : ( ( rule__LiteralWordPart__Group__0 ) ) ;
    public final void ruleLiteralWordPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1131:2: ( ( ( rule__LiteralWordPart__Group__0 ) ) )
            // InternalMyBashParser.g:1132:2: ( ( rule__LiteralWordPart__Group__0 ) )
            {
            // InternalMyBashParser.g:1132:2: ( ( rule__LiteralWordPart__Group__0 ) )
            // InternalMyBashParser.g:1133:3: ( rule__LiteralWordPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1134:3: ( rule__LiteralWordPart__Group__0 )
            // InternalMyBashParser.g:1134:4: rule__LiteralWordPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralWordPart"


    // $ANTLR start "entryRuleCondOrAnd"
    // InternalMyBashParser.g:1143:1: entryRuleCondOrAnd : ruleCondOrAnd EOF ;
    public final void entryRuleCondOrAnd() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1144:1: ( ruleCondOrAnd EOF )
            // InternalMyBashParser.g:1145:1: ruleCondOrAnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCondOrAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCondOrAnd"


    // $ANTLR start "ruleCondOrAnd"
    // InternalMyBashParser.g:1152:1: ruleCondOrAnd : ( ( rule__CondOrAnd__Group__0 ) ) ;
    public final void ruleCondOrAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1156:2: ( ( ( rule__CondOrAnd__Group__0 ) ) )
            // InternalMyBashParser.g:1157:2: ( ( rule__CondOrAnd__Group__0 ) )
            {
            // InternalMyBashParser.g:1157:2: ( ( rule__CondOrAnd__Group__0 ) )
            // InternalMyBashParser.g:1158:3: ( rule__CondOrAnd__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1159:3: ( rule__CondOrAnd__Group__0 )
            // InternalMyBashParser.g:1159:4: rule__CondOrAnd__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondOrAnd"


    // $ANTLR start "entryRuleCondExp"
    // InternalMyBashParser.g:1168:1: entryRuleCondExp : ruleCondExp EOF ;
    public final void entryRuleCondExp() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1169:1: ( ruleCondExp EOF )
            // InternalMyBashParser.g:1170:1: ruleCondExp EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCondExp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCondExp"


    // $ANTLR start "ruleCondExp"
    // InternalMyBashParser.g:1177:1: ruleCondExp : ( ( rule__CondExp__Alternatives ) ) ;
    public final void ruleCondExp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1181:2: ( ( ( rule__CondExp__Alternatives ) ) )
            // InternalMyBashParser.g:1182:2: ( ( rule__CondExp__Alternatives ) )
            {
            // InternalMyBashParser.g:1182:2: ( ( rule__CondExp__Alternatives ) )
            // InternalMyBashParser.g:1183:3: ( rule__CondExp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:1184:3: ( rule__CondExp__Alternatives )
            // InternalMyBashParser.g:1184:4: rule__CondExp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondExp"


    // $ANTLR start "entryRuleCondConst"
    // InternalMyBashParser.g:1193:1: entryRuleCondConst : ruleCondConst EOF ;
    public final void entryRuleCondConst() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1194:1: ( ruleCondConst EOF )
            // InternalMyBashParser.g:1195:1: ruleCondConst EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondConstRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCondConst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondConstRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCondConst"


    // $ANTLR start "ruleCondConst"
    // InternalMyBashParser.g:1202:1: ruleCondConst : ( ( rule__CondConst__ValueAssignment ) ) ;
    public final void ruleCondConst() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1206:2: ( ( ( rule__CondConst__ValueAssignment ) ) )
            // InternalMyBashParser.g:1207:2: ( ( rule__CondConst__ValueAssignment ) )
            {
            // InternalMyBashParser.g:1207:2: ( ( rule__CondConst__ValueAssignment ) )
            // InternalMyBashParser.g:1208:3: ( rule__CondConst__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondConstAccess().getValueAssignment()); 
            }
            // InternalMyBashParser.g:1209:3: ( rule__CondConst__ValueAssignment )
            // InternalMyBashParser.g:1209:4: rule__CondConst__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__CondConst__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondConstAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondConst"


    // $ANTLR start "entryRuleRegularExpression"
    // InternalMyBashParser.g:1218:1: entryRuleRegularExpression : ruleRegularExpression EOF ;
    public final void entryRuleRegularExpression() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:1222:1: ( ruleRegularExpression EOF )
            // InternalMyBashParser.g:1223:1: ruleRegularExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleRegularExpression"


    // $ANTLR start "ruleRegularExpression"
    // InternalMyBashParser.g:1233:1: ruleRegularExpression : ( ( rule__RegularExpression__Group__0 ) ) ;
    public final void ruleRegularExpression() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1238:2: ( ( ( rule__RegularExpression__Group__0 ) ) )
            // InternalMyBashParser.g:1239:2: ( ( rule__RegularExpression__Group__0 ) )
            {
            // InternalMyBashParser.g:1239:2: ( ( rule__RegularExpression__Group__0 ) )
            // InternalMyBashParser.g:1240:3: ( rule__RegularExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1241:3: ( rule__RegularExpression__Group__0 )
            // InternalMyBashParser.g:1241:4: rule__RegularExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RegularExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleRegularExpression"


    // $ANTLR start "entryRuleRegularElements"
    // InternalMyBashParser.g:1251:1: entryRuleRegularElements : ruleRegularElements EOF ;
    public final void entryRuleRegularElements() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1252:1: ( ruleRegularElements EOF )
            // InternalMyBashParser.g:1253:1: ruleRegularElements EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRegularElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRegularElements"


    // $ANTLR start "ruleRegularElements"
    // InternalMyBashParser.g:1260:1: ruleRegularElements : ( ( rule__RegularElements__Group__0 ) ) ;
    public final void ruleRegularElements() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1264:2: ( ( ( rule__RegularElements__Group__0 ) ) )
            // InternalMyBashParser.g:1265:2: ( ( rule__RegularElements__Group__0 ) )
            {
            // InternalMyBashParser.g:1265:2: ( ( rule__RegularElements__Group__0 ) )
            // InternalMyBashParser.g:1266:3: ( rule__RegularElements__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1267:3: ( rule__RegularElements__Group__0 )
            // InternalMyBashParser.g:1267:4: rule__RegularElements__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RegularElements__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRegularElements"


    // $ANTLR start "entryRuleArithmeticExpansion"
    // InternalMyBashParser.g:1276:1: entryRuleArithmeticExpansion : ruleArithmeticExpansion EOF ;
    public final void entryRuleArithmeticExpansion() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1277:1: ( ruleArithmeticExpansion EOF )
            // InternalMyBashParser.g:1278:1: ruleArithmeticExpansion EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArithmeticExpansion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArithmeticExpansion"


    // $ANTLR start "ruleArithmeticExpansion"
    // InternalMyBashParser.g:1285:1: ruleArithmeticExpansion : ( ( rule__ArithmeticExpansion__Group__0 ) ) ;
    public final void ruleArithmeticExpansion() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1289:2: ( ( ( rule__ArithmeticExpansion__Group__0 ) ) )
            // InternalMyBashParser.g:1290:2: ( ( rule__ArithmeticExpansion__Group__0 ) )
            {
            // InternalMyBashParser.g:1290:2: ( ( rule__ArithmeticExpansion__Group__0 ) )
            // InternalMyBashParser.g:1291:3: ( rule__ArithmeticExpansion__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1292:3: ( rule__ArithmeticExpansion__Group__0 )
            // InternalMyBashParser.g:1292:4: rule__ArithmeticExpansion__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticExpansion__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArithmeticExpansion"


    // $ANTLR start "entryRuleIndexEvaluation"
    // InternalMyBashParser.g:1301:1: entryRuleIndexEvaluation : ruleIndexEvaluation EOF ;
    public final void entryRuleIndexEvaluation() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1302:1: ( ruleIndexEvaluation EOF )
            // InternalMyBashParser.g:1303:1: ruleIndexEvaluation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIndexEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIndexEvaluation"


    // $ANTLR start "ruleIndexEvaluation"
    // InternalMyBashParser.g:1310:1: ruleIndexEvaluation : ( ( rule__IndexEvaluation__Group__0 ) ) ;
    public final void ruleIndexEvaluation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1314:2: ( ( ( rule__IndexEvaluation__Group__0 ) ) )
            // InternalMyBashParser.g:1315:2: ( ( rule__IndexEvaluation__Group__0 ) )
            {
            // InternalMyBashParser.g:1315:2: ( ( rule__IndexEvaluation__Group__0 ) )
            // InternalMyBashParser.g:1316:3: ( rule__IndexEvaluation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1317:3: ( rule__IndexEvaluation__Group__0 )
            // InternalMyBashParser.g:1317:4: rule__IndexEvaluation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IndexEvaluation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIndexEvaluation"


    // $ANTLR start "entryRuleIndexEvaluationStart"
    // InternalMyBashParser.g:1326:1: entryRuleIndexEvaluationStart : ruleIndexEvaluationStart EOF ;
    public final void entryRuleIndexEvaluationStart() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");

        try {
            // InternalMyBashParser.g:1330:1: ( ruleIndexEvaluationStart EOF )
            // InternalMyBashParser.g:1331:1: ruleIndexEvaluationStart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationStartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIndexEvaluationStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationStartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleIndexEvaluationStart"


    // $ANTLR start "ruleIndexEvaluationStart"
    // InternalMyBashParser.g:1341:1: ruleIndexEvaluationStart : ( ( rule__IndexEvaluationStart__Group__0 ) ) ;
    public final void ruleIndexEvaluationStart() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1346:2: ( ( ( rule__IndexEvaluationStart__Group__0 ) ) )
            // InternalMyBashParser.g:1347:2: ( ( rule__IndexEvaluationStart__Group__0 ) )
            {
            // InternalMyBashParser.g:1347:2: ( ( rule__IndexEvaluationStart__Group__0 ) )
            // InternalMyBashParser.g:1348:3: ( rule__IndexEvaluationStart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationStartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1349:3: ( rule__IndexEvaluationStart__Group__0 )
            // InternalMyBashParser.g:1349:4: rule__IndexEvaluationStart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IndexEvaluationStart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationStartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleIndexEvaluationStart"


    // $ANTLR start "entryRuleIndexEvaluationEnd"
    // InternalMyBashParser.g:1359:1: entryRuleIndexEvaluationEnd : ruleIndexEvaluationEnd EOF ;
    public final void entryRuleIndexEvaluationEnd() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:1363:1: ( ruleIndexEvaluationEnd EOF )
            // InternalMyBashParser.g:1364:1: ruleIndexEvaluationEnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationEndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIndexEvaluationEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationEndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleIndexEvaluationEnd"


    // $ANTLR start "ruleIndexEvaluationEnd"
    // InternalMyBashParser.g:1374:1: ruleIndexEvaluationEnd : ( RightSquareBracket ) ;
    public final void ruleIndexEvaluationEnd() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1379:2: ( ( RightSquareBracket ) )
            // InternalMyBashParser.g:1380:2: ( RightSquareBracket )
            {
            // InternalMyBashParser.g:1380:2: ( RightSquareBracket )
            // InternalMyBashParser.g:1381:3: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationEndAccess().getRightSquareBracketKeyword()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationEndAccess().getRightSquareBracketKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleIndexEvaluationEnd"


    // $ANTLR start "entryRuleArithmeticExpansionStart"
    // InternalMyBashParser.g:1392:1: entryRuleArithmeticExpansionStart : ruleArithmeticExpansionStart EOF ;
    public final void entryRuleArithmeticExpansionStart() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");

        try {
            // InternalMyBashParser.g:1396:1: ( ruleArithmeticExpansionStart EOF )
            // InternalMyBashParser.g:1397:1: ruleArithmeticExpansionStart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionStartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArithmeticExpansionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionStartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleArithmeticExpansionStart"


    // $ANTLR start "ruleArithmeticExpansionStart"
    // InternalMyBashParser.g:1407:1: ruleArithmeticExpansionStart : ( ( rule__ArithmeticExpansionStart__Group__0 ) ) ;
    public final void ruleArithmeticExpansionStart() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1412:2: ( ( ( rule__ArithmeticExpansionStart__Group__0 ) ) )
            // InternalMyBashParser.g:1413:2: ( ( rule__ArithmeticExpansionStart__Group__0 ) )
            {
            // InternalMyBashParser.g:1413:2: ( ( rule__ArithmeticExpansionStart__Group__0 ) )
            // InternalMyBashParser.g:1414:3: ( rule__ArithmeticExpansionStart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionStartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1415:3: ( rule__ArithmeticExpansionStart__Group__0 )
            // InternalMyBashParser.g:1415:4: rule__ArithmeticExpansionStart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticExpansionStart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionStartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleArithmeticExpansionStart"


    // $ANTLR start "entryRuleArithmeticExpansionEnd"
    // InternalMyBashParser.g:1425:1: entryRuleArithmeticExpansionEnd : ruleArithmeticExpansionEnd EOF ;
    public final void entryRuleArithmeticExpansionEnd() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:1429:1: ( ruleArithmeticExpansionEnd EOF )
            // InternalMyBashParser.g:1430:1: ruleArithmeticExpansionEnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionEndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArithmeticExpansionEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionEndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleArithmeticExpansionEnd"


    // $ANTLR start "ruleArithmeticExpansionEnd"
    // InternalMyBashParser.g:1440:1: ruleArithmeticExpansionEnd : ( RightParenthesisRightParenthesis ) ;
    public final void ruleArithmeticExpansionEnd() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1445:2: ( ( RightParenthesisRightParenthesis ) )
            // InternalMyBashParser.g:1446:2: ( RightParenthesisRightParenthesis )
            {
            // InternalMyBashParser.g:1446:2: ( RightParenthesisRightParenthesis )
            // InternalMyBashParser.g:1447:3: RightParenthesisRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionEndAccess().getRightParenthesisRightParenthesisKeyword()); 
            }
            match(input,RightParenthesisRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionEndAccess().getRightParenthesisRightParenthesisKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleArithmeticExpansionEnd"


    // $ANTLR start "entryRuleParameterExpansion"
    // InternalMyBashParser.g:1458:1: entryRuleParameterExpansion : ruleParameterExpansion EOF ;
    public final void entryRuleParameterExpansion() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1459:1: ( ruleParameterExpansion EOF )
            // InternalMyBashParser.g:1460:1: ruleParameterExpansion EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterExpansion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterExpansion"


    // $ANTLR start "ruleParameterExpansion"
    // InternalMyBashParser.g:1467:1: ruleParameterExpansion : ( ( rule__ParameterExpansion__Alternatives ) ) ;
    public final void ruleParameterExpansion() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1471:2: ( ( ( rule__ParameterExpansion__Alternatives ) ) )
            // InternalMyBashParser.g:1472:2: ( ( rule__ParameterExpansion__Alternatives ) )
            {
            // InternalMyBashParser.g:1472:2: ( ( rule__ParameterExpansion__Alternatives ) )
            // InternalMyBashParser.g:1473:3: ( rule__ParameterExpansion__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:1474:3: ( rule__ParameterExpansion__Alternatives )
            // InternalMyBashParser.g:1474:4: rule__ParameterExpansion__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansion__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterExpansion"


    // $ANTLR start "entryRuleParameterExpansionStart"
    // InternalMyBashParser.g:1483:1: entryRuleParameterExpansionStart : ruleParameterExpansionStart EOF ;
    public final void entryRuleParameterExpansionStart() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");

        try {
            // InternalMyBashParser.g:1487:1: ( ruleParameterExpansionStart EOF )
            // InternalMyBashParser.g:1488:1: ruleParameterExpansionStart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterExpansionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleParameterExpansionStart"


    // $ANTLR start "ruleParameterExpansionStart"
    // InternalMyBashParser.g:1498:1: ruleParameterExpansionStart : ( ( rule__ParameterExpansionStart__Group__0 ) ) ;
    public final void ruleParameterExpansionStart() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1503:2: ( ( ( rule__ParameterExpansionStart__Group__0 ) ) )
            // InternalMyBashParser.g:1504:2: ( ( rule__ParameterExpansionStart__Group__0 ) )
            {
            // InternalMyBashParser.g:1504:2: ( ( rule__ParameterExpansionStart__Group__0 ) )
            // InternalMyBashParser.g:1505:3: ( rule__ParameterExpansionStart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1506:3: ( rule__ParameterExpansionStart__Group__0 )
            // InternalMyBashParser.g:1506:4: rule__ParameterExpansionStart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleParameterExpansionStart"


    // $ANTLR start "entryRuleParameterExpansionEnd"
    // InternalMyBashParser.g:1516:1: entryRuleParameterExpansionEnd : ruleParameterExpansionEnd EOF ;
    public final void entryRuleParameterExpansionEnd() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:1520:1: ( ruleParameterExpansionEnd EOF )
            // InternalMyBashParser.g:1521:1: ruleParameterExpansionEnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionEndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterExpansionEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionEndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleParameterExpansionEnd"


    // $ANTLR start "ruleParameterExpansionEnd"
    // InternalMyBashParser.g:1531:1: ruleParameterExpansionEnd : ( RightCurlyBracket ) ;
    public final void ruleParameterExpansionEnd() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1536:2: ( ( RightCurlyBracket ) )
            // InternalMyBashParser.g:1537:2: ( RightCurlyBracket )
            {
            // InternalMyBashParser.g:1537:2: ( RightCurlyBracket )
            // InternalMyBashParser.g:1538:3: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionEndAccess().getRightCurlyBracketKeyword()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionEndAccess().getRightCurlyBracketKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleParameterExpansionEnd"


    // $ANTLR start "entryRuleParameterProcessor"
    // InternalMyBashParser.g:1549:1: entryRuleParameterProcessor : ruleParameterProcessor EOF ;
    public final void entryRuleParameterProcessor() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1550:1: ( ruleParameterProcessor EOF )
            // InternalMyBashParser.g:1551:1: ruleParameterProcessor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterProcessor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterProcessor"


    // $ANTLR start "ruleParameterProcessor"
    // InternalMyBashParser.g:1558:1: ruleParameterProcessor : ( ( rule__ParameterProcessor__Alternatives ) ) ;
    public final void ruleParameterProcessor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1562:2: ( ( ( rule__ParameterProcessor__Alternatives ) ) )
            // InternalMyBashParser.g:1563:2: ( ( rule__ParameterProcessor__Alternatives ) )
            {
            // InternalMyBashParser.g:1563:2: ( ( rule__ParameterProcessor__Alternatives ) )
            // InternalMyBashParser.g:1564:3: ( rule__ParameterProcessor__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:1565:3: ( rule__ParameterProcessor__Alternatives )
            // InternalMyBashParser.g:1565:4: rule__ParameterProcessor__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterProcessor"


    // $ANTLR start "entryRuleCommandSubstitution"
    // InternalMyBashParser.g:1574:1: entryRuleCommandSubstitution : ruleCommandSubstitution EOF ;
    public final void entryRuleCommandSubstitution() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1575:1: ( ruleCommandSubstitution EOF )
            // InternalMyBashParser.g:1576:1: ruleCommandSubstitution EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCommandSubstitution();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCommandSubstitution"


    // $ANTLR start "ruleCommandSubstitution"
    // InternalMyBashParser.g:1583:1: ruleCommandSubstitution : ( ( rule__CommandSubstitution__Group__0 ) ) ;
    public final void ruleCommandSubstitution() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1587:2: ( ( ( rule__CommandSubstitution__Group__0 ) ) )
            // InternalMyBashParser.g:1588:2: ( ( rule__CommandSubstitution__Group__0 ) )
            {
            // InternalMyBashParser.g:1588:2: ( ( rule__CommandSubstitution__Group__0 ) )
            // InternalMyBashParser.g:1589:3: ( rule__CommandSubstitution__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1590:3: ( rule__CommandSubstitution__Group__0 )
            // InternalMyBashParser.g:1590:4: rule__CommandSubstitution__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CommandSubstitution__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCommandSubstitution"


    // $ANTLR start "entryRuleCommandSubstitutionStart"
    // InternalMyBashParser.g:1599:1: entryRuleCommandSubstitutionStart : ruleCommandSubstitutionStart EOF ;
    public final void entryRuleCommandSubstitutionStart() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");

        try {
            // InternalMyBashParser.g:1603:1: ( ruleCommandSubstitutionStart EOF )
            // InternalMyBashParser.g:1604:1: ruleCommandSubstitutionStart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionStartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCommandSubstitutionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionStartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleCommandSubstitutionStart"


    // $ANTLR start "ruleCommandSubstitutionStart"
    // InternalMyBashParser.g:1614:1: ruleCommandSubstitutionStart : ( ( rule__CommandSubstitutionStart__Group__0 ) ) ;
    public final void ruleCommandSubstitutionStart() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1619:2: ( ( ( rule__CommandSubstitutionStart__Group__0 ) ) )
            // InternalMyBashParser.g:1620:2: ( ( rule__CommandSubstitutionStart__Group__0 ) )
            {
            // InternalMyBashParser.g:1620:2: ( ( rule__CommandSubstitutionStart__Group__0 ) )
            // InternalMyBashParser.g:1621:3: ( rule__CommandSubstitutionStart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionStartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1622:3: ( rule__CommandSubstitutionStart__Group__0 )
            // InternalMyBashParser.g:1622:4: rule__CommandSubstitutionStart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CommandSubstitutionStart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionStartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleCommandSubstitutionStart"


    // $ANTLR start "entryRuleCommandSubstitutionStartEnd"
    // InternalMyBashParser.g:1632:1: entryRuleCommandSubstitutionStartEnd : ruleCommandSubstitutionStartEnd EOF ;
    public final void entryRuleCommandSubstitutionStartEnd() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:1636:1: ( ruleCommandSubstitutionStartEnd EOF )
            // InternalMyBashParser.g:1637:1: ruleCommandSubstitutionStartEnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionStartEndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCommandSubstitutionStartEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionStartEndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleCommandSubstitutionStartEnd"


    // $ANTLR start "ruleCommandSubstitutionStartEnd"
    // InternalMyBashParser.g:1647:1: ruleCommandSubstitutionStartEnd : ( RULE_CS_END ) ;
    public final void ruleCommandSubstitutionStartEnd() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1652:2: ( ( RULE_CS_END ) )
            // InternalMyBashParser.g:1653:2: ( RULE_CS_END )
            {
            // InternalMyBashParser.g:1653:2: ( RULE_CS_END )
            // InternalMyBashParser.g:1654:3: RULE_CS_END
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionStartEndAccess().getCS_ENDTerminalRuleCall()); 
            }
            match(input,RULE_CS_END,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionStartEndAccess().getCS_ENDTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleCommandSubstitutionStartEnd"


    // $ANTLR start "entryRuleProcessSubstitution"
    // InternalMyBashParser.g:1665:1: entryRuleProcessSubstitution : ruleProcessSubstitution EOF ;
    public final void entryRuleProcessSubstitution() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1666:1: ( ruleProcessSubstitution EOF )
            // InternalMyBashParser.g:1667:1: ruleProcessSubstitution EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProcessSubstitution();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProcessSubstitution"


    // $ANTLR start "ruleProcessSubstitution"
    // InternalMyBashParser.g:1674:1: ruleProcessSubstitution : ( ( rule__ProcessSubstitution__Group__0 ) ) ;
    public final void ruleProcessSubstitution() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1678:2: ( ( ( rule__ProcessSubstitution__Group__0 ) ) )
            // InternalMyBashParser.g:1679:2: ( ( rule__ProcessSubstitution__Group__0 ) )
            {
            // InternalMyBashParser.g:1679:2: ( ( rule__ProcessSubstitution__Group__0 ) )
            // InternalMyBashParser.g:1680:3: ( rule__ProcessSubstitution__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1681:3: ( rule__ProcessSubstitution__Group__0 )
            // InternalMyBashParser.g:1681:4: rule__ProcessSubstitution__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitution__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProcessSubstitution"


    // $ANTLR start "entryRuleProcessSubstitutionStart"
    // InternalMyBashParser.g:1690:1: entryRuleProcessSubstitutionStart : ruleProcessSubstitutionStart EOF ;
    public final void entryRuleProcessSubstitutionStart() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");

        try {
            // InternalMyBashParser.g:1694:1: ( ruleProcessSubstitutionStart EOF )
            // InternalMyBashParser.g:1695:1: ruleProcessSubstitutionStart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionStartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProcessSubstitutionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionStartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleProcessSubstitutionStart"


    // $ANTLR start "ruleProcessSubstitutionStart"
    // InternalMyBashParser.g:1705:1: ruleProcessSubstitutionStart : ( ( rule__ProcessSubstitutionStart__Group__0 ) ) ;
    public final void ruleProcessSubstitutionStart() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_C_LINE", "RULE_WS", "RULE_HIDEN_NEW_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1710:2: ( ( ( rule__ProcessSubstitutionStart__Group__0 ) ) )
            // InternalMyBashParser.g:1711:2: ( ( rule__ProcessSubstitutionStart__Group__0 ) )
            {
            // InternalMyBashParser.g:1711:2: ( ( rule__ProcessSubstitutionStart__Group__0 ) )
            // InternalMyBashParser.g:1712:3: ( rule__ProcessSubstitutionStart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionStartAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1713:3: ( rule__ProcessSubstitutionStart__Group__0 )
            // InternalMyBashParser.g:1713:4: rule__ProcessSubstitutionStart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitutionStart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionStartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleProcessSubstitutionStart"


    // $ANTLR start "entryRuleProcessSubstitutionEnd"
    // InternalMyBashParser.g:1723:1: entryRuleProcessSubstitutionEnd : ruleProcessSubstitutionEnd EOF ;
    public final void entryRuleProcessSubstitutionEnd() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");

        try {
            // InternalMyBashParser.g:1727:1: ( ruleProcessSubstitutionEnd EOF )
            // InternalMyBashParser.g:1728:1: ruleProcessSubstitutionEnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionEndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProcessSubstitutionEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionEndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleProcessSubstitutionEnd"


    // $ANTLR start "ruleProcessSubstitutionEnd"
    // InternalMyBashParser.g:1738:1: ruleProcessSubstitutionEnd : ( RightParenthesis ) ;
    public final void ruleProcessSubstitutionEnd() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_C_LINE");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1743:2: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:1744:2: ( RightParenthesis )
            {
            // InternalMyBashParser.g:1744:2: ( RightParenthesis )
            // InternalMyBashParser.g:1745:3: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionEndAccess().getRightParenthesisKeyword()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionEndAccess().getRightParenthesisKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleProcessSubstitutionEnd"


    // $ANTLR start "entryRuleEvaluation"
    // InternalMyBashParser.g:1756:1: entryRuleEvaluation : ruleEvaluation EOF ;
    public final void entryRuleEvaluation() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1757:1: ( ruleEvaluation EOF )
            // InternalMyBashParser.g:1758:1: ruleEvaluation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEvaluation"


    // $ANTLR start "ruleEvaluation"
    // InternalMyBashParser.g:1765:1: ruleEvaluation : ( ( rule__Evaluation__Group__0 ) ) ;
    public final void ruleEvaluation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1769:2: ( ( ( rule__Evaluation__Group__0 ) ) )
            // InternalMyBashParser.g:1770:2: ( ( rule__Evaluation__Group__0 ) )
            {
            // InternalMyBashParser.g:1770:2: ( ( rule__Evaluation__Group__0 ) )
            // InternalMyBashParser.g:1771:3: ( rule__Evaluation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1772:3: ( rule__Evaluation__Group__0 )
            // InternalMyBashParser.g:1772:4: rule__Evaluation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Evaluation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEvaluation"


    // $ANTLR start "entryRuleArithmetic"
    // InternalMyBashParser.g:1781:1: entryRuleArithmetic : ruleArithmetic EOF ;
    public final void entryRuleArithmetic() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1782:1: ( ruleArithmetic EOF )
            // InternalMyBashParser.g:1783:1: ruleArithmetic EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArithmetic();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArithmetic"


    // $ANTLR start "ruleArithmetic"
    // InternalMyBashParser.g:1790:1: ruleArithmetic : ( ( rule__Arithmetic__Alternatives ) ) ;
    public final void ruleArithmetic() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1794:2: ( ( ( rule__Arithmetic__Alternatives ) ) )
            // InternalMyBashParser.g:1795:2: ( ( rule__Arithmetic__Alternatives ) )
            {
            // InternalMyBashParser.g:1795:2: ( ( rule__Arithmetic__Alternatives ) )
            // InternalMyBashParser.g:1796:3: ( rule__Arithmetic__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:1797:3: ( rule__Arithmetic__Alternatives )
            // InternalMyBashParser.g:1797:4: rule__Arithmetic__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Arithmetic__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArithmetic"


    // $ANTLR start "entryRuleConditionalOperator"
    // InternalMyBashParser.g:1806:1: entryRuleConditionalOperator : ruleConditionalOperator EOF ;
    public final void entryRuleConditionalOperator() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1807:1: ( ruleConditionalOperator EOF )
            // InternalMyBashParser.g:1808:1: ruleConditionalOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleConditionalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConditionalOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalMyBashParser.g:1815:1: ruleConditionalOperator : ( ( rule__ConditionalOperator__Group__0 ) ) ;
    public final void ruleConditionalOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1819:2: ( ( ( rule__ConditionalOperator__Group__0 ) ) )
            // InternalMyBashParser.g:1820:2: ( ( rule__ConditionalOperator__Group__0 ) )
            {
            // InternalMyBashParser.g:1820:2: ( ( rule__ConditionalOperator__Group__0 ) )
            // InternalMyBashParser.g:1821:3: ( rule__ConditionalOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1822:3: ( rule__ConditionalOperator__Group__0 )
            // InternalMyBashParser.g:1822:4: rule__ConditionalOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "entryRuleLogicOr"
    // InternalMyBashParser.g:1831:1: entryRuleLogicOr : ruleLogicOr EOF ;
    public final void entryRuleLogicOr() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1832:1: ( ruleLogicOr EOF )
            // InternalMyBashParser.g:1833:1: ruleLogicOr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLogicOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogicOr"


    // $ANTLR start "ruleLogicOr"
    // InternalMyBashParser.g:1840:1: ruleLogicOr : ( ( rule__LogicOr__Group__0 ) ) ;
    public final void ruleLogicOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1844:2: ( ( ( rule__LogicOr__Group__0 ) ) )
            // InternalMyBashParser.g:1845:2: ( ( rule__LogicOr__Group__0 ) )
            {
            // InternalMyBashParser.g:1845:2: ( ( rule__LogicOr__Group__0 ) )
            // InternalMyBashParser.g:1846:3: ( rule__LogicOr__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1847:3: ( rule__LogicOr__Group__0 )
            // InternalMyBashParser.g:1847:4: rule__LogicOr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LogicOr__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicOr"


    // $ANTLR start "entryRuleLogicAnd"
    // InternalMyBashParser.g:1856:1: entryRuleLogicAnd : ruleLogicAnd EOF ;
    public final void entryRuleLogicAnd() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1857:1: ( ruleLogicAnd EOF )
            // InternalMyBashParser.g:1858:1: ruleLogicAnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLogicAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogicAnd"


    // $ANTLR start "ruleLogicAnd"
    // InternalMyBashParser.g:1865:1: ruleLogicAnd : ( ( rule__LogicAnd__Group__0 ) ) ;
    public final void ruleLogicAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1869:2: ( ( ( rule__LogicAnd__Group__0 ) ) )
            // InternalMyBashParser.g:1870:2: ( ( rule__LogicAnd__Group__0 ) )
            {
            // InternalMyBashParser.g:1870:2: ( ( rule__LogicAnd__Group__0 ) )
            // InternalMyBashParser.g:1871:3: ( rule__LogicAnd__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1872:3: ( rule__LogicAnd__Group__0 )
            // InternalMyBashParser.g:1872:4: rule__LogicAnd__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LogicAnd__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicAnd"


    // $ANTLR start "entryRuleBitwiseOR"
    // InternalMyBashParser.g:1881:1: entryRuleBitwiseOR : ruleBitwiseOR EOF ;
    public final void entryRuleBitwiseOR() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1882:1: ( ruleBitwiseOR EOF )
            // InternalMyBashParser.g:1883:1: ruleBitwiseOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBitwiseOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseOR"


    // $ANTLR start "ruleBitwiseOR"
    // InternalMyBashParser.g:1890:1: ruleBitwiseOR : ( ( rule__BitwiseOR__Group__0 ) ) ;
    public final void ruleBitwiseOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1894:2: ( ( ( rule__BitwiseOR__Group__0 ) ) )
            // InternalMyBashParser.g:1895:2: ( ( rule__BitwiseOR__Group__0 ) )
            {
            // InternalMyBashParser.g:1895:2: ( ( rule__BitwiseOR__Group__0 ) )
            // InternalMyBashParser.g:1896:3: ( rule__BitwiseOR__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1897:3: ( rule__BitwiseOR__Group__0 )
            // InternalMyBashParser.g:1897:4: rule__BitwiseOR__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseOR"


    // $ANTLR start "entryRuleBitwiseExclusiveOR"
    // InternalMyBashParser.g:1906:1: entryRuleBitwiseExclusiveOR : ruleBitwiseExclusiveOR EOF ;
    public final void entryRuleBitwiseExclusiveOR() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1907:1: ( ruleBitwiseExclusiveOR EOF )
            // InternalMyBashParser.g:1908:1: ruleBitwiseExclusiveOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBitwiseExclusiveOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseExclusiveOR"


    // $ANTLR start "ruleBitwiseExclusiveOR"
    // InternalMyBashParser.g:1915:1: ruleBitwiseExclusiveOR : ( ( rule__BitwiseExclusiveOR__Group__0 ) ) ;
    public final void ruleBitwiseExclusiveOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1919:2: ( ( ( rule__BitwiseExclusiveOR__Group__0 ) ) )
            // InternalMyBashParser.g:1920:2: ( ( rule__BitwiseExclusiveOR__Group__0 ) )
            {
            // InternalMyBashParser.g:1920:2: ( ( rule__BitwiseExclusiveOR__Group__0 ) )
            // InternalMyBashParser.g:1921:3: ( rule__BitwiseExclusiveOR__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1922:3: ( rule__BitwiseExclusiveOR__Group__0 )
            // InternalMyBashParser.g:1922:4: rule__BitwiseExclusiveOR__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseExclusiveOR"


    // $ANTLR start "entryRuleBitwiseAND"
    // InternalMyBashParser.g:1931:1: entryRuleBitwiseAND : ruleBitwiseAND EOF ;
    public final void entryRuleBitwiseAND() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1932:1: ( ruleBitwiseAND EOF )
            // InternalMyBashParser.g:1933:1: ruleBitwiseAND EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBitwiseAND();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseAND"


    // $ANTLR start "ruleBitwiseAND"
    // InternalMyBashParser.g:1940:1: ruleBitwiseAND : ( ( rule__BitwiseAND__Group__0 ) ) ;
    public final void ruleBitwiseAND() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1944:2: ( ( ( rule__BitwiseAND__Group__0 ) ) )
            // InternalMyBashParser.g:1945:2: ( ( rule__BitwiseAND__Group__0 ) )
            {
            // InternalMyBashParser.g:1945:2: ( ( rule__BitwiseAND__Group__0 ) )
            // InternalMyBashParser.g:1946:3: ( rule__BitwiseAND__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1947:3: ( rule__BitwiseAND__Group__0 )
            // InternalMyBashParser.g:1947:4: rule__BitwiseAND__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseAND"


    // $ANTLR start "entryRuleEqualityAndInequality"
    // InternalMyBashParser.g:1956:1: entryRuleEqualityAndInequality : ruleEqualityAndInequality EOF ;
    public final void entryRuleEqualityAndInequality() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1957:1: ( ruleEqualityAndInequality EOF )
            // InternalMyBashParser.g:1958:1: ruleEqualityAndInequality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEqualityAndInequality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEqualityAndInequality"


    // $ANTLR start "ruleEqualityAndInequality"
    // InternalMyBashParser.g:1965:1: ruleEqualityAndInequality : ( ( rule__EqualityAndInequality__Group__0 ) ) ;
    public final void ruleEqualityAndInequality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1969:2: ( ( ( rule__EqualityAndInequality__Group__0 ) ) )
            // InternalMyBashParser.g:1970:2: ( ( rule__EqualityAndInequality__Group__0 ) )
            {
            // InternalMyBashParser.g:1970:2: ( ( rule__EqualityAndInequality__Group__0 ) )
            // InternalMyBashParser.g:1971:3: ( rule__EqualityAndInequality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1972:3: ( rule__EqualityAndInequality__Group__0 )
            // InternalMyBashParser.g:1972:4: rule__EqualityAndInequality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityAndInequality"


    // $ANTLR start "entryRuleComparison"
    // InternalMyBashParser.g:1981:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalMyBashParser.g:1982:1: ( ruleComparison EOF )
            // InternalMyBashParser.g:1983:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalMyBashParser.g:1990:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:1994:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalMyBashParser.g:1995:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalMyBashParser.g:1995:2: ( ( rule__Comparison__Group__0 ) )
            // InternalMyBashParser.g:1996:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalMyBashParser.g:1997:3: ( rule__Comparison__Group__0 )
            // InternalMyBashParser.g:1997:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleBitwiseShifts"
    // InternalMyBashParser.g:2006:1: entryRuleBitwiseShifts : ruleBitwiseShifts EOF ;
    public final void entryRuleBitwiseShifts() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2007:1: ( ruleBitwiseShifts EOF )
            // InternalMyBashParser.g:2008:1: ruleBitwiseShifts EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBitwiseShifts();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseShifts"


    // $ANTLR start "ruleBitwiseShifts"
    // InternalMyBashParser.g:2015:1: ruleBitwiseShifts : ( ( rule__BitwiseShifts__Group__0 ) ) ;
    public final void ruleBitwiseShifts() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2019:2: ( ( ( rule__BitwiseShifts__Group__0 ) ) )
            // InternalMyBashParser.g:2020:2: ( ( rule__BitwiseShifts__Group__0 ) )
            {
            // InternalMyBashParser.g:2020:2: ( ( rule__BitwiseShifts__Group__0 ) )
            // InternalMyBashParser.g:2021:3: ( rule__BitwiseShifts__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2022:3: ( rule__BitwiseShifts__Group__0 )
            // InternalMyBashParser.g:2022:4: rule__BitwiseShifts__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseShifts"


    // $ANTLR start "entryRuleAdditionSubtraction"
    // InternalMyBashParser.g:2031:1: entryRuleAdditionSubtraction : ruleAdditionSubtraction EOF ;
    public final void entryRuleAdditionSubtraction() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2032:1: ( ruleAdditionSubtraction EOF )
            // InternalMyBashParser.g:2033:1: ruleAdditionSubtraction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAdditionSubtraction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAdditionSubtraction"


    // $ANTLR start "ruleAdditionSubtraction"
    // InternalMyBashParser.g:2040:1: ruleAdditionSubtraction : ( ( rule__AdditionSubtraction__Group__0 ) ) ;
    public final void ruleAdditionSubtraction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2044:2: ( ( ( rule__AdditionSubtraction__Group__0 ) ) )
            // InternalMyBashParser.g:2045:2: ( ( rule__AdditionSubtraction__Group__0 ) )
            {
            // InternalMyBashParser.g:2045:2: ( ( rule__AdditionSubtraction__Group__0 ) )
            // InternalMyBashParser.g:2046:3: ( rule__AdditionSubtraction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2047:3: ( rule__AdditionSubtraction__Group__0 )
            // InternalMyBashParser.g:2047:4: rule__AdditionSubtraction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAdditionSubtraction"


    // $ANTLR start "entryRuleMultiplicationDivisionRemainder"
    // InternalMyBashParser.g:2056:1: entryRuleMultiplicationDivisionRemainder : ruleMultiplicationDivisionRemainder EOF ;
    public final void entryRuleMultiplicationDivisionRemainder() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2057:1: ( ruleMultiplicationDivisionRemainder EOF )
            // InternalMyBashParser.g:2058:1: ruleMultiplicationDivisionRemainder EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultiplicationDivisionRemainder();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicationDivisionRemainder"


    // $ANTLR start "ruleMultiplicationDivisionRemainder"
    // InternalMyBashParser.g:2065:1: ruleMultiplicationDivisionRemainder : ( ( rule__MultiplicationDivisionRemainder__Group__0 ) ) ;
    public final void ruleMultiplicationDivisionRemainder() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2069:2: ( ( ( rule__MultiplicationDivisionRemainder__Group__0 ) ) )
            // InternalMyBashParser.g:2070:2: ( ( rule__MultiplicationDivisionRemainder__Group__0 ) )
            {
            // InternalMyBashParser.g:2070:2: ( ( rule__MultiplicationDivisionRemainder__Group__0 ) )
            // InternalMyBashParser.g:2071:3: ( rule__MultiplicationDivisionRemainder__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2072:3: ( rule__MultiplicationDivisionRemainder__Group__0 )
            // InternalMyBashParser.g:2072:4: rule__MultiplicationDivisionRemainder__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicationDivisionRemainder"


    // $ANTLR start "entryRuleExponentiation"
    // InternalMyBashParser.g:2081:1: entryRuleExponentiation : ruleExponentiation EOF ;
    public final void entryRuleExponentiation() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2082:1: ( ruleExponentiation EOF )
            // InternalMyBashParser.g:2083:1: ruleExponentiation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExponentiation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExponentiation"


    // $ANTLR start "ruleExponentiation"
    // InternalMyBashParser.g:2090:1: ruleExponentiation : ( ( rule__Exponentiation__Group__0 ) ) ;
    public final void ruleExponentiation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2094:2: ( ( ( rule__Exponentiation__Group__0 ) ) )
            // InternalMyBashParser.g:2095:2: ( ( rule__Exponentiation__Group__0 ) )
            {
            // InternalMyBashParser.g:2095:2: ( ( rule__Exponentiation__Group__0 ) )
            // InternalMyBashParser.g:2096:3: ( rule__Exponentiation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2097:3: ( rule__Exponentiation__Group__0 )
            // InternalMyBashParser.g:2097:4: rule__Exponentiation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Exponentiation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExponentiation"


    // $ANTLR start "entryRuleLogicalAndBitwiseNegation"
    // InternalMyBashParser.g:2106:1: entryRuleLogicalAndBitwiseNegation : ruleLogicalAndBitwiseNegation EOF ;
    public final void entryRuleLogicalAndBitwiseNegation() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2107:1: ( ruleLogicalAndBitwiseNegation EOF )
            // InternalMyBashParser.g:2108:1: ruleLogicalAndBitwiseNegation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndBitwiseNegationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLogicalAndBitwiseNegation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndBitwiseNegationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogicalAndBitwiseNegation"


    // $ANTLR start "ruleLogicalAndBitwiseNegation"
    // InternalMyBashParser.g:2115:1: ruleLogicalAndBitwiseNegation : ( ( rule__LogicalAndBitwiseNegation__Alternatives ) ) ;
    public final void ruleLogicalAndBitwiseNegation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2119:2: ( ( ( rule__LogicalAndBitwiseNegation__Alternatives ) ) )
            // InternalMyBashParser.g:2120:2: ( ( rule__LogicalAndBitwiseNegation__Alternatives ) )
            {
            // InternalMyBashParser.g:2120:2: ( ( rule__LogicalAndBitwiseNegation__Alternatives ) )
            // InternalMyBashParser.g:2121:3: ( rule__LogicalAndBitwiseNegation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndBitwiseNegationAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:2122:3: ( rule__LogicalAndBitwiseNegation__Alternatives )
            // InternalMyBashParser.g:2122:4: rule__LogicalAndBitwiseNegation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndBitwiseNegation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndBitwiseNegationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicalAndBitwiseNegation"


    // $ANTLR start "entryRuleUnaryMinusAndPlus"
    // InternalMyBashParser.g:2131:1: entryRuleUnaryMinusAndPlus : ruleUnaryMinusAndPlus EOF ;
    public final void entryRuleUnaryMinusAndPlus() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2132:1: ( ruleUnaryMinusAndPlus EOF )
            // InternalMyBashParser.g:2133:1: ruleUnaryMinusAndPlus EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryMinusAndPlusRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnaryMinusAndPlus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryMinusAndPlusRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryMinusAndPlus"


    // $ANTLR start "ruleUnaryMinusAndPlus"
    // InternalMyBashParser.g:2140:1: ruleUnaryMinusAndPlus : ( ( rule__UnaryMinusAndPlus__Alternatives ) ) ;
    public final void ruleUnaryMinusAndPlus() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2144:2: ( ( ( rule__UnaryMinusAndPlus__Alternatives ) ) )
            // InternalMyBashParser.g:2145:2: ( ( rule__UnaryMinusAndPlus__Alternatives ) )
            {
            // InternalMyBashParser.g:2145:2: ( ( rule__UnaryMinusAndPlus__Alternatives ) )
            // InternalMyBashParser.g:2146:3: ( rule__UnaryMinusAndPlus__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryMinusAndPlusAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:2147:3: ( rule__UnaryMinusAndPlus__Alternatives )
            // InternalMyBashParser.g:2147:4: rule__UnaryMinusAndPlus__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryMinusAndPlus__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryMinusAndPlusAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryMinusAndPlus"


    // $ANTLR start "entryRulePreDecrement"
    // InternalMyBashParser.g:2156:1: entryRulePreDecrement : rulePreDecrement EOF ;
    public final void entryRulePreDecrement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2157:1: ( rulePreDecrement EOF )
            // InternalMyBashParser.g:2158:1: rulePreDecrement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreDecrementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePreDecrement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreDecrementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreDecrement"


    // $ANTLR start "rulePreDecrement"
    // InternalMyBashParser.g:2165:1: rulePreDecrement : ( ( rule__PreDecrement__Alternatives ) ) ;
    public final void rulePreDecrement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2169:2: ( ( ( rule__PreDecrement__Alternatives ) ) )
            // InternalMyBashParser.g:2170:2: ( ( rule__PreDecrement__Alternatives ) )
            {
            // InternalMyBashParser.g:2170:2: ( ( rule__PreDecrement__Alternatives ) )
            // InternalMyBashParser.g:2171:3: ( rule__PreDecrement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreDecrementAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:2172:3: ( rule__PreDecrement__Alternatives )
            // InternalMyBashParser.g:2172:4: rule__PreDecrement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PreDecrement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreDecrementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreDecrement"


    // $ANTLR start "entryRulePostDecrement"
    // InternalMyBashParser.g:2181:1: entryRulePostDecrement : rulePostDecrement EOF ;
    public final void entryRulePostDecrement() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2182:1: ( rulePostDecrement EOF )
            // InternalMyBashParser.g:2183:1: rulePostDecrement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostDecrementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePostDecrement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostDecrementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePostDecrement"


    // $ANTLR start "rulePostDecrement"
    // InternalMyBashParser.g:2190:1: rulePostDecrement : ( ( rule__PostDecrement__Group__0 ) ) ;
    public final void rulePostDecrement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2194:2: ( ( ( rule__PostDecrement__Group__0 ) ) )
            // InternalMyBashParser.g:2195:2: ( ( rule__PostDecrement__Group__0 ) )
            {
            // InternalMyBashParser.g:2195:2: ( ( rule__PostDecrement__Group__0 ) )
            // InternalMyBashParser.g:2196:3: ( rule__PostDecrement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostDecrementAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2197:3: ( rule__PostDecrement__Group__0 )
            // InternalMyBashParser.g:2197:4: rule__PostDecrement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PostDecrement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostDecrementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePostDecrement"


    // $ANTLR start "entryRulePrimaryItem"
    // InternalMyBashParser.g:2206:1: entryRulePrimaryItem : rulePrimaryItem EOF ;
    public final void entryRulePrimaryItem() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2207:1: ( rulePrimaryItem EOF )
            // InternalMyBashParser.g:2208:1: rulePrimaryItem EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimaryItem();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryItem"


    // $ANTLR start "rulePrimaryItem"
    // InternalMyBashParser.g:2215:1: rulePrimaryItem : ( ( rule__PrimaryItem__Alternatives ) ) ;
    public final void rulePrimaryItem() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2219:2: ( ( ( rule__PrimaryItem__Alternatives ) ) )
            // InternalMyBashParser.g:2220:2: ( ( rule__PrimaryItem__Alternatives ) )
            {
            // InternalMyBashParser.g:2220:2: ( ( rule__PrimaryItem__Alternatives ) )
            // InternalMyBashParser.g:2221:3: ( rule__PrimaryItem__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:2222:3: ( rule__PrimaryItem__Alternatives )
            // InternalMyBashParser.g:2222:4: rule__PrimaryItem__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryItem"


    // $ANTLR start "entryRuleVariableId"
    // InternalMyBashParser.g:2231:1: entryRuleVariableId : ruleVariableId EOF ;
    public final void entryRuleVariableId() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2232:1: ( ruleVariableId EOF )
            // InternalMyBashParser.g:2233:1: ruleVariableId EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableIdRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVariableId();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableIdRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVariableId"


    // $ANTLR start "ruleVariableId"
    // InternalMyBashParser.g:2240:1: ruleVariableId : ( ( rule__VariableId__Group__0 ) ) ;
    public final void ruleVariableId() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2244:2: ( ( ( rule__VariableId__Group__0 ) ) )
            // InternalMyBashParser.g:2245:2: ( ( rule__VariableId__Group__0 ) )
            {
            // InternalMyBashParser.g:2245:2: ( ( rule__VariableId__Group__0 ) )
            // InternalMyBashParser.g:2246:3: ( rule__VariableId__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableIdAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2247:3: ( rule__VariableId__Group__0 )
            // InternalMyBashParser.g:2247:4: rule__VariableId__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VariableId__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableIdAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVariableId"


    // $ANTLR start "entryRuleFunctionName"
    // InternalMyBashParser.g:2256:1: entryRuleFunctionName : ruleFunctionName EOF ;
    public final void entryRuleFunctionName() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2257:1: ( ruleFunctionName EOF )
            // InternalMyBashParser.g:2258:1: ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalMyBashParser.g:2265:1: ruleFunctionName : ( RULE_S_WORD_PART ) ;
    public final void ruleFunctionName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2269:2: ( ( RULE_S_WORD_PART ) )
            // InternalMyBashParser.g:2270:2: ( RULE_S_WORD_PART )
            {
            // InternalMyBashParser.g:2270:2: ( RULE_S_WORD_PART )
            // InternalMyBashParser.g:2271:3: RULE_S_WORD_PART
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionNameAccess().getS_WORD_PARTTerminalRuleCall()); 
            }
            match(input,RULE_S_WORD_PART,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionNameAccess().getS_WORD_PARTTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleNewLine"
    // InternalMyBashParser.g:2281:1: entryRuleNewLine : ruleNewLine EOF ;
    public final void entryRuleNewLine() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2282:1: ( ruleNewLine EOF )
            // InternalMyBashParser.g:2283:1: ruleNewLine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNewLineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNewLineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNewLine"


    // $ANTLR start "ruleNewLine"
    // InternalMyBashParser.g:2290:1: ruleNewLine : ( ( rule__NewLine__Group__0 ) ) ;
    public final void ruleNewLine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2294:2: ( ( ( rule__NewLine__Group__0 ) ) )
            // InternalMyBashParser.g:2295:2: ( ( rule__NewLine__Group__0 ) )
            {
            // InternalMyBashParser.g:2295:2: ( ( rule__NewLine__Group__0 ) )
            // InternalMyBashParser.g:2296:3: ( rule__NewLine__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNewLineAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2297:3: ( rule__NewLine__Group__0 )
            // InternalMyBashParser.g:2297:4: rule__NewLine__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NewLine__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNewLineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNewLine"


    // $ANTLR start "entryRuleListTerminator"
    // InternalMyBashParser.g:2306:1: entryRuleListTerminator : ruleListTerminator EOF ;
    public final void entryRuleListTerminator() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2307:1: ( ruleListTerminator EOF )
            // InternalMyBashParser.g:2308:1: ruleListTerminator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTerminatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleListTerminator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTerminatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleListTerminator"


    // $ANTLR start "ruleListTerminator"
    // InternalMyBashParser.g:2315:1: ruleListTerminator : ( ( rule__ListTerminator__Alternatives ) ) ;
    public final void ruleListTerminator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2319:2: ( ( ( rule__ListTerminator__Alternatives ) ) )
            // InternalMyBashParser.g:2320:2: ( ( rule__ListTerminator__Alternatives ) )
            {
            // InternalMyBashParser.g:2320:2: ( ( rule__ListTerminator__Alternatives ) )
            // InternalMyBashParser.g:2321:3: ( rule__ListTerminator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTerminatorAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:2322:3: ( rule__ListTerminator__Alternatives )
            // InternalMyBashParser.g:2322:4: rule__ListTerminator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ListTerminator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTerminatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleListTerminator"


    // $ANTLR start "entryRuleMaybeNewLine"
    // InternalMyBashParser.g:2331:1: entryRuleMaybeNewLine : ruleMaybeNewLine EOF ;
    public final void entryRuleMaybeNewLine() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2332:1: ( ruleMaybeNewLine EOF )
            // InternalMyBashParser.g:2333:1: ruleMaybeNewLine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaybeNewLineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaybeNewLineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMaybeNewLine"


    // $ANTLR start "ruleMaybeNewLine"
    // InternalMyBashParser.g:2340:1: ruleMaybeNewLine : ( ( ruleNewLine )? ) ;
    public final void ruleMaybeNewLine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2344:2: ( ( ( ruleNewLine )? ) )
            // InternalMyBashParser.g:2345:2: ( ( ruleNewLine )? )
            {
            // InternalMyBashParser.g:2345:2: ( ( ruleNewLine )? )
            // InternalMyBashParser.g:2346:3: ( ruleNewLine )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaybeNewLineAccess().getNewLineParserRuleCall()); 
            }
            // InternalMyBashParser.g:2347:3: ( ruleNewLine )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_NEW_LINE||LA2_0==RULE_HERE_DOC_START) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalMyBashParser.g:2347:4: ruleNewLine
                    {
                    pushFollow(FOLLOW_2);
                    ruleNewLine();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaybeNewLineAccess().getNewLineParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMaybeNewLine"


    // $ANTLR start "entryRuleHereDoc"
    // InternalMyBashParser.g:2356:1: entryRuleHereDoc : ruleHereDoc EOF ;
    public final void entryRuleHereDoc() throws RecognitionException {
        try {
            // InternalMyBashParser.g:2357:1: ( ruleHereDoc EOF )
            // InternalMyBashParser.g:2358:1: ruleHereDoc EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHereDocRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleHereDoc();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHereDocRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHereDoc"


    // $ANTLR start "ruleHereDoc"
    // InternalMyBashParser.g:2365:1: ruleHereDoc : ( ( rule__HereDoc__Group__0 ) ) ;
    public final void ruleHereDoc() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2369:2: ( ( ( rule__HereDoc__Group__0 ) ) )
            // InternalMyBashParser.g:2370:2: ( ( rule__HereDoc__Group__0 ) )
            {
            // InternalMyBashParser.g:2370:2: ( ( rule__HereDoc__Group__0 ) )
            // InternalMyBashParser.g:2371:3: ( rule__HereDoc__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHereDocAccess().getGroup()); 
            }
            // InternalMyBashParser.g:2372:3: ( rule__HereDoc__Group__0 )
            // InternalMyBashParser.g:2372:4: rule__HereDoc__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__HereDoc__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHereDocAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHereDoc"


    // $ANTLR start "ruleFollowWordOp"
    // InternalMyBashParser.g:2381:1: ruleFollowWordOp : ( ( rule__FollowWordOp__Alternatives ) ) ;
    public final void ruleFollowWordOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2385:1: ( ( ( rule__FollowWordOp__Alternatives ) ) )
            // InternalMyBashParser.g:2386:2: ( ( rule__FollowWordOp__Alternatives ) )
            {
            // InternalMyBashParser.g:2386:2: ( ( rule__FollowWordOp__Alternatives ) )
            // InternalMyBashParser.g:2387:3: ( rule__FollowWordOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFollowWordOpAccess().getAlternatives()); 
            }
            // InternalMyBashParser.g:2388:3: ( rule__FollowWordOp__Alternatives )
            // InternalMyBashParser.g:2388:4: rule__FollowWordOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FollowWordOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFollowWordOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFollowWordOp"


    // $ANTLR start "rule__Bash__Alternatives"
    // InternalMyBashParser.g:2396:1: rule__Bash__Alternatives : ( ( ( rule__Bash__Group_0__0 ) ) | ( ( rule__Bash__Group_1__0 ) ) );
    public final void rule__Bash__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2400:1: ( ( ( rule__Bash__Group_0__0 ) ) | ( ( rule__Bash__Group_1__0 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==EOF||(LA3_0>=Function && LA3_0<=SemicolonSemicolonAmpersand)||LA3_0==For||LA3_0==DollarSignLeftCurlyBracket||(LA3_0>=AmpersandGreaterThanSign && LA3_0<=LeftParenthesisLeftParenthesis)||(LA3_0>=SemicolonAmpersand && LA3_0<=LessThanSignLessThanSign)||(LA3_0>=LessThanSignGreaterThanSign && LA3_0<=LessThanSignVerticalLine)||(LA3_0>=GreaterThanSignAmpersand && LA3_0<=GreaterThanSignLeftParenthesis)||(LA3_0>=GreaterThanSignGreaterThanSign && LA3_0<=LeftSquareBracketLeftSquareBracket)||(LA3_0>=Do && LA3_0<=In)||(LA3_0>=ExclamationMark && LA3_0<=QuotationMark)||(LA3_0>=Apostrophe && LA3_0<=RightParenthesis)||LA3_0==LessThanSign||LA3_0==GreaterThanSign||LA3_0==LeftCurlyBracket||LA3_0==RightCurlyBracket||(LA3_0>=RULE_I_NUMBER && LA3_0<=RULE_NEW_LINE)||(LA3_0>=RULE_NAME && LA3_0<=RULE_WORD_PART)||LA3_0==RULE_VARIABLE||(LA3_0>=RULE_CS_START && LA3_0<=RULE_CS_END)||LA3_0==RULE_HERE_DOC_START) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_WS) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalMyBashParser.g:2401:2: ( ( rule__Bash__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:2401:2: ( ( rule__Bash__Group_0__0 ) )
                    // InternalMyBashParser.g:2402:3: ( rule__Bash__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBashAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:2403:3: ( rule__Bash__Group_0__0 )
                    // InternalMyBashParser.g:2403:4: rule__Bash__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Bash__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBashAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2407:2: ( ( rule__Bash__Group_1__0 ) )
                    {
                    // InternalMyBashParser.g:2407:2: ( ( rule__Bash__Group_1__0 ) )
                    // InternalMyBashParser.g:2408:3: ( rule__Bash__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBashAccess().getGroup_1()); 
                    }
                    // InternalMyBashParser.g:2409:3: ( rule__Bash__Group_1__0 )
                    // InternalMyBashParser.g:2409:4: rule__Bash__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Bash__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBashAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Alternatives"


    // $ANTLR start "rule__Bash__Alternatives_1_1"
    // InternalMyBashParser.g:2417:1: rule__Bash__Alternatives_1_1 : ( ( ( rule__Bash__ErrorAssignment_1_1_0 ) ) | ( ( rule__Bash__ErrorAssignment_1_1_1 ) ) );
    public final void rule__Bash__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2421:1: ( ( ( rule__Bash__ErrorAssignment_1_1_0 ) ) | ( ( rule__Bash__ErrorAssignment_1_1_1 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==DollarSignLeftParenthesisLeftParenthesis||LA4_0==DollarSignLeftCurlyBracket||LA4_0==LessThanSignLeftParenthesis||LA4_0==GreaterThanSignLeftParenthesis||LA4_0==QuotationMark||LA4_0==Apostrophe||(LA4_0>=RULE_S_WORD_PART && LA4_0<=RULE_WORD_PART)||LA4_0==RULE_VARIABLE||LA4_0==RULE_CS_START) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_NAME) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalMyBashParser.g:2422:2: ( ( rule__Bash__ErrorAssignment_1_1_0 ) )
                    {
                    // InternalMyBashParser.g:2422:2: ( ( rule__Bash__ErrorAssignment_1_1_0 ) )
                    // InternalMyBashParser.g:2423:3: ( rule__Bash__ErrorAssignment_1_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBashAccess().getErrorAssignment_1_1_0()); 
                    }
                    // InternalMyBashParser.g:2424:3: ( rule__Bash__ErrorAssignment_1_1_0 )
                    // InternalMyBashParser.g:2424:4: rule__Bash__ErrorAssignment_1_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Bash__ErrorAssignment_1_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBashAccess().getErrorAssignment_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2428:2: ( ( rule__Bash__ErrorAssignment_1_1_1 ) )
                    {
                    // InternalMyBashParser.g:2428:2: ( ( rule__Bash__ErrorAssignment_1_1_1 ) )
                    // InternalMyBashParser.g:2429:3: ( rule__Bash__ErrorAssignment_1_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBashAccess().getErrorAssignment_1_1_1()); 
                    }
                    // InternalMyBashParser.g:2430:3: ( rule__Bash__ErrorAssignment_1_1_1 )
                    // InternalMyBashParser.g:2430:4: rule__Bash__ErrorAssignment_1_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Bash__ErrorAssignment_1_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBashAccess().getErrorAssignment_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Alternatives_1_1"


    // $ANTLR start "rule__SimpleList__Alternatives_1_1"
    // InternalMyBashParser.g:2438:1: rule__SimpleList__Alternatives_1_1 : ( ( ( rule__SimpleList__Group_1_1_0__0 ) ) | ( ( rule__SimpleList__OpAssignment_1_1_1 ) ) );
    public final void rule__SimpleList__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2442:1: ( ( ( rule__SimpleList__Group_1_1_0__0 ) ) | ( ( rule__SimpleList__OpAssignment_1_1_1 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==AmpersandAmpersand||LA5_0==VerticalLineVerticalLine) ) {
                alt5=1;
            }
            else if ( (LA5_0==Ampersand||LA5_0==Semicolon) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalMyBashParser.g:2443:2: ( ( rule__SimpleList__Group_1_1_0__0 ) )
                    {
                    // InternalMyBashParser.g:2443:2: ( ( rule__SimpleList__Group_1_1_0__0 ) )
                    // InternalMyBashParser.g:2444:3: ( rule__SimpleList__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getGroup_1_1_0()); 
                    }
                    // InternalMyBashParser.g:2445:3: ( rule__SimpleList__Group_1_1_0__0 )
                    // InternalMyBashParser.g:2445:4: rule__SimpleList__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleList__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2449:2: ( ( rule__SimpleList__OpAssignment_1_1_1 ) )
                    {
                    // InternalMyBashParser.g:2449:2: ( ( rule__SimpleList__OpAssignment_1_1_1 ) )
                    // InternalMyBashParser.g:2450:3: ( rule__SimpleList__OpAssignment_1_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getOpAssignment_1_1_1()); 
                    }
                    // InternalMyBashParser.g:2451:3: ( rule__SimpleList__OpAssignment_1_1_1 )
                    // InternalMyBashParser.g:2451:4: rule__SimpleList__OpAssignment_1_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleList__OpAssignment_1_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getOpAssignment_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Alternatives_1_1"


    // $ANTLR start "rule__SimpleList__OpAlternatives_1_1_0_0_0"
    // InternalMyBashParser.g:2459:1: rule__SimpleList__OpAlternatives_1_1_0_0_0 : ( ( AmpersandAmpersand ) | ( VerticalLineVerticalLine ) );
    public final void rule__SimpleList__OpAlternatives_1_1_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2463:1: ( ( AmpersandAmpersand ) | ( VerticalLineVerticalLine ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==AmpersandAmpersand) ) {
                alt6=1;
            }
            else if ( (LA6_0==VerticalLineVerticalLine) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalMyBashParser.g:2464:2: ( AmpersandAmpersand )
                    {
                    // InternalMyBashParser.g:2464:2: ( AmpersandAmpersand )
                    // InternalMyBashParser.g:2465:3: AmpersandAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getOpAmpersandAmpersandKeyword_1_1_0_0_0_0()); 
                    }
                    match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getOpAmpersandAmpersandKeyword_1_1_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2470:2: ( VerticalLineVerticalLine )
                    {
                    // InternalMyBashParser.g:2470:2: ( VerticalLineVerticalLine )
                    // InternalMyBashParser.g:2471:3: VerticalLineVerticalLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0_0_1()); 
                    }
                    match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__OpAlternatives_1_1_0_0_0"


    // $ANTLR start "rule__SimpleList__OpAlternatives_1_1_1_0"
    // InternalMyBashParser.g:2480:1: rule__SimpleList__OpAlternatives_1_1_1_0 : ( ( Ampersand ) | ( Semicolon ) );
    public final void rule__SimpleList__OpAlternatives_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2484:1: ( ( Ampersand ) | ( Semicolon ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Ampersand) ) {
                alt7=1;
            }
            else if ( (LA7_0==Semicolon) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalMyBashParser.g:2485:2: ( Ampersand )
                    {
                    // InternalMyBashParser.g:2485:2: ( Ampersand )
                    // InternalMyBashParser.g:2486:3: Ampersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getOpAmpersandKeyword_1_1_1_0_0()); 
                    }
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getOpAmpersandKeyword_1_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2491:2: ( Semicolon )
                    {
                    // InternalMyBashParser.g:2491:2: ( Semicolon )
                    // InternalMyBashParser.g:2492:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getOpSemicolonKeyword_1_1_1_0_1()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getOpSemicolonKeyword_1_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__OpAlternatives_1_1_1_0"


    // $ANTLR start "rule__SimpleList__Alternatives_2"
    // InternalMyBashParser.g:2501:1: rule__SimpleList__Alternatives_2 : ( ( ( rule__SimpleList__BackendAssignment_2_0 ) ) | ( Semicolon ) );
    public final void rule__SimpleList__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2505:1: ( ( ( rule__SimpleList__BackendAssignment_2_0 ) ) | ( Semicolon ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Ampersand) ) {
                alt8=1;
            }
            else if ( (LA8_0==Semicolon) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalMyBashParser.g:2506:2: ( ( rule__SimpleList__BackendAssignment_2_0 ) )
                    {
                    // InternalMyBashParser.g:2506:2: ( ( rule__SimpleList__BackendAssignment_2_0 ) )
                    // InternalMyBashParser.g:2507:3: ( rule__SimpleList__BackendAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getBackendAssignment_2_0()); 
                    }
                    // InternalMyBashParser.g:2508:3: ( rule__SimpleList__BackendAssignment_2_0 )
                    // InternalMyBashParser.g:2508:4: rule__SimpleList__BackendAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleList__BackendAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getBackendAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2512:2: ( Semicolon )
                    {
                    // InternalMyBashParser.g:2512:2: ( Semicolon )
                    // InternalMyBashParser.g:2513:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleListAccess().getSemicolonKeyword_2_1()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleListAccess().getSemicolonKeyword_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Alternatives_2"


    // $ANTLR start "rule__PipelineCommand__Alternatives"
    // InternalMyBashParser.g:2522:1: rule__PipelineCommand__Alternatives : ( ( ( rule__PipelineCommand__Group_0__0 ) ) | ( rulePipeline ) );
    public final void rule__PipelineCommand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2526:1: ( ( ( rule__PipelineCommand__Group_0__0 ) ) | ( rulePipeline ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==ExclamationMark) ) {
                alt9=1;
            }
            else if ( ((LA9_0>=Function && LA9_0<=Case)||(LA9_0>=DollarSignLeftParenthesisLeftParenthesis && LA9_0<=AmpersandGreaterThanSignGreaterThanSign)||LA9_0==For||LA9_0==DollarSignLeftCurlyBracket||(LA9_0>=AmpersandGreaterThanSign && LA9_0<=LeftParenthesisLeftParenthesis)||(LA9_0>=LessThanSignAmpersand && LA9_0<=LessThanSignLessThanSign)||(LA9_0>=LessThanSignGreaterThanSign && LA9_0<=LessThanSignVerticalLine)||(LA9_0>=GreaterThanSignAmpersand && LA9_0<=GreaterThanSignLeftParenthesis)||(LA9_0>=GreaterThanSignGreaterThanSign && LA9_0<=LeftSquareBracketLeftSquareBracket)||LA9_0==If||LA9_0==QuotationMark||(LA9_0>=Apostrophe && LA9_0<=LeftParenthesis)||LA9_0==LessThanSign||LA9_0==GreaterThanSign||LA9_0==LeftCurlyBracket||LA9_0==RULE_I_NUMBER||(LA9_0>=RULE_NAME && LA9_0<=RULE_WORD_PART)||LA9_0==RULE_VARIABLE||LA9_0==RULE_CS_START) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalMyBashParser.g:2527:2: ( ( rule__PipelineCommand__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:2527:2: ( ( rule__PipelineCommand__Group_0__0 ) )
                    // InternalMyBashParser.g:2528:3: ( rule__PipelineCommand__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPipelineCommandAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:2529:3: ( rule__PipelineCommand__Group_0__0 )
                    // InternalMyBashParser.g:2529:4: rule__PipelineCommand__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PipelineCommand__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPipelineCommandAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2533:2: ( rulePipeline )
                    {
                    // InternalMyBashParser.g:2533:2: ( rulePipeline )
                    // InternalMyBashParser.g:2534:3: rulePipeline
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPipelineCommandAccess().getPipelineParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePipeline();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPipelineCommandAccess().getPipelineParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__Alternatives"


    // $ANTLR start "rule__Pipeline__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:2543:1: rule__Pipeline__OpAlternatives_1_1_0 : ( ( VerticalLine ) | ( VerticalLineAmpersand ) );
    public final void rule__Pipeline__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2547:1: ( ( VerticalLine ) | ( VerticalLineAmpersand ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==VerticalLine) ) {
                alt10=1;
            }
            else if ( (LA10_0==VerticalLineAmpersand) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalMyBashParser.g:2548:2: ( VerticalLine )
                    {
                    // InternalMyBashParser.g:2548:2: ( VerticalLine )
                    // InternalMyBashParser.g:2549:3: VerticalLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPipelineAccess().getOpVerticalLineKeyword_1_1_0_0()); 
                    }
                    match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPipelineAccess().getOpVerticalLineKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2554:2: ( VerticalLineAmpersand )
                    {
                    // InternalMyBashParser.g:2554:2: ( VerticalLineAmpersand )
                    // InternalMyBashParser.g:2555:3: VerticalLineAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPipelineAccess().getOpVerticalLineAmpersandKeyword_1_1_0_1()); 
                    }
                    match(input,VerticalLineAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPipelineAccess().getOpVerticalLineAmpersandKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Command__Alternatives"
    // InternalMyBashParser.g:2564:1: rule__Command__Alternatives : ( ( ruleFunctionDefine ) | ( ruleSimpleCommand ) | ( ( rule__Command__Group_2__0 ) ) );
    public final void rule__Command__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2568:1: ( ( ruleFunctionDefine ) | ( ruleSimpleCommand ) | ( ( rule__Command__Group_2__0 ) ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case Function:
                {
                alt11=1;
                }
                break;
            case RULE_S_WORD_PART:
                {
                int LA11_2 = input.LA(2);

                if ( (LA11_2==LeftParenthesis) ) {
                    alt11=1;
                }
                else if ( (LA11_2==EOF||(LA11_2>=Done && LA11_2<=SemicolonSemicolonAmpersand)||LA11_2==DollarSignLeftCurlyBracket||LA11_2==AmpersandAmpersand||LA11_2==AmpersandGreaterThanSign||(LA11_2>=SemicolonAmpersand && LA11_2<=LessThanSignLessThanSign)||(LA11_2>=LessThanSignGreaterThanSign && LA11_2<=LessThanSignVerticalLine)||(LA11_2>=GreaterThanSignAmpersand && LA11_2<=GreaterThanSignLeftParenthesis)||(LA11_2>=GreaterThanSignGreaterThanSign && LA11_2<=GreaterThanSignVerticalLine)||(LA11_2>=Do && LA11_2<=Fi)||LA11_2==VerticalLineAmpersand||LA11_2==VerticalLineVerticalLine||LA11_2==QuotationMark||(LA11_2>=Ampersand && LA11_2<=Apostrophe)||LA11_2==RightParenthesis||(LA11_2>=Semicolon && LA11_2<=LessThanSign)||LA11_2==GreaterThanSign||(LA11_2>=VerticalLine && LA11_2<=RightCurlyBracket)||(LA11_2>=RULE_I_NUMBER && LA11_2<=RULE_NEW_LINE)||(LA11_2>=RULE_NAME && LA11_2<=RULE_WORD_PART)||LA11_2==RULE_VARIABLE||(LA11_2>=RULE_CS_START && LA11_2<=RULE_CS_END)||LA11_2==RULE_HERE_DOC_START) ) {
                    alt11=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 2, input);

                    throw nvae;
                }
                }
                break;
            case DollarSignLeftParenthesisLeftParenthesis:
            case AmpersandGreaterThanSignGreaterThanSign:
            case DollarSignLeftCurlyBracket:
            case AmpersandGreaterThanSign:
            case LessThanSignAmpersand:
            case LessThanSignLeftParenthesis:
            case LessThanSignLessThanSign:
            case LessThanSignGreaterThanSign:
            case LessThanSignVerticalLine:
            case GreaterThanSignAmpersand:
            case GreaterThanSignLeftParenthesis:
            case GreaterThanSignGreaterThanSign:
            case GreaterThanSignVerticalLine:
            case QuotationMark:
            case Apostrophe:
            case LessThanSign:
            case GreaterThanSign:
            case RULE_I_NUMBER:
            case RULE_NAME:
            case RULE_WORD_PART:
            case RULE_VARIABLE:
            case RULE_CS_START:
                {
                alt11=2;
                }
                break;
            case While:
            case Case:
            case For:
            case LeftParenthesisLeftParenthesis:
            case LeftSquareBracketLeftSquareBracket:
            case If:
            case LeftParenthesis:
            case LeftCurlyBracket:
                {
                alt11=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalMyBashParser.g:2569:2: ( ruleFunctionDefine )
                    {
                    // InternalMyBashParser.g:2569:2: ( ruleFunctionDefine )
                    // InternalMyBashParser.g:2570:3: ruleFunctionDefine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommandAccess().getFunctionDefineParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFunctionDefine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommandAccess().getFunctionDefineParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2575:2: ( ruleSimpleCommand )
                    {
                    // InternalMyBashParser.g:2575:2: ( ruleSimpleCommand )
                    // InternalMyBashParser.g:2576:3: ruleSimpleCommand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommandAccess().getSimpleCommandParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSimpleCommand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommandAccess().getSimpleCommandParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:2581:2: ( ( rule__Command__Group_2__0 ) )
                    {
                    // InternalMyBashParser.g:2581:2: ( ( rule__Command__Group_2__0 ) )
                    // InternalMyBashParser.g:2582:3: ( rule__Command__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommandAccess().getGroup_2()); 
                    }
                    // InternalMyBashParser.g:2583:3: ( rule__Command__Group_2__0 )
                    // InternalMyBashParser.g:2583:4: rule__Command__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Command__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommandAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Command__Alternatives"


    // $ANTLR start "rule__FunctionDefine__Alternatives"
    // InternalMyBashParser.g:2591:1: rule__FunctionDefine__Alternatives : ( ( ( rule__FunctionDefine__Group_0__0 ) ) | ( ( rule__FunctionDefine__Group_1__0 ) ) );
    public final void rule__FunctionDefine__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2595:1: ( ( ( rule__FunctionDefine__Group_0__0 ) ) | ( ( rule__FunctionDefine__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==Function) ) {
                alt12=1;
            }
            else if ( (LA12_0==RULE_S_WORD_PART) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalMyBashParser.g:2596:2: ( ( rule__FunctionDefine__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:2596:2: ( ( rule__FunctionDefine__Group_0__0 ) )
                    // InternalMyBashParser.g:2597:3: ( rule__FunctionDefine__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefineAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:2598:3: ( rule__FunctionDefine__Group_0__0 )
                    // InternalMyBashParser.g:2598:4: rule__FunctionDefine__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefine__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefineAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2602:2: ( ( rule__FunctionDefine__Group_1__0 ) )
                    {
                    // InternalMyBashParser.g:2602:2: ( ( rule__FunctionDefine__Group_1__0 ) )
                    // InternalMyBashParser.g:2603:3: ( rule__FunctionDefine__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefineAccess().getGroup_1()); 
                    }
                    // InternalMyBashParser.g:2604:3: ( rule__FunctionDefine__Group_1__0 )
                    // InternalMyBashParser.g:2604:4: rule__FunctionDefine__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefine__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefineAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Alternatives"


    // $ANTLR start "rule__SimpleCommand__Alternatives"
    // InternalMyBashParser.g:2612:1: rule__SimpleCommand__Alternatives : ( ( ( rule__SimpleCommand__Group_0__0 ) ) | ( ( rule__SimpleCommand__Group_1__0 ) ) | ( ( ( rule__SimpleCommand__RAssignment_2 ) ) ( ( rule__SimpleCommand__RAssignment_2 )* ) ) );
    public final void rule__SimpleCommand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2616:1: ( ( ( rule__SimpleCommand__Group_0__0 ) ) | ( ( rule__SimpleCommand__Group_1__0 ) ) | ( ( ( rule__SimpleCommand__RAssignment_2 ) ) ( ( rule__SimpleCommand__RAssignment_2 )* ) ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case RULE_NAME:
                {
                alt14=1;
                }
                break;
            case DollarSignLeftParenthesisLeftParenthesis:
            case DollarSignLeftCurlyBracket:
            case LessThanSignLeftParenthesis:
            case GreaterThanSignLeftParenthesis:
            case QuotationMark:
            case Apostrophe:
            case RULE_S_WORD_PART:
            case RULE_WORD_PART:
            case RULE_VARIABLE:
            case RULE_CS_START:
                {
                alt14=2;
                }
                break;
            case AmpersandGreaterThanSignGreaterThanSign:
            case AmpersandGreaterThanSign:
            case LessThanSignAmpersand:
            case LessThanSignLessThanSign:
            case LessThanSignGreaterThanSign:
            case LessThanSignVerticalLine:
            case GreaterThanSignAmpersand:
            case GreaterThanSignGreaterThanSign:
            case GreaterThanSignVerticalLine:
            case LessThanSign:
            case GreaterThanSign:
            case RULE_I_NUMBER:
                {
                alt14=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalMyBashParser.g:2617:2: ( ( rule__SimpleCommand__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:2617:2: ( ( rule__SimpleCommand__Group_0__0 ) )
                    // InternalMyBashParser.g:2618:3: ( rule__SimpleCommand__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:2619:3: ( rule__SimpleCommand__Group_0__0 )
                    // InternalMyBashParser.g:2619:4: rule__SimpleCommand__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleCommand__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2623:2: ( ( rule__SimpleCommand__Group_1__0 ) )
                    {
                    // InternalMyBashParser.g:2623:2: ( ( rule__SimpleCommand__Group_1__0 ) )
                    // InternalMyBashParser.g:2624:3: ( rule__SimpleCommand__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getGroup_1()); 
                    }
                    // InternalMyBashParser.g:2625:3: ( rule__SimpleCommand__Group_1__0 )
                    // InternalMyBashParser.g:2625:4: rule__SimpleCommand__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleCommand__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:2629:2: ( ( ( rule__SimpleCommand__RAssignment_2 ) ) ( ( rule__SimpleCommand__RAssignment_2 )* ) )
                    {
                    // InternalMyBashParser.g:2629:2: ( ( ( rule__SimpleCommand__RAssignment_2 ) ) ( ( rule__SimpleCommand__RAssignment_2 )* ) )
                    // InternalMyBashParser.g:2630:3: ( ( rule__SimpleCommand__RAssignment_2 ) ) ( ( rule__SimpleCommand__RAssignment_2 )* )
                    {
                    // InternalMyBashParser.g:2630:3: ( ( rule__SimpleCommand__RAssignment_2 ) )
                    // InternalMyBashParser.g:2631:4: ( rule__SimpleCommand__RAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getRAssignment_2()); 
                    }
                    // InternalMyBashParser.g:2632:4: ( rule__SimpleCommand__RAssignment_2 )
                    // InternalMyBashParser.g:2632:5: rule__SimpleCommand__RAssignment_2
                    {
                    pushFollow(FOLLOW_4);
                    rule__SimpleCommand__RAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getRAssignment_2()); 
                    }

                    }

                    // InternalMyBashParser.g:2635:3: ( ( rule__SimpleCommand__RAssignment_2 )* )
                    // InternalMyBashParser.g:2636:4: ( rule__SimpleCommand__RAssignment_2 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getRAssignment_2()); 
                    }
                    // InternalMyBashParser.g:2637:4: ( rule__SimpleCommand__RAssignment_2 )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==AmpersandGreaterThanSignGreaterThanSign||LA13_0==AmpersandGreaterThanSign||LA13_0==LessThanSignAmpersand||LA13_0==LessThanSignLessThanSign||(LA13_0>=LessThanSignGreaterThanSign && LA13_0<=LessThanSignVerticalLine)||LA13_0==GreaterThanSignAmpersand||(LA13_0>=GreaterThanSignGreaterThanSign && LA13_0<=GreaterThanSignVerticalLine)||LA13_0==LessThanSign||LA13_0==GreaterThanSign||LA13_0==RULE_I_NUMBER) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // InternalMyBashParser.g:2637:5: rule__SimpleCommand__RAssignment_2
                    	    {
                    	    pushFollow(FOLLOW_4);
                    	    rule__SimpleCommand__RAssignment_2();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getRAssignment_2()); 
                    }

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Alternatives"


    // $ANTLR start "rule__SimpleCommand__Alternatives_0_1_1"
    // InternalMyBashParser.g:2646:1: rule__SimpleCommand__Alternatives_0_1_1 : ( ( ( rule__SimpleCommand__ParametersAssignment_0_1_1_0 ) ) | ( ( rule__SimpleCommand__RAssignment_0_1_1_1 ) ) );
    public final void rule__SimpleCommand__Alternatives_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2650:1: ( ( ( rule__SimpleCommand__ParametersAssignment_0_1_1_0 ) ) | ( ( rule__SimpleCommand__RAssignment_0_1_1_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==DollarSignLeftParenthesisLeftParenthesis||LA15_0==DollarSignLeftCurlyBracket||LA15_0==LessThanSignLeftParenthesis||LA15_0==GreaterThanSignLeftParenthesis||LA15_0==QuotationMark||LA15_0==Apostrophe||(LA15_0>=RULE_S_WORD_PART && LA15_0<=RULE_WORD_PART)||LA15_0==RULE_VARIABLE||LA15_0==RULE_CS_START) ) {
                alt15=1;
            }
            else if ( (LA15_0==AmpersandGreaterThanSignGreaterThanSign||LA15_0==AmpersandGreaterThanSign||LA15_0==LessThanSignAmpersand||LA15_0==LessThanSignLessThanSign||(LA15_0>=LessThanSignGreaterThanSign && LA15_0<=LessThanSignVerticalLine)||LA15_0==GreaterThanSignAmpersand||(LA15_0>=GreaterThanSignGreaterThanSign && LA15_0<=GreaterThanSignVerticalLine)||LA15_0==LessThanSign||LA15_0==GreaterThanSign||LA15_0==RULE_I_NUMBER) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalMyBashParser.g:2651:2: ( ( rule__SimpleCommand__ParametersAssignment_0_1_1_0 ) )
                    {
                    // InternalMyBashParser.g:2651:2: ( ( rule__SimpleCommand__ParametersAssignment_0_1_1_0 ) )
                    // InternalMyBashParser.g:2652:3: ( rule__SimpleCommand__ParametersAssignment_0_1_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getParametersAssignment_0_1_1_0()); 
                    }
                    // InternalMyBashParser.g:2653:3: ( rule__SimpleCommand__ParametersAssignment_0_1_1_0 )
                    // InternalMyBashParser.g:2653:4: rule__SimpleCommand__ParametersAssignment_0_1_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleCommand__ParametersAssignment_0_1_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getParametersAssignment_0_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2657:2: ( ( rule__SimpleCommand__RAssignment_0_1_1_1 ) )
                    {
                    // InternalMyBashParser.g:2657:2: ( ( rule__SimpleCommand__RAssignment_0_1_1_1 ) )
                    // InternalMyBashParser.g:2658:3: ( rule__SimpleCommand__RAssignment_0_1_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getRAssignment_0_1_1_1()); 
                    }
                    // InternalMyBashParser.g:2659:3: ( rule__SimpleCommand__RAssignment_0_1_1_1 )
                    // InternalMyBashParser.g:2659:4: rule__SimpleCommand__RAssignment_0_1_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleCommand__RAssignment_0_1_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getRAssignment_0_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Alternatives_0_1_1"


    // $ANTLR start "rule__SimpleCommand__Alternatives_1_1"
    // InternalMyBashParser.g:2667:1: rule__SimpleCommand__Alternatives_1_1 : ( ( ( rule__SimpleCommand__ParametersAssignment_1_1_0 ) ) | ( ( rule__SimpleCommand__RAssignment_1_1_1 ) ) );
    public final void rule__SimpleCommand__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2671:1: ( ( ( rule__SimpleCommand__ParametersAssignment_1_1_0 ) ) | ( ( rule__SimpleCommand__RAssignment_1_1_1 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==DollarSignLeftParenthesisLeftParenthesis||LA16_0==DollarSignLeftCurlyBracket||LA16_0==LessThanSignLeftParenthesis||LA16_0==GreaterThanSignLeftParenthesis||LA16_0==QuotationMark||LA16_0==Apostrophe||(LA16_0>=RULE_NAME && LA16_0<=RULE_WORD_PART)||LA16_0==RULE_VARIABLE||LA16_0==RULE_CS_START) ) {
                alt16=1;
            }
            else if ( (LA16_0==AmpersandGreaterThanSignGreaterThanSign||LA16_0==AmpersandGreaterThanSign||LA16_0==LessThanSignAmpersand||LA16_0==LessThanSignLessThanSign||(LA16_0>=LessThanSignGreaterThanSign && LA16_0<=LessThanSignVerticalLine)||LA16_0==GreaterThanSignAmpersand||(LA16_0>=GreaterThanSignGreaterThanSign && LA16_0<=GreaterThanSignVerticalLine)||LA16_0==LessThanSign||LA16_0==GreaterThanSign||LA16_0==RULE_I_NUMBER) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalMyBashParser.g:2672:2: ( ( rule__SimpleCommand__ParametersAssignment_1_1_0 ) )
                    {
                    // InternalMyBashParser.g:2672:2: ( ( rule__SimpleCommand__ParametersAssignment_1_1_0 ) )
                    // InternalMyBashParser.g:2673:3: ( rule__SimpleCommand__ParametersAssignment_1_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getParametersAssignment_1_1_0()); 
                    }
                    // InternalMyBashParser.g:2674:3: ( rule__SimpleCommand__ParametersAssignment_1_1_0 )
                    // InternalMyBashParser.g:2674:4: rule__SimpleCommand__ParametersAssignment_1_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleCommand__ParametersAssignment_1_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getParametersAssignment_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2678:2: ( ( rule__SimpleCommand__RAssignment_1_1_1 ) )
                    {
                    // InternalMyBashParser.g:2678:2: ( ( rule__SimpleCommand__RAssignment_1_1_1 ) )
                    // InternalMyBashParser.g:2679:3: ( rule__SimpleCommand__RAssignment_1_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getRAssignment_1_1_1()); 
                    }
                    // InternalMyBashParser.g:2680:3: ( rule__SimpleCommand__RAssignment_1_1_1 )
                    // InternalMyBashParser.g:2680:4: rule__SimpleCommand__RAssignment_1_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleCommand__RAssignment_1_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getRAssignment_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Alternatives_1_1"


    // $ANTLR start "rule__SimpleCommand__ParametersAlternatives_1_1_0_0"
    // InternalMyBashParser.g:2688:1: rule__SimpleCommand__ParametersAlternatives_1_1_0_0 : ( ( ruleWord ) | ( ruleLAssignment ) );
    public final void rule__SimpleCommand__ParametersAlternatives_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2692:1: ( ( ruleWord ) | ( ruleLAssignment ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==DollarSignLeftParenthesisLeftParenthesis||LA17_0==DollarSignLeftCurlyBracket||LA17_0==LessThanSignLeftParenthesis||LA17_0==GreaterThanSignLeftParenthesis||LA17_0==QuotationMark||LA17_0==Apostrophe||(LA17_0>=RULE_S_WORD_PART && LA17_0<=RULE_WORD_PART)||LA17_0==RULE_VARIABLE||LA17_0==RULE_CS_START) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_NAME) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalMyBashParser.g:2693:2: ( ruleWord )
                    {
                    // InternalMyBashParser.g:2693:2: ( ruleWord )
                    // InternalMyBashParser.g:2694:3: ruleWord
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getParametersWordParserRuleCall_1_1_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWord();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getParametersWordParserRuleCall_1_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2699:2: ( ruleLAssignment )
                    {
                    // InternalMyBashParser.g:2699:2: ( ruleLAssignment )
                    // InternalMyBashParser.g:2700:3: ruleLAssignment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleCommandAccess().getParametersLAssignmentParserRuleCall_1_1_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLAssignment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleCommandAccess().getParametersLAssignmentParserRuleCall_1_1_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__ParametersAlternatives_1_1_0_0"


    // $ANTLR start "rule__ShellCommand__Alternatives"
    // InternalMyBashParser.g:2709:1: rule__ShellCommand__Alternatives : ( ( ruleGroupCommand ) | ( ruleIfStatement ) | ( ruleWhileStatement ) | ( ruleForStatement ) | ( ruleCaseStatement ) | ( ruleSubshell ) | ( ruleCondCommand ) | ( ruleArithmeticCommand ) );
    public final void rule__ShellCommand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2713:1: ( ( ruleGroupCommand ) | ( ruleIfStatement ) | ( ruleWhileStatement ) | ( ruleForStatement ) | ( ruleCaseStatement ) | ( ruleSubshell ) | ( ruleCondCommand ) | ( ruleArithmeticCommand ) )
            int alt18=8;
            switch ( input.LA(1) ) {
            case LeftCurlyBracket:
                {
                alt18=1;
                }
                break;
            case If:
                {
                alt18=2;
                }
                break;
            case While:
                {
                alt18=3;
                }
                break;
            case For:
                {
                alt18=4;
                }
                break;
            case Case:
                {
                alt18=5;
                }
                break;
            case LeftParenthesis:
                {
                alt18=6;
                }
                break;
            case LeftSquareBracketLeftSquareBracket:
                {
                alt18=7;
                }
                break;
            case LeftParenthesisLeftParenthesis:
                {
                alt18=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalMyBashParser.g:2714:2: ( ruleGroupCommand )
                    {
                    // InternalMyBashParser.g:2714:2: ( ruleGroupCommand )
                    // InternalMyBashParser.g:2715:3: ruleGroupCommand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getGroupCommandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGroupCommand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getGroupCommandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2720:2: ( ruleIfStatement )
                    {
                    // InternalMyBashParser.g:2720:2: ( ruleIfStatement )
                    // InternalMyBashParser.g:2721:3: ruleIfStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getIfStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleIfStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getIfStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:2726:2: ( ruleWhileStatement )
                    {
                    // InternalMyBashParser.g:2726:2: ( ruleWhileStatement )
                    // InternalMyBashParser.g:2727:3: ruleWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getWhileStatementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getWhileStatementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:2732:2: ( ruleForStatement )
                    {
                    // InternalMyBashParser.g:2732:2: ( ruleForStatement )
                    // InternalMyBashParser.g:2733:3: ruleForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getForStatementParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getForStatementParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyBashParser.g:2738:2: ( ruleCaseStatement )
                    {
                    // InternalMyBashParser.g:2738:2: ( ruleCaseStatement )
                    // InternalMyBashParser.g:2739:3: ruleCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getCaseStatementParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getCaseStatementParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMyBashParser.g:2744:2: ( ruleSubshell )
                    {
                    // InternalMyBashParser.g:2744:2: ( ruleSubshell )
                    // InternalMyBashParser.g:2745:3: ruleSubshell
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getSubshellParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSubshell();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getSubshellParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMyBashParser.g:2750:2: ( ruleCondCommand )
                    {
                    // InternalMyBashParser.g:2750:2: ( ruleCondCommand )
                    // InternalMyBashParser.g:2751:3: ruleCondCommand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getCondCommandParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCondCommand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getCondCommandParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalMyBashParser.g:2756:2: ( ruleArithmeticCommand )
                    {
                    // InternalMyBashParser.g:2756:2: ( ruleArithmeticCommand )
                    // InternalMyBashParser.g:2757:3: ruleArithmeticCommand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShellCommandAccess().getArithmeticCommandParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArithmeticCommand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShellCommandAccess().getArithmeticCommandParserRuleCall_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShellCommand__Alternatives"


    // $ANTLR start "rule__CommandName__Alternatives"
    // InternalMyBashParser.g:2766:1: rule__CommandName__Alternatives : ( ( ( rule__CommandName__Group_0__0 ) ) | ( ruleWords ) );
    public final void rule__CommandName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2770:1: ( ( ( rule__CommandName__Group_0__0 ) ) | ( ruleWords ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_S_WORD_PART) ) {
                alt19=1;
            }
            else if ( (LA19_0==DollarSignLeftParenthesisLeftParenthesis||LA19_0==DollarSignLeftCurlyBracket||LA19_0==LessThanSignLeftParenthesis||LA19_0==GreaterThanSignLeftParenthesis||LA19_0==QuotationMark||LA19_0==Apostrophe||LA19_0==RULE_WORD_PART||LA19_0==RULE_VARIABLE||LA19_0==RULE_CS_START) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalMyBashParser.g:2771:2: ( ( rule__CommandName__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:2771:2: ( ( rule__CommandName__Group_0__0 ) )
                    // InternalMyBashParser.g:2772:3: ( rule__CommandName__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommandNameAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:2773:3: ( rule__CommandName__Group_0__0 )
                    // InternalMyBashParser.g:2773:4: rule__CommandName__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CommandName__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommandNameAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2777:2: ( ruleWords )
                    {
                    // InternalMyBashParser.g:2777:2: ( ruleWords )
                    // InternalMyBashParser.g:2778:3: ruleWords
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommandNameAccess().getWordsParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWords();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommandNameAccess().getWordsParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandName__Alternatives"


    // $ANTLR start "rule__CaseStatement__Alternatives_6_2_0"
    // InternalMyBashParser.g:2787:1: rule__CaseStatement__Alternatives_6_2_0 : ( ( SemicolonSemicolon ) | ( SemicolonAmpersand ) | ( SemicolonSemicolonAmpersand ) );
    public final void rule__CaseStatement__Alternatives_6_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2791:1: ( ( SemicolonSemicolon ) | ( SemicolonAmpersand ) | ( SemicolonSemicolonAmpersand ) )
            int alt20=3;
            switch ( input.LA(1) ) {
            case SemicolonSemicolon:
                {
                alt20=1;
                }
                break;
            case SemicolonAmpersand:
                {
                alt20=2;
                }
                break;
            case SemicolonSemicolonAmpersand:
                {
                alt20=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalMyBashParser.g:2792:2: ( SemicolonSemicolon )
                    {
                    // InternalMyBashParser.g:2792:2: ( SemicolonSemicolon )
                    // InternalMyBashParser.g:2793:3: SemicolonSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCaseStatementAccess().getSemicolonSemicolonKeyword_6_2_0_0()); 
                    }
                    match(input,SemicolonSemicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCaseStatementAccess().getSemicolonSemicolonKeyword_6_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2798:2: ( SemicolonAmpersand )
                    {
                    // InternalMyBashParser.g:2798:2: ( SemicolonAmpersand )
                    // InternalMyBashParser.g:2799:3: SemicolonAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCaseStatementAccess().getSemicolonAmpersandKeyword_6_2_0_1()); 
                    }
                    match(input,SemicolonAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCaseStatementAccess().getSemicolonAmpersandKeyword_6_2_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:2804:2: ( SemicolonSemicolonAmpersand )
                    {
                    // InternalMyBashParser.g:2804:2: ( SemicolonSemicolonAmpersand )
                    // InternalMyBashParser.g:2805:3: SemicolonSemicolonAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCaseStatementAccess().getSemicolonSemicolonAmpersandKeyword_6_2_0_2()); 
                    }
                    match(input,SemicolonSemicolonAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCaseStatementAccess().getSemicolonSemicolonAmpersandKeyword_6_2_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Alternatives_6_2_0"


    // $ANTLR start "rule__CasePatternContinue__FollowAlternatives_0_0_0"
    // InternalMyBashParser.g:2814:1: rule__CasePatternContinue__FollowAlternatives_0_0_0 : ( ( SemicolonSemicolon ) | ( SemicolonAmpersand ) | ( SemicolonSemicolonAmpersand ) );
    public final void rule__CasePatternContinue__FollowAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2818:1: ( ( SemicolonSemicolon ) | ( SemicolonAmpersand ) | ( SemicolonSemicolonAmpersand ) )
            int alt21=3;
            switch ( input.LA(1) ) {
            case SemicolonSemicolon:
                {
                alt21=1;
                }
                break;
            case SemicolonAmpersand:
                {
                alt21=2;
                }
                break;
            case SemicolonSemicolonAmpersand:
                {
                alt21=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalMyBashParser.g:2819:2: ( SemicolonSemicolon )
                    {
                    // InternalMyBashParser.g:2819:2: ( SemicolonSemicolon )
                    // InternalMyBashParser.g:2820:3: SemicolonSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCasePatternContinueAccess().getFollowSemicolonSemicolonKeyword_0_0_0_0()); 
                    }
                    match(input,SemicolonSemicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCasePatternContinueAccess().getFollowSemicolonSemicolonKeyword_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2825:2: ( SemicolonAmpersand )
                    {
                    // InternalMyBashParser.g:2825:2: ( SemicolonAmpersand )
                    // InternalMyBashParser.g:2826:3: SemicolonAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCasePatternContinueAccess().getFollowSemicolonAmpersandKeyword_0_0_0_1()); 
                    }
                    match(input,SemicolonAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCasePatternContinueAccess().getFollowSemicolonAmpersandKeyword_0_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:2831:2: ( SemicolonSemicolonAmpersand )
                    {
                    // InternalMyBashParser.g:2831:2: ( SemicolonSemicolonAmpersand )
                    // InternalMyBashParser.g:2832:3: SemicolonSemicolonAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCasePatternContinueAccess().getFollowSemicolonSemicolonAmpersandKeyword_0_0_0_2()); 
                    }
                    match(input,SemicolonSemicolonAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCasePatternContinueAccess().getFollowSemicolonSemicolonAmpersandKeyword_0_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__FollowAlternatives_0_0_0"


    // $ANTLR start "rule__ForStatement__Alternatives_1"
    // InternalMyBashParser.g:2841:1: rule__ForStatement__Alternatives_1 : ( ( ( rule__ForStatement__Group_1_0__0 ) ) | ( ( rule__ForStatement__Group_1_1__0 ) ) );
    public final void rule__ForStatement__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2845:1: ( ( ( rule__ForStatement__Group_1_0__0 ) ) | ( ( rule__ForStatement__Group_1_1__0 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==LeftParenthesisLeftParenthesis) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_NAME) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalMyBashParser.g:2846:2: ( ( rule__ForStatement__Group_1_0__0 ) )
                    {
                    // InternalMyBashParser.g:2846:2: ( ( rule__ForStatement__Group_1_0__0 ) )
                    // InternalMyBashParser.g:2847:3: ( rule__ForStatement__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getForStatementAccess().getGroup_1_0()); 
                    }
                    // InternalMyBashParser.g:2848:3: ( rule__ForStatement__Group_1_0__0 )
                    // InternalMyBashParser.g:2848:4: rule__ForStatement__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStatement__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getForStatementAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2852:2: ( ( rule__ForStatement__Group_1_1__0 ) )
                    {
                    // InternalMyBashParser.g:2852:2: ( ( rule__ForStatement__Group_1_1__0 ) )
                    // InternalMyBashParser.g:2853:3: ( rule__ForStatement__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getForStatementAccess().getGroup_1_1()); 
                    }
                    // InternalMyBashParser.g:2854:3: ( rule__ForStatement__Group_1_1__0 )
                    // InternalMyBashParser.g:2854:4: rule__ForStatement__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStatement__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getForStatementAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Alternatives_1"


    // $ANTLR start "rule__Redirection__Alternatives_1"
    // InternalMyBashParser.g:2862:1: rule__Redirection__Alternatives_1 : ( ( ( rule__Redirection__Group_1_0__0 ) ) | ( ( rule__Redirection__Group_1_1__0 ) ) );
    public final void rule__Redirection__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2866:1: ( ( ( rule__Redirection__Group_1_0__0 ) ) | ( ( rule__Redirection__Group_1_1__0 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==AmpersandGreaterThanSignGreaterThanSign||LA23_0==AmpersandGreaterThanSign||LA23_0==LessThanSignAmpersand||(LA23_0>=LessThanSignGreaterThanSign && LA23_0<=LessThanSignVerticalLine)||LA23_0==GreaterThanSignAmpersand||(LA23_0>=GreaterThanSignGreaterThanSign && LA23_0<=GreaterThanSignVerticalLine)||LA23_0==LessThanSign||LA23_0==GreaterThanSign||LA23_0==RULE_I_NUMBER) ) {
                alt23=1;
            }
            else if ( (LA23_0==LessThanSignLessThanSign) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalMyBashParser.g:2867:2: ( ( rule__Redirection__Group_1_0__0 ) )
                    {
                    // InternalMyBashParser.g:2867:2: ( ( rule__Redirection__Group_1_0__0 ) )
                    // InternalMyBashParser.g:2868:3: ( rule__Redirection__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getGroup_1_0()); 
                    }
                    // InternalMyBashParser.g:2869:3: ( rule__Redirection__Group_1_0__0 )
                    // InternalMyBashParser.g:2869:4: rule__Redirection__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Redirection__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2873:2: ( ( rule__Redirection__Group_1_1__0 ) )
                    {
                    // InternalMyBashParser.g:2873:2: ( ( rule__Redirection__Group_1_1__0 ) )
                    // InternalMyBashParser.g:2874:3: ( rule__Redirection__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getGroup_1_1()); 
                    }
                    // InternalMyBashParser.g:2875:3: ( rule__Redirection__Group_1_1__0 )
                    // InternalMyBashParser.g:2875:4: rule__Redirection__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Redirection__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Alternatives_1"


    // $ANTLR start "rule__Redirection__OpAlternatives_1_0_1_0"
    // InternalMyBashParser.g:2883:1: rule__Redirection__OpAlternatives_1_0_1_0 : ( ( GreaterThanSignAmpersand ) | ( GreaterThanSign ) | ( GreaterThanSignGreaterThanSign ) | ( LessThanSign ) | ( LessThanSignAmpersand ) | ( AmpersandGreaterThanSignGreaterThanSign ) | ( LessThanSignGreaterThanSign ) | ( AmpersandGreaterThanSign ) | ( LessThanSignVerticalLine ) | ( GreaterThanSignVerticalLine ) );
    public final void rule__Redirection__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2887:1: ( ( GreaterThanSignAmpersand ) | ( GreaterThanSign ) | ( GreaterThanSignGreaterThanSign ) | ( LessThanSign ) | ( LessThanSignAmpersand ) | ( AmpersandGreaterThanSignGreaterThanSign ) | ( LessThanSignGreaterThanSign ) | ( AmpersandGreaterThanSign ) | ( LessThanSignVerticalLine ) | ( GreaterThanSignVerticalLine ) )
            int alt24=10;
            switch ( input.LA(1) ) {
            case GreaterThanSignAmpersand:
                {
                alt24=1;
                }
                break;
            case GreaterThanSign:
                {
                alt24=2;
                }
                break;
            case GreaterThanSignGreaterThanSign:
                {
                alt24=3;
                }
                break;
            case LessThanSign:
                {
                alt24=4;
                }
                break;
            case LessThanSignAmpersand:
                {
                alt24=5;
                }
                break;
            case AmpersandGreaterThanSignGreaterThanSign:
                {
                alt24=6;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt24=7;
                }
                break;
            case AmpersandGreaterThanSign:
                {
                alt24=8;
                }
                break;
            case LessThanSignVerticalLine:
                {
                alt24=9;
                }
                break;
            case GreaterThanSignVerticalLine:
                {
                alt24=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalMyBashParser.g:2888:2: ( GreaterThanSignAmpersand )
                    {
                    // InternalMyBashParser.g:2888:2: ( GreaterThanSignAmpersand )
                    // InternalMyBashParser.g:2889:3: GreaterThanSignAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpGreaterThanSignAmpersandKeyword_1_0_1_0_0()); 
                    }
                    match(input,GreaterThanSignAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpGreaterThanSignAmpersandKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2894:2: ( GreaterThanSign )
                    {
                    // InternalMyBashParser.g:2894:2: ( GreaterThanSign )
                    // InternalMyBashParser.g:2895:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpGreaterThanSignKeyword_1_0_1_0_1()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpGreaterThanSignKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:2900:2: ( GreaterThanSignGreaterThanSign )
                    {
                    // InternalMyBashParser.g:2900:2: ( GreaterThanSignGreaterThanSign )
                    // InternalMyBashParser.g:2901:3: GreaterThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_0_1_0_2()); 
                    }
                    match(input,GreaterThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_0_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:2906:2: ( LessThanSign )
                    {
                    // InternalMyBashParser.g:2906:2: ( LessThanSign )
                    // InternalMyBashParser.g:2907:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpLessThanSignKeyword_1_0_1_0_3()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpLessThanSignKeyword_1_0_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyBashParser.g:2912:2: ( LessThanSignAmpersand )
                    {
                    // InternalMyBashParser.g:2912:2: ( LessThanSignAmpersand )
                    // InternalMyBashParser.g:2913:3: LessThanSignAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpLessThanSignAmpersandKeyword_1_0_1_0_4()); 
                    }
                    match(input,LessThanSignAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpLessThanSignAmpersandKeyword_1_0_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMyBashParser.g:2918:2: ( AmpersandGreaterThanSignGreaterThanSign )
                    {
                    // InternalMyBashParser.g:2918:2: ( AmpersandGreaterThanSignGreaterThanSign )
                    // InternalMyBashParser.g:2919:3: AmpersandGreaterThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpAmpersandGreaterThanSignGreaterThanSignKeyword_1_0_1_0_5()); 
                    }
                    match(input,AmpersandGreaterThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpAmpersandGreaterThanSignGreaterThanSignKeyword_1_0_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMyBashParser.g:2924:2: ( LessThanSignGreaterThanSign )
                    {
                    // InternalMyBashParser.g:2924:2: ( LessThanSignGreaterThanSign )
                    // InternalMyBashParser.g:2925:3: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_1_0_6()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_1_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalMyBashParser.g:2930:2: ( AmpersandGreaterThanSign )
                    {
                    // InternalMyBashParser.g:2930:2: ( AmpersandGreaterThanSign )
                    // InternalMyBashParser.g:2931:3: AmpersandGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpAmpersandGreaterThanSignKeyword_1_0_1_0_7()); 
                    }
                    match(input,AmpersandGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpAmpersandGreaterThanSignKeyword_1_0_1_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalMyBashParser.g:2936:2: ( LessThanSignVerticalLine )
                    {
                    // InternalMyBashParser.g:2936:2: ( LessThanSignVerticalLine )
                    // InternalMyBashParser.g:2937:3: LessThanSignVerticalLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpLessThanSignVerticalLineKeyword_1_0_1_0_8()); 
                    }
                    match(input,LessThanSignVerticalLine,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpLessThanSignVerticalLineKeyword_1_0_1_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalMyBashParser.g:2942:2: ( GreaterThanSignVerticalLine )
                    {
                    // InternalMyBashParser.g:2942:2: ( GreaterThanSignVerticalLine )
                    // InternalMyBashParser.g:2943:3: GreaterThanSignVerticalLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getOpGreaterThanSignVerticalLineKeyword_1_0_1_0_9()); 
                    }
                    match(input,GreaterThanSignVerticalLine,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getOpGreaterThanSignVerticalLineKeyword_1_0_1_0_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__Redirection__Alternatives_1_0_2"
    // InternalMyBashParser.g:2952:1: rule__Redirection__Alternatives_1_0_2 : ( ( ( rule__Redirection__TargetAssignment_1_0_2_0 ) ) | ( RULE_I_NUMBER ) );
    public final void rule__Redirection__Alternatives_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2956:1: ( ( ( rule__Redirection__TargetAssignment_1_0_2_0 ) ) | ( RULE_I_NUMBER ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==DollarSignLeftParenthesisLeftParenthesis||LA25_0==DollarSignLeftCurlyBracket||LA25_0==LessThanSignLeftParenthesis||LA25_0==GreaterThanSignLeftParenthesis||LA25_0==QuotationMark||LA25_0==Apostrophe||(LA25_0>=RULE_S_WORD_PART && LA25_0<=RULE_WORD_PART)||LA25_0==RULE_VARIABLE||LA25_0==RULE_CS_START) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_I_NUMBER) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalMyBashParser.g:2957:2: ( ( rule__Redirection__TargetAssignment_1_0_2_0 ) )
                    {
                    // InternalMyBashParser.g:2957:2: ( ( rule__Redirection__TargetAssignment_1_0_2_0 ) )
                    // InternalMyBashParser.g:2958:3: ( rule__Redirection__TargetAssignment_1_0_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getTargetAssignment_1_0_2_0()); 
                    }
                    // InternalMyBashParser.g:2959:3: ( rule__Redirection__TargetAssignment_1_0_2_0 )
                    // InternalMyBashParser.g:2959:4: rule__Redirection__TargetAssignment_1_0_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Redirection__TargetAssignment_1_0_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getTargetAssignment_1_0_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2963:2: ( RULE_I_NUMBER )
                    {
                    // InternalMyBashParser.g:2963:2: ( RULE_I_NUMBER )
                    // InternalMyBashParser.g:2964:3: RULE_I_NUMBER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRedirectionAccess().getI_NUMBERTerminalRuleCall_1_0_2_1()); 
                    }
                    match(input,RULE_I_NUMBER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRedirectionAccess().getI_NUMBERTerminalRuleCall_1_0_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Alternatives_1_0_2"


    // $ANTLR start "rule__Word__Alternatives"
    // InternalMyBashParser.g:2973:1: rule__Word__Alternatives : ( ( ruleWords ) | ( ( rule__Word__ElementsAssignment_1 ) ) );
    public final void rule__Word__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2977:1: ( ( ruleWords ) | ( ( rule__Word__ElementsAssignment_1 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==DollarSignLeftParenthesisLeftParenthesis||LA26_0==DollarSignLeftCurlyBracket||LA26_0==LessThanSignLeftParenthesis||LA26_0==GreaterThanSignLeftParenthesis||LA26_0==QuotationMark||LA26_0==Apostrophe||LA26_0==RULE_WORD_PART||LA26_0==RULE_VARIABLE||LA26_0==RULE_CS_START) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_S_WORD_PART) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalMyBashParser.g:2978:2: ( ruleWords )
                    {
                    // InternalMyBashParser.g:2978:2: ( ruleWords )
                    // InternalMyBashParser.g:2979:3: ruleWords
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWordAccess().getWordsParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWords();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWordAccess().getWordsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:2984:2: ( ( rule__Word__ElementsAssignment_1 ) )
                    {
                    // InternalMyBashParser.g:2984:2: ( ( rule__Word__ElementsAssignment_1 ) )
                    // InternalMyBashParser.g:2985:3: ( rule__Word__ElementsAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWordAccess().getElementsAssignment_1()); 
                    }
                    // InternalMyBashParser.g:2986:3: ( rule__Word__ElementsAssignment_1 )
                    // InternalMyBashParser.g:2986:4: rule__Word__ElementsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Word__ElementsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWordAccess().getElementsAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__Alternatives"


    // $ANTLR start "rule__Assignable__Alternatives"
    // InternalMyBashParser.g:2994:1: rule__Assignable__Alternatives : ( ( ruleWord ) | ( ruleArray ) );
    public final void rule__Assignable__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:2998:1: ( ( ruleWord ) | ( ruleArray ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==DollarSignLeftParenthesisLeftParenthesis||LA27_0==DollarSignLeftCurlyBracket||LA27_0==LessThanSignLeftParenthesis||LA27_0==GreaterThanSignLeftParenthesis||LA27_0==QuotationMark||LA27_0==Apostrophe||(LA27_0>=RULE_S_WORD_PART && LA27_0<=RULE_WORD_PART)||LA27_0==RULE_VARIABLE||LA27_0==RULE_CS_START) ) {
                alt27=1;
            }
            else if ( (LA27_0==LeftParenthesis) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalMyBashParser.g:2999:2: ( ruleWord )
                    {
                    // InternalMyBashParser.g:2999:2: ( ruleWord )
                    // InternalMyBashParser.g:3000:3: ruleWord
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignableAccess().getWordParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWord();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignableAccess().getWordParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3005:2: ( ruleArray )
                    {
                    // InternalMyBashParser.g:3005:2: ( ruleArray )
                    // InternalMyBashParser.g:3006:3: ruleArray
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignableAccess().getArrayParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArray();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignableAccess().getArrayParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignable__Alternatives"


    // $ANTLR start "rule__Expansion__Alternatives"
    // InternalMyBashParser.g:3015:1: rule__Expansion__Alternatives : ( ( ruleParameterExpansion ) | ( ruleCommandSubstitution ) | ( ruleArithmeticExpansion ) | ( ruleProcessSubstitution ) );
    public final void rule__Expansion__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3019:1: ( ( ruleParameterExpansion ) | ( ruleCommandSubstitution ) | ( ruleArithmeticExpansion ) | ( ruleProcessSubstitution ) )
            int alt28=4;
            switch ( input.LA(1) ) {
            case DollarSignLeftCurlyBracket:
            case RULE_VARIABLE:
                {
                alt28=1;
                }
                break;
            case RULE_CS_START:
                {
                alt28=2;
                }
                break;
            case DollarSignLeftParenthesisLeftParenthesis:
                {
                alt28=3;
                }
                break;
            case LessThanSignLeftParenthesis:
            case GreaterThanSignLeftParenthesis:
                {
                alt28=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalMyBashParser.g:3020:2: ( ruleParameterExpansion )
                    {
                    // InternalMyBashParser.g:3020:2: ( ruleParameterExpansion )
                    // InternalMyBashParser.g:3021:3: ruleParameterExpansion
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpansionAccess().getParameterExpansionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleParameterExpansion();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpansionAccess().getParameterExpansionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3026:2: ( ruleCommandSubstitution )
                    {
                    // InternalMyBashParser.g:3026:2: ( ruleCommandSubstitution )
                    // InternalMyBashParser.g:3027:3: ruleCommandSubstitution
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpansionAccess().getCommandSubstitutionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCommandSubstitution();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpansionAccess().getCommandSubstitutionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3032:2: ( ruleArithmeticExpansion )
                    {
                    // InternalMyBashParser.g:3032:2: ( ruleArithmeticExpansion )
                    // InternalMyBashParser.g:3033:3: ruleArithmeticExpansion
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpansionAccess().getArithmeticExpansionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArithmeticExpansion();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpansionAccess().getArithmeticExpansionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:3038:2: ( ruleProcessSubstitution )
                    {
                    // InternalMyBashParser.g:3038:2: ( ruleProcessSubstitution )
                    // InternalMyBashParser.g:3039:3: ruleProcessSubstitution
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpansionAccess().getProcessSubstitutionParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleProcessSubstitution();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpansionAccess().getProcessSubstitutionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expansion__Alternatives"


    // $ANTLR start "rule__WordElement__Alternatives"
    // InternalMyBashParser.g:3048:1: rule__WordElement__Alternatives : ( ( ( ruleLiteralWordPart ) ) | ( ruleDQString ) | ( ruleExpansion ) );
    public final void rule__WordElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3052:1: ( ( ( ruleLiteralWordPart ) ) | ( ruleDQString ) | ( ruleExpansion ) )
            int alt29=3;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // InternalMyBashParser.g:3053:2: ( ( ruleLiteralWordPart ) )
                    {
                    // InternalMyBashParser.g:3053:2: ( ( ruleLiteralWordPart ) )
                    // InternalMyBashParser.g:3054:3: ( ruleLiteralWordPart )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWordElementAccess().getLiteralWordPartParserRuleCall_0()); 
                    }
                    // InternalMyBashParser.g:3055:3: ( ruleLiteralWordPart )
                    // InternalMyBashParser.g:3055:4: ruleLiteralWordPart
                    {
                    pushFollow(FOLLOW_2);
                    ruleLiteralWordPart();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWordElementAccess().getLiteralWordPartParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3059:2: ( ruleDQString )
                    {
                    // InternalMyBashParser.g:3059:2: ( ruleDQString )
                    // InternalMyBashParser.g:3060:3: ruleDQString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWordElementAccess().getDQStringParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDQString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWordElementAccess().getDQStringParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3065:2: ( ruleExpansion )
                    {
                    // InternalMyBashParser.g:3065:2: ( ruleExpansion )
                    // InternalMyBashParser.g:3066:3: ruleExpansion
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWordElementAccess().getExpansionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExpansion();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWordElementAccess().getExpansionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WordElement__Alternatives"


    // $ANTLR start "rule__StringElement__Alternatives"
    // InternalMyBashParser.g:3075:1: rule__StringElement__Alternatives : ( ( ruleLiteralStringPart ) | ( ruleExpansion ) );
    public final void rule__StringElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3079:1: ( ( ruleLiteralStringPart ) | ( ruleExpansion ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_WORD_PART) ) {
                alt30=1;
            }
            else if ( (LA30_0==DollarSignLeftParenthesisLeftParenthesis||LA30_0==DollarSignLeftCurlyBracket||LA30_0==LessThanSignLeftParenthesis||LA30_0==GreaterThanSignLeftParenthesis||LA30_0==RULE_VARIABLE||LA30_0==RULE_CS_START) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalMyBashParser.g:3080:2: ( ruleLiteralStringPart )
                    {
                    // InternalMyBashParser.g:3080:2: ( ruleLiteralStringPart )
                    // InternalMyBashParser.g:3081:3: ruleLiteralStringPart
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStringElementAccess().getLiteralStringPartParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLiteralStringPart();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStringElementAccess().getLiteralStringPartParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3086:2: ( ruleExpansion )
                    {
                    // InternalMyBashParser.g:3086:2: ( ruleExpansion )
                    // InternalMyBashParser.g:3087:3: ruleExpansion
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStringElementAccess().getExpansionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExpansion();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStringElementAccess().getExpansionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringElement__Alternatives"


    // $ANTLR start "rule__LiteralWordPart__Alternatives_1_0"
    // InternalMyBashParser.g:3096:1: rule__LiteralWordPart__Alternatives_1_0 : ( ( ( rule__LiteralWordPart__ValuesAssignment_1_0_0 ) ) | ( ( rule__LiteralWordPart__Group_1_0_1__0 ) ) | ( ( rule__LiteralWordPart__Group_1_0_2__0 ) ) );
    public final void rule__LiteralWordPart__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3100:1: ( ( ( rule__LiteralWordPart__ValuesAssignment_1_0_0 ) ) | ( ( rule__LiteralWordPart__Group_1_0_1__0 ) ) | ( ( rule__LiteralWordPart__Group_1_0_2__0 ) ) )
            int alt31=3;
            switch ( input.LA(1) ) {
            case RULE_WORD_PART:
                {
                alt31=1;
                }
                break;
            case Apostrophe:
                {
                alt31=2;
                }
                break;
            case QuotationMark:
                {
                alt31=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalMyBashParser.g:3101:2: ( ( rule__LiteralWordPart__ValuesAssignment_1_0_0 ) )
                    {
                    // InternalMyBashParser.g:3101:2: ( ( rule__LiteralWordPart__ValuesAssignment_1_0_0 ) )
                    // InternalMyBashParser.g:3102:3: ( rule__LiteralWordPart__ValuesAssignment_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralWordPartAccess().getValuesAssignment_1_0_0()); 
                    }
                    // InternalMyBashParser.g:3103:3: ( rule__LiteralWordPart__ValuesAssignment_1_0_0 )
                    // InternalMyBashParser.g:3103:4: rule__LiteralWordPart__ValuesAssignment_1_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralWordPart__ValuesAssignment_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralWordPartAccess().getValuesAssignment_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3107:2: ( ( rule__LiteralWordPart__Group_1_0_1__0 ) )
                    {
                    // InternalMyBashParser.g:3107:2: ( ( rule__LiteralWordPart__Group_1_0_1__0 ) )
                    // InternalMyBashParser.g:3108:3: ( rule__LiteralWordPart__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralWordPartAccess().getGroup_1_0_1()); 
                    }
                    // InternalMyBashParser.g:3109:3: ( rule__LiteralWordPart__Group_1_0_1__0 )
                    // InternalMyBashParser.g:3109:4: rule__LiteralWordPart__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralWordPart__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralWordPartAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3113:2: ( ( rule__LiteralWordPart__Group_1_0_2__0 ) )
                    {
                    // InternalMyBashParser.g:3113:2: ( ( rule__LiteralWordPart__Group_1_0_2__0 ) )
                    // InternalMyBashParser.g:3114:3: ( rule__LiteralWordPart__Group_1_0_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralWordPartAccess().getGroup_1_0_2()); 
                    }
                    // InternalMyBashParser.g:3115:3: ( rule__LiteralWordPart__Group_1_0_2__0 )
                    // InternalMyBashParser.g:3115:4: rule__LiteralWordPart__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralWordPart__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralWordPartAccess().getGroup_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Alternatives_1_0"


    // $ANTLR start "rule__CondOrAnd__Alternatives_1_1"
    // InternalMyBashParser.g:3123:1: rule__CondOrAnd__Alternatives_1_1 : ( ( VerticalLineVerticalLine ) | ( AmpersandAmpersand ) );
    public final void rule__CondOrAnd__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3127:1: ( ( VerticalLineVerticalLine ) | ( AmpersandAmpersand ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==VerticalLineVerticalLine) ) {
                alt32=1;
            }
            else if ( (LA32_0==AmpersandAmpersand) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalMyBashParser.g:3128:2: ( VerticalLineVerticalLine )
                    {
                    // InternalMyBashParser.g:3128:2: ( VerticalLineVerticalLine )
                    // InternalMyBashParser.g:3129:3: VerticalLineVerticalLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCondOrAndAccess().getVerticalLineVerticalLineKeyword_1_1_0()); 
                    }
                    match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCondOrAndAccess().getVerticalLineVerticalLineKeyword_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3134:2: ( AmpersandAmpersand )
                    {
                    // InternalMyBashParser.g:3134:2: ( AmpersandAmpersand )
                    // InternalMyBashParser.g:3135:3: AmpersandAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCondOrAndAccess().getAmpersandAmpersandKeyword_1_1_1()); 
                    }
                    match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCondOrAndAccess().getAmpersandAmpersandKeyword_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Alternatives_1_1"


    // $ANTLR start "rule__CondExp__Alternatives"
    // InternalMyBashParser.g:3144:1: rule__CondExp__Alternatives : ( ( ( rule__CondExp__Group_0__0 ) ) | ( ( rule__CondExp__Group_1__0 ) ) | ( ( rule__CondExp__Group_2__0 ) ) );
    public final void rule__CondExp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3148:1: ( ( ( rule__CondExp__Group_0__0 ) ) | ( ( rule__CondExp__Group_1__0 ) ) | ( ( rule__CondExp__Group_2__0 ) ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case RULE_C_S_OP:
                {
                alt33=1;
                }
                break;
            case DollarSignLeftParenthesisLeftParenthesis:
            case DollarSignLeftCurlyBracket:
            case LessThanSignLeftParenthesis:
            case GreaterThanSignLeftParenthesis:
            case QuotationMark:
            case Apostrophe:
            case RULE_S_WORD_PART:
            case RULE_WORD_PART:
            case RULE_VARIABLE:
            case RULE_CS_START:
                {
                alt33=2;
                }
                break;
            case LeftParenthesis:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalMyBashParser.g:3149:2: ( ( rule__CondExp__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3149:2: ( ( rule__CondExp__Group_0__0 ) )
                    // InternalMyBashParser.g:3150:3: ( rule__CondExp__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCondExpAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3151:3: ( rule__CondExp__Group_0__0 )
                    // InternalMyBashParser.g:3151:4: rule__CondExp__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CondExp__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCondExpAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3155:2: ( ( rule__CondExp__Group_1__0 ) )
                    {
                    // InternalMyBashParser.g:3155:2: ( ( rule__CondExp__Group_1__0 ) )
                    // InternalMyBashParser.g:3156:3: ( rule__CondExp__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCondExpAccess().getGroup_1()); 
                    }
                    // InternalMyBashParser.g:3157:3: ( rule__CondExp__Group_1__0 )
                    // InternalMyBashParser.g:3157:4: rule__CondExp__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CondExp__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCondExpAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3161:2: ( ( rule__CondExp__Group_2__0 ) )
                    {
                    // InternalMyBashParser.g:3161:2: ( ( rule__CondExp__Group_2__0 ) )
                    // InternalMyBashParser.g:3162:3: ( rule__CondExp__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCondExpAccess().getGroup_2()); 
                    }
                    // InternalMyBashParser.g:3163:3: ( rule__CondExp__Group_2__0 )
                    // InternalMyBashParser.g:3163:4: rule__CondExp__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CondExp__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCondExpAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Alternatives"


    // $ANTLR start "rule__CondExp__Alternatives_1_1_1"
    // InternalMyBashParser.g:3171:1: rule__CondExp__Alternatives_1_1_1 : ( ( ( rule__CondExp__Group_1_1_1_0__0 ) ) | ( ( rule__CondExp__Group_1_1_1_1__0 ) ) );
    public final void rule__CondExp__Alternatives_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3175:1: ( ( ( rule__CondExp__Group_1_1_1_0__0 ) ) | ( ( rule__CondExp__Group_1_1_1_1__0 ) ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_C_B_OP) ) {
                alt34=1;
            }
            else if ( (LA34_0==EqualsSignTilde) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalMyBashParser.g:3176:2: ( ( rule__CondExp__Group_1_1_1_0__0 ) )
                    {
                    // InternalMyBashParser.g:3176:2: ( ( rule__CondExp__Group_1_1_1_0__0 ) )
                    // InternalMyBashParser.g:3177:3: ( rule__CondExp__Group_1_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCondExpAccess().getGroup_1_1_1_0()); 
                    }
                    // InternalMyBashParser.g:3178:3: ( rule__CondExp__Group_1_1_1_0__0 )
                    // InternalMyBashParser.g:3178:4: rule__CondExp__Group_1_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CondExp__Group_1_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCondExpAccess().getGroup_1_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3182:2: ( ( rule__CondExp__Group_1_1_1_1__0 ) )
                    {
                    // InternalMyBashParser.g:3182:2: ( ( rule__CondExp__Group_1_1_1_1__0 ) )
                    // InternalMyBashParser.g:3183:3: ( rule__CondExp__Group_1_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCondExpAccess().getGroup_1_1_1_1()); 
                    }
                    // InternalMyBashParser.g:3184:3: ( rule__CondExp__Group_1_1_1_1__0 )
                    // InternalMyBashParser.g:3184:4: rule__CondExp__Group_1_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CondExp__Group_1_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCondExpAccess().getGroup_1_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Alternatives_1_1_1"


    // $ANTLR start "rule__RegularElements__Alternatives_1"
    // InternalMyBashParser.g:3192:1: rule__RegularElements__Alternatives_1 : ( ( ( rule__RegularElements__Group_1_0__0 ) ) | ( ( rule__RegularElements__PartsAssignment_1_1 ) ) );
    public final void rule__RegularElements__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3196:1: ( ( ( rule__RegularElements__Group_1_0__0 ) ) | ( ( rule__RegularElements__PartsAssignment_1_1 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==LeftParenthesis) ) {
                alt35=1;
            }
            else if ( (LA35_0==DollarSignLeftParenthesisLeftParenthesis||LA35_0==DollarSignLeftCurlyBracket||LA35_0==LessThanSignLeftParenthesis||LA35_0==GreaterThanSignLeftParenthesis||LA35_0==QuotationMark||LA35_0==Apostrophe||(LA35_0>=RULE_S_WORD_PART && LA35_0<=RULE_WORD_PART)||LA35_0==RULE_VARIABLE||LA35_0==RULE_CS_START) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalMyBashParser.g:3197:2: ( ( rule__RegularElements__Group_1_0__0 ) )
                    {
                    // InternalMyBashParser.g:3197:2: ( ( rule__RegularElements__Group_1_0__0 ) )
                    // InternalMyBashParser.g:3198:3: ( rule__RegularElements__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRegularElementsAccess().getGroup_1_0()); 
                    }
                    // InternalMyBashParser.g:3199:3: ( rule__RegularElements__Group_1_0__0 )
                    // InternalMyBashParser.g:3199:4: rule__RegularElements__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RegularElements__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRegularElementsAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3203:2: ( ( rule__RegularElements__PartsAssignment_1_1 ) )
                    {
                    // InternalMyBashParser.g:3203:2: ( ( rule__RegularElements__PartsAssignment_1_1 ) )
                    // InternalMyBashParser.g:3204:3: ( rule__RegularElements__PartsAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRegularElementsAccess().getPartsAssignment_1_1()); 
                    }
                    // InternalMyBashParser.g:3205:3: ( rule__RegularElements__PartsAssignment_1_1 )
                    // InternalMyBashParser.g:3205:4: rule__RegularElements__PartsAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RegularElements__PartsAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRegularElementsAccess().getPartsAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Alternatives_1"


    // $ANTLR start "rule__ParameterExpansion__Alternatives"
    // InternalMyBashParser.g:3213:1: rule__ParameterExpansion__Alternatives : ( ( ( rule__ParameterExpansion__Group_0__0 ) ) | ( ( rule__ParameterExpansion__Group_1__0 ) ) );
    public final void rule__ParameterExpansion__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3217:1: ( ( ( rule__ParameterExpansion__Group_0__0 ) ) | ( ( rule__ParameterExpansion__Group_1__0 ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==DollarSignLeftCurlyBracket) ) {
                alt36=1;
            }
            else if ( (LA36_0==RULE_VARIABLE) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalMyBashParser.g:3218:2: ( ( rule__ParameterExpansion__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3218:2: ( ( rule__ParameterExpansion__Group_0__0 ) )
                    // InternalMyBashParser.g:3219:3: ( rule__ParameterExpansion__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3220:3: ( rule__ParameterExpansion__Group_0__0 )
                    // InternalMyBashParser.g:3220:4: rule__ParameterExpansion__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansion__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3224:2: ( ( rule__ParameterExpansion__Group_1__0 ) )
                    {
                    // InternalMyBashParser.g:3224:2: ( ( rule__ParameterExpansion__Group_1__0 ) )
                    // InternalMyBashParser.g:3225:3: ( rule__ParameterExpansion__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionAccess().getGroup_1()); 
                    }
                    // InternalMyBashParser.g:3226:3: ( rule__ParameterExpansion__Group_1__0 )
                    // InternalMyBashParser.g:3226:4: rule__ParameterExpansion__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansion__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Alternatives"


    // $ANTLR start "rule__ParameterExpansionStart__Alternatives_3"
    // InternalMyBashParser.g:3234:1: rule__ParameterExpansionStart__Alternatives_3 : ( ( ( rule__ParameterExpansionStart__RefAssignment_3_0 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_1 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_2 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_3 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_4 ) ) );
    public final void rule__ParameterExpansionStart__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3238:1: ( ( ( rule__ParameterExpansionStart__RefAssignment_3_0 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_1 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_2 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_3 ) ) | ( ( rule__ParameterExpansionStart__ValueAssignment_3_4 ) ) )
            int alt37=5;
            switch ( input.LA(1) ) {
            case RULE_NAME:
                {
                alt37=1;
                }
                break;
            case RULE_I_NUMBER:
                {
                alt37=2;
                }
                break;
            case QuestionMark:
                {
                alt37=3;
                }
                break;
            case CommercialAt:
                {
                alt37=4;
                }
                break;
            case Asterisk:
                {
                alt37=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalMyBashParser.g:3239:2: ( ( rule__ParameterExpansionStart__RefAssignment_3_0 ) )
                    {
                    // InternalMyBashParser.g:3239:2: ( ( rule__ParameterExpansionStart__RefAssignment_3_0 ) )
                    // InternalMyBashParser.g:3240:3: ( rule__ParameterExpansionStart__RefAssignment_3_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getRefAssignment_3_0()); 
                    }
                    // InternalMyBashParser.g:3241:3: ( rule__ParameterExpansionStart__RefAssignment_3_0 )
                    // InternalMyBashParser.g:3241:4: rule__ParameterExpansionStart__RefAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__RefAssignment_3_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getRefAssignment_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3245:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_1 ) )
                    {
                    // InternalMyBashParser.g:3245:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_1 ) )
                    // InternalMyBashParser.g:3246:3: ( rule__ParameterExpansionStart__ValueAssignment_3_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_1()); 
                    }
                    // InternalMyBashParser.g:3247:3: ( rule__ParameterExpansionStart__ValueAssignment_3_1 )
                    // InternalMyBashParser.g:3247:4: rule__ParameterExpansionStart__ValueAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__ValueAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3251:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_2 ) )
                    {
                    // InternalMyBashParser.g:3251:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_2 ) )
                    // InternalMyBashParser.g:3252:3: ( rule__ParameterExpansionStart__ValueAssignment_3_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_2()); 
                    }
                    // InternalMyBashParser.g:3253:3: ( rule__ParameterExpansionStart__ValueAssignment_3_2 )
                    // InternalMyBashParser.g:3253:4: rule__ParameterExpansionStart__ValueAssignment_3_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__ValueAssignment_3_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:3257:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_3 ) )
                    {
                    // InternalMyBashParser.g:3257:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_3 ) )
                    // InternalMyBashParser.g:3258:3: ( rule__ParameterExpansionStart__ValueAssignment_3_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_3()); 
                    }
                    // InternalMyBashParser.g:3259:3: ( rule__ParameterExpansionStart__ValueAssignment_3_3 )
                    // InternalMyBashParser.g:3259:4: rule__ParameterExpansionStart__ValueAssignment_3_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__ValueAssignment_3_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyBashParser.g:3263:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_4 ) )
                    {
                    // InternalMyBashParser.g:3263:2: ( ( rule__ParameterExpansionStart__ValueAssignment_3_4 ) )
                    // InternalMyBashParser.g:3264:3: ( rule__ParameterExpansionStart__ValueAssignment_3_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_4()); 
                    }
                    // InternalMyBashParser.g:3265:3: ( rule__ParameterExpansionStart__ValueAssignment_3_4 )
                    // InternalMyBashParser.g:3265:4: rule__ParameterExpansionStart__ValueAssignment_3_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__ValueAssignment_3_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getValueAssignment_3_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Alternatives_3"


    // $ANTLR start "rule__ParameterExpansionStart__Alternatives_4_1"
    // InternalMyBashParser.g:3273:1: rule__ParameterExpansionStart__Alternatives_4_1 : ( ( CommercialAt ) | ( Asterisk ) | ( ( rule__ParameterExpansionStart__IndexAssignment_4_1_2 ) ) );
    public final void rule__ParameterExpansionStart__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3277:1: ( ( CommercialAt ) | ( Asterisk ) | ( ( rule__ParameterExpansionStart__IndexAssignment_4_1_2 ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case CommercialAt:
                {
                alt38=1;
                }
                break;
            case Asterisk:
                {
                alt38=2;
                }
                break;
            case DollarSignLeftParenthesisLeftParenthesis:
            case DollarSignLeftCurlyBracket:
            case PlusSignPlusSign:
            case HyphenMinusHyphenMinus:
            case LessThanSignLeftParenthesis:
            case GreaterThanSignLeftParenthesis:
            case ExclamationMark:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case Tilde:
            case RULE_I_NUMBER:
            case RULE_NAME:
            case RULE_VARIABLE:
            case RULE_A_PREFIX:
            case RULE_CS_START:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalMyBashParser.g:3278:2: ( CommercialAt )
                    {
                    // InternalMyBashParser.g:3278:2: ( CommercialAt )
                    // InternalMyBashParser.g:3279:3: CommercialAt
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getCommercialAtKeyword_4_1_0()); 
                    }
                    match(input,CommercialAt,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getCommercialAtKeyword_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3284:2: ( Asterisk )
                    {
                    // InternalMyBashParser.g:3284:2: ( Asterisk )
                    // InternalMyBashParser.g:3285:3: Asterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getAsteriskKeyword_4_1_1()); 
                    }
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getAsteriskKeyword_4_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3290:2: ( ( rule__ParameterExpansionStart__IndexAssignment_4_1_2 ) )
                    {
                    // InternalMyBashParser.g:3290:2: ( ( rule__ParameterExpansionStart__IndexAssignment_4_1_2 ) )
                    // InternalMyBashParser.g:3291:3: ( rule__ParameterExpansionStart__IndexAssignment_4_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterExpansionStartAccess().getIndexAssignment_4_1_2()); 
                    }
                    // InternalMyBashParser.g:3292:3: ( rule__ParameterExpansionStart__IndexAssignment_4_1_2 )
                    // InternalMyBashParser.g:3292:4: rule__ParameterExpansionStart__IndexAssignment_4_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__IndexAssignment_4_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterExpansionStartAccess().getIndexAssignment_4_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Alternatives_4_1"


    // $ANTLR start "rule__ParameterProcessor__Alternatives"
    // InternalMyBashParser.g:3300:1: rule__ParameterProcessor__Alternatives : ( ( ( rule__ParameterProcessor__Group_0__0 ) ) | ( ( rule__ParameterProcessor__Group_1__0 ) ) | ( ( rule__ParameterProcessor__Group_2__0 ) ) | ( ( rule__ParameterProcessor__Group_3__0 ) ) | ( ( rule__ParameterProcessor__Group_4__0 ) ) );
    public final void rule__ParameterProcessor__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3304:1: ( ( ( rule__ParameterProcessor__Group_0__0 ) ) | ( ( rule__ParameterProcessor__Group_1__0 ) ) | ( ( rule__ParameterProcessor__Group_2__0 ) ) | ( ( rule__ParameterProcessor__Group_3__0 ) ) | ( ( rule__ParameterProcessor__Group_4__0 ) ) )
            int alt39=5;
            switch ( input.LA(1) ) {
            case NumberSignNumberSign:
            case PercentSignPercentSign:
            case CommaComma:
            case ColonPlusSign:
            case ColonHyphenMinus:
            case ColonEqualsSign:
            case ColonQuestionMark:
            case CircumflexAccentCircumflexAccent:
            case NumberSign:
            case PercentSign:
            case PlusSign:
            case Comma:
            case HyphenMinus:
            case EqualsSign:
            case QuestionMark:
            case CircumflexAccent:
                {
                alt39=1;
                }
                break;
            case SolidusSolidus:
                {
                int LA39_2 = input.LA(2);

                if ( (LA39_2==Solidus) ) {
                    alt39=3;
                }
                else if ( (LA39_2==EOF||LA39_2==DollarSignLeftParenthesisLeftParenthesis||LA39_2==DollarSignLeftCurlyBracket||LA39_2==LessThanSignLeftParenthesis||LA39_2==GreaterThanSignLeftParenthesis||LA39_2==QuotationMark||LA39_2==Apostrophe||LA39_2==RightCurlyBracket||(LA39_2>=RULE_S_WORD_PART && LA39_2<=RULE_WORD_PART)||LA39_2==RULE_VARIABLE||LA39_2==RULE_CS_START) ) {
                    alt39=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 2, input);

                    throw nvae;
                }
                }
                break;
            case Solidus:
                {
                int LA39_3 = input.LA(2);

                if ( (LA39_3==Solidus) ) {
                    alt39=3;
                }
                else if ( (LA39_3==EOF||LA39_3==DollarSignLeftParenthesisLeftParenthesis||LA39_3==DollarSignLeftCurlyBracket||LA39_3==LessThanSignLeftParenthesis||LA39_3==GreaterThanSignLeftParenthesis||LA39_3==QuotationMark||LA39_3==Apostrophe||LA39_3==RightCurlyBracket||(LA39_3>=RULE_S_WORD_PART && LA39_3<=RULE_WORD_PART)||LA39_3==RULE_VARIABLE||LA39_3==RULE_CS_START) ) {
                    alt39=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 3, input);

                    throw nvae;
                }
                }
                break;
            case Colon:
                {
                int LA39_4 = input.LA(2);

                if ( (LA39_4==EOF||LA39_4==DollarSignLeftParenthesisLeftParenthesis||LA39_4==DollarSignLeftCurlyBracket||LA39_4==PlusSignPlusSign||LA39_4==HyphenMinusHyphenMinus||LA39_4==LessThanSignLeftParenthesis||LA39_4==GreaterThanSignLeftParenthesis||LA39_4==ExclamationMark||LA39_4==LeftParenthesis||LA39_4==PlusSign||LA39_4==HyphenMinus||(LA39_4>=RightCurlyBracket && LA39_4<=RULE_I_NUMBER)||LA39_4==RULE_NAME||(LA39_4>=RULE_VARIABLE && LA39_4<=RULE_A_PREFIX)||LA39_4==RULE_CS_START) ) {
                    alt39=4;
                }
                else if ( (LA39_4==Colon) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalMyBashParser.g:3305:2: ( ( rule__ParameterProcessor__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3305:2: ( ( rule__ParameterProcessor__Group_0__0 ) )
                    // InternalMyBashParser.g:3306:3: ( rule__ParameterProcessor__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3307:3: ( rule__ParameterProcessor__Group_0__0 )
                    // InternalMyBashParser.g:3307:4: rule__ParameterProcessor__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3311:2: ( ( rule__ParameterProcessor__Group_1__0 ) )
                    {
                    // InternalMyBashParser.g:3311:2: ( ( rule__ParameterProcessor__Group_1__0 ) )
                    // InternalMyBashParser.g:3312:3: ( rule__ParameterProcessor__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getGroup_1()); 
                    }
                    // InternalMyBashParser.g:3313:3: ( rule__ParameterProcessor__Group_1__0 )
                    // InternalMyBashParser.g:3313:4: rule__ParameterProcessor__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3317:2: ( ( rule__ParameterProcessor__Group_2__0 ) )
                    {
                    // InternalMyBashParser.g:3317:2: ( ( rule__ParameterProcessor__Group_2__0 ) )
                    // InternalMyBashParser.g:3318:3: ( rule__ParameterProcessor__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getGroup_2()); 
                    }
                    // InternalMyBashParser.g:3319:3: ( rule__ParameterProcessor__Group_2__0 )
                    // InternalMyBashParser.g:3319:4: rule__ParameterProcessor__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:3323:2: ( ( rule__ParameterProcessor__Group_3__0 ) )
                    {
                    // InternalMyBashParser.g:3323:2: ( ( rule__ParameterProcessor__Group_3__0 ) )
                    // InternalMyBashParser.g:3324:3: ( rule__ParameterProcessor__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getGroup_3()); 
                    }
                    // InternalMyBashParser.g:3325:3: ( rule__ParameterProcessor__Group_3__0 )
                    // InternalMyBashParser.g:3325:4: rule__ParameterProcessor__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyBashParser.g:3329:2: ( ( rule__ParameterProcessor__Group_4__0 ) )
                    {
                    // InternalMyBashParser.g:3329:2: ( ( rule__ParameterProcessor__Group_4__0 ) )
                    // InternalMyBashParser.g:3330:3: ( rule__ParameterProcessor__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getGroup_4()); 
                    }
                    // InternalMyBashParser.g:3331:3: ( rule__ParameterProcessor__Group_4__0 )
                    // InternalMyBashParser.g:3331:4: rule__ParameterProcessor__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Alternatives"


    // $ANTLR start "rule__ParameterProcessor__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:3339:1: rule__ParameterProcessor__OpAlternatives_1_1_0 : ( ( SolidusSolidus ) | ( Solidus ) );
    public final void rule__ParameterProcessor__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3343:1: ( ( SolidusSolidus ) | ( Solidus ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==SolidusSolidus) ) {
                alt40=1;
            }
            else if ( (LA40_0==Solidus) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalMyBashParser.g:3344:2: ( SolidusSolidus )
                    {
                    // InternalMyBashParser.g:3344:2: ( SolidusSolidus )
                    // InternalMyBashParser.g:3345:3: SolidusSolidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getOpSolidusSolidusKeyword_1_1_0_0()); 
                    }
                    match(input,SolidusSolidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getOpSolidusSolidusKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3350:2: ( Solidus )
                    {
                    // InternalMyBashParser.g:3350:2: ( Solidus )
                    // InternalMyBashParser.g:3351:3: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__OpAlternatives_1_1_0"


    // $ANTLR start "rule__ParameterProcessor__OpAlternatives_2_1_0"
    // InternalMyBashParser.g:3360:1: rule__ParameterProcessor__OpAlternatives_2_1_0 : ( ( SolidusSolidus ) | ( Solidus ) );
    public final void rule__ParameterProcessor__OpAlternatives_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3364:1: ( ( SolidusSolidus ) | ( Solidus ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==SolidusSolidus) ) {
                alt41=1;
            }
            else if ( (LA41_0==Solidus) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalMyBashParser.g:3365:2: ( SolidusSolidus )
                    {
                    // InternalMyBashParser.g:3365:2: ( SolidusSolidus )
                    // InternalMyBashParser.g:3366:3: SolidusSolidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getOpSolidusSolidusKeyword_2_1_0_0()); 
                    }
                    match(input,SolidusSolidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getOpSolidusSolidusKeyword_2_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3371:2: ( Solidus )
                    {
                    // InternalMyBashParser.g:3371:2: ( Solidus )
                    // InternalMyBashParser.g:3372:3: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterProcessorAccess().getOpSolidusKeyword_2_1_0_1()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterProcessorAccess().getOpSolidusKeyword_2_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__OpAlternatives_2_1_0"


    // $ANTLR start "rule__ProcessSubstitutionStart__OpAlternatives_0_0"
    // InternalMyBashParser.g:3381:1: rule__ProcessSubstitutionStart__OpAlternatives_0_0 : ( ( LessThanSignLeftParenthesis ) | ( GreaterThanSignLeftParenthesis ) );
    public final void rule__ProcessSubstitutionStart__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3385:1: ( ( LessThanSignLeftParenthesis ) | ( GreaterThanSignLeftParenthesis ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==LessThanSignLeftParenthesis) ) {
                alt42=1;
            }
            else if ( (LA42_0==GreaterThanSignLeftParenthesis) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalMyBashParser.g:3386:2: ( LessThanSignLeftParenthesis )
                    {
                    // InternalMyBashParser.g:3386:2: ( LessThanSignLeftParenthesis )
                    // InternalMyBashParser.g:3387:3: LessThanSignLeftParenthesis
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcessSubstitutionStartAccess().getOpLessThanSignLeftParenthesisKeyword_0_0_0()); 
                    }
                    match(input,LessThanSignLeftParenthesis,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcessSubstitutionStartAccess().getOpLessThanSignLeftParenthesisKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3392:2: ( GreaterThanSignLeftParenthesis )
                    {
                    // InternalMyBashParser.g:3392:2: ( GreaterThanSignLeftParenthesis )
                    // InternalMyBashParser.g:3393:3: GreaterThanSignLeftParenthesis
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcessSubstitutionStartAccess().getOpGreaterThanSignLeftParenthesisKeyword_0_0_1()); 
                    }
                    match(input,GreaterThanSignLeftParenthesis,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcessSubstitutionStartAccess().getOpGreaterThanSignLeftParenthesisKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitutionStart__OpAlternatives_0_0"


    // $ANTLR start "rule__Arithmetic__Alternatives"
    // InternalMyBashParser.g:3402:1: rule__Arithmetic__Alternatives : ( ( ( rule__Arithmetic__Group_0__0 ) ) | ( ruleConditionalOperator ) );
    public final void rule__Arithmetic__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3406:1: ( ( ( rule__Arithmetic__Group_0__0 ) ) | ( ruleConditionalOperator ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_NAME) ) {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==EOF||LA43_1==ExclamationMarkEqualsSign||LA43_1==AmpersandAmpersand||(LA43_1>=RightParenthesisRightParenthesis && LA43_1<=AsteriskAsterisk)||LA43_1==PlusSignPlusSign||LA43_1==HyphenMinusHyphenMinus||(LA43_1>=LessThanSignLessThanSign && LA43_1<=LessThanSignEqualsSign)||LA43_1==EqualsSignEqualsSign||(LA43_1>=GreaterThanSignEqualsSign && LA43_1<=GreaterThanSignGreaterThanSign)||LA43_1==VerticalLineVerticalLine||(LA43_1>=PercentSign && LA43_1<=Ampersand)||(LA43_1>=RightParenthesis && LA43_1<=LessThanSign)||(LA43_1>=GreaterThanSign && LA43_1<=QuestionMark)||(LA43_1>=RightSquareBracket && LA43_1<=CircumflexAccent)||(LA43_1>=VerticalLine && LA43_1<=RightCurlyBracket)) ) {
                    alt43=2;
                }
                else if ( ((LA43_1>=LessThanSignLessThanSignEqualsSign && LA43_1<=GreaterThanSignGreaterThanSignEqualsSign)||LA43_1==PercentSignEqualsSign||LA43_1==AmpersandEqualsSign||LA43_1==AsteriskEqualsSign||LA43_1==PlusSignEqualsSign||LA43_1==HyphenMinusEqualsSign||LA43_1==SolidusEqualsSign||LA43_1==CircumflexAccentEqualsSign||LA43_1==VerticalLineEqualsSign||LA43_1==EqualsSign) ) {
                    alt43=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA43_0==DollarSignLeftParenthesisLeftParenthesis||LA43_0==DollarSignLeftCurlyBracket||LA43_0==PlusSignPlusSign||LA43_0==HyphenMinusHyphenMinus||LA43_0==LessThanSignLeftParenthesis||LA43_0==GreaterThanSignLeftParenthesis||LA43_0==ExclamationMark||LA43_0==LeftParenthesis||LA43_0==PlusSign||LA43_0==HyphenMinus||(LA43_0>=Tilde && LA43_0<=RULE_I_NUMBER)||(LA43_0>=RULE_VARIABLE && LA43_0<=RULE_A_PREFIX)||LA43_0==RULE_CS_START) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalMyBashParser.g:3407:2: ( ( rule__Arithmetic__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3407:2: ( ( rule__Arithmetic__Group_0__0 ) )
                    // InternalMyBashParser.g:3408:3: ( rule__Arithmetic__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3409:3: ( rule__Arithmetic__Group_0__0 )
                    // InternalMyBashParser.g:3409:4: rule__Arithmetic__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Arithmetic__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3413:2: ( ruleConditionalOperator )
                    {
                    // InternalMyBashParser.g:3413:2: ( ruleConditionalOperator )
                    // InternalMyBashParser.g:3414:3: ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getConditionalOperatorParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getConditionalOperatorParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Alternatives"


    // $ANTLR start "rule__Arithmetic__OpAlternatives_0_2_0"
    // InternalMyBashParser.g:3423:1: rule__Arithmetic__OpAlternatives_0_2_0 : ( ( EqualsSign ) | ( AsteriskEqualsSign ) | ( SolidusEqualsSign ) | ( PercentSignEqualsSign ) | ( PlusSignEqualsSign ) | ( HyphenMinusEqualsSign ) | ( LessThanSignLessThanSignEqualsSign ) | ( GreaterThanSignGreaterThanSignEqualsSign ) | ( AmpersandEqualsSign ) | ( CircumflexAccentEqualsSign ) | ( VerticalLineEqualsSign ) );
    public final void rule__Arithmetic__OpAlternatives_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3427:1: ( ( EqualsSign ) | ( AsteriskEqualsSign ) | ( SolidusEqualsSign ) | ( PercentSignEqualsSign ) | ( PlusSignEqualsSign ) | ( HyphenMinusEqualsSign ) | ( LessThanSignLessThanSignEqualsSign ) | ( GreaterThanSignGreaterThanSignEqualsSign ) | ( AmpersandEqualsSign ) | ( CircumflexAccentEqualsSign ) | ( VerticalLineEqualsSign ) )
            int alt44=11;
            switch ( input.LA(1) ) {
            case EqualsSign:
                {
                alt44=1;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt44=2;
                }
                break;
            case SolidusEqualsSign:
                {
                alt44=3;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt44=4;
                }
                break;
            case PlusSignEqualsSign:
                {
                alt44=5;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt44=6;
                }
                break;
            case LessThanSignLessThanSignEqualsSign:
                {
                alt44=7;
                }
                break;
            case GreaterThanSignGreaterThanSignEqualsSign:
                {
                alt44=8;
                }
                break;
            case AmpersandEqualsSign:
                {
                alt44=9;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt44=10;
                }
                break;
            case VerticalLineEqualsSign:
                {
                alt44=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }

            switch (alt44) {
                case 1 :
                    // InternalMyBashParser.g:3428:2: ( EqualsSign )
                    {
                    // InternalMyBashParser.g:3428:2: ( EqualsSign )
                    // InternalMyBashParser.g:3429:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpEqualsSignKeyword_0_2_0_0()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpEqualsSignKeyword_0_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3434:2: ( AsteriskEqualsSign )
                    {
                    // InternalMyBashParser.g:3434:2: ( AsteriskEqualsSign )
                    // InternalMyBashParser.g:3435:3: AsteriskEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpAsteriskEqualsSignKeyword_0_2_0_1()); 
                    }
                    match(input,AsteriskEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpAsteriskEqualsSignKeyword_0_2_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3440:2: ( SolidusEqualsSign )
                    {
                    // InternalMyBashParser.g:3440:2: ( SolidusEqualsSign )
                    // InternalMyBashParser.g:3441:3: SolidusEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpSolidusEqualsSignKeyword_0_2_0_2()); 
                    }
                    match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpSolidusEqualsSignKeyword_0_2_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:3446:2: ( PercentSignEqualsSign )
                    {
                    // InternalMyBashParser.g:3446:2: ( PercentSignEqualsSign )
                    // InternalMyBashParser.g:3447:3: PercentSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpPercentSignEqualsSignKeyword_0_2_0_3()); 
                    }
                    match(input,PercentSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpPercentSignEqualsSignKeyword_0_2_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyBashParser.g:3452:2: ( PlusSignEqualsSign )
                    {
                    // InternalMyBashParser.g:3452:2: ( PlusSignEqualsSign )
                    // InternalMyBashParser.g:3453:3: PlusSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpPlusSignEqualsSignKeyword_0_2_0_4()); 
                    }
                    match(input,PlusSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpPlusSignEqualsSignKeyword_0_2_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMyBashParser.g:3458:2: ( HyphenMinusEqualsSign )
                    {
                    // InternalMyBashParser.g:3458:2: ( HyphenMinusEqualsSign )
                    // InternalMyBashParser.g:3459:3: HyphenMinusEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpHyphenMinusEqualsSignKeyword_0_2_0_5()); 
                    }
                    match(input,HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpHyphenMinusEqualsSignKeyword_0_2_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMyBashParser.g:3464:2: ( LessThanSignLessThanSignEqualsSign )
                    {
                    // InternalMyBashParser.g:3464:2: ( LessThanSignLessThanSignEqualsSign )
                    // InternalMyBashParser.g:3465:3: LessThanSignLessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpLessThanSignLessThanSignEqualsSignKeyword_0_2_0_6()); 
                    }
                    match(input,LessThanSignLessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpLessThanSignLessThanSignEqualsSignKeyword_0_2_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalMyBashParser.g:3470:2: ( GreaterThanSignGreaterThanSignEqualsSign )
                    {
                    // InternalMyBashParser.g:3470:2: ( GreaterThanSignGreaterThanSignEqualsSign )
                    // InternalMyBashParser.g:3471:3: GreaterThanSignGreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpGreaterThanSignGreaterThanSignEqualsSignKeyword_0_2_0_7()); 
                    }
                    match(input,GreaterThanSignGreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpGreaterThanSignGreaterThanSignEqualsSignKeyword_0_2_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalMyBashParser.g:3476:2: ( AmpersandEqualsSign )
                    {
                    // InternalMyBashParser.g:3476:2: ( AmpersandEqualsSign )
                    // InternalMyBashParser.g:3477:3: AmpersandEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpAmpersandEqualsSignKeyword_0_2_0_8()); 
                    }
                    match(input,AmpersandEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpAmpersandEqualsSignKeyword_0_2_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalMyBashParser.g:3482:2: ( CircumflexAccentEqualsSign )
                    {
                    // InternalMyBashParser.g:3482:2: ( CircumflexAccentEqualsSign )
                    // InternalMyBashParser.g:3483:3: CircumflexAccentEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpCircumflexAccentEqualsSignKeyword_0_2_0_9()); 
                    }
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpCircumflexAccentEqualsSignKeyword_0_2_0_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalMyBashParser.g:3488:2: ( VerticalLineEqualsSign )
                    {
                    // InternalMyBashParser.g:3488:2: ( VerticalLineEqualsSign )
                    // InternalMyBashParser.g:3489:3: VerticalLineEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArithmeticAccess().getOpVerticalLineEqualsSignKeyword_0_2_0_10()); 
                    }
                    match(input,VerticalLineEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArithmeticAccess().getOpVerticalLineEqualsSignKeyword_0_2_0_10()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__OpAlternatives_0_2_0"


    // $ANTLR start "rule__EqualityAndInequality__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:3498:1: rule__EqualityAndInequality__OpAlternatives_1_1_0 : ( ( EqualsSignEqualsSign ) | ( ExclamationMarkEqualsSign ) );
    public final void rule__EqualityAndInequality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3502:1: ( ( EqualsSignEqualsSign ) | ( ExclamationMarkEqualsSign ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==EqualsSignEqualsSign) ) {
                alt45=1;
            }
            else if ( (LA45_0==ExclamationMarkEqualsSign) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalMyBashParser.g:3503:2: ( EqualsSignEqualsSign )
                    {
                    // InternalMyBashParser.g:3503:2: ( EqualsSignEqualsSign )
                    // InternalMyBashParser.g:3504:3: EqualsSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAndInequalityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAndInequalityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3509:2: ( ExclamationMarkEqualsSign )
                    {
                    // InternalMyBashParser.g:3509:2: ( ExclamationMarkEqualsSign )
                    // InternalMyBashParser.g:3510:3: ExclamationMarkEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAndInequalityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAndInequalityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:3519:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( LessThanSignEqualsSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( GreaterThanSign ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3523:1: ( ( LessThanSignEqualsSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( GreaterThanSign ) )
            int alt46=4;
            switch ( input.LA(1) ) {
            case LessThanSignEqualsSign:
                {
                alt46=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt46=2;
                }
                break;
            case LessThanSign:
                {
                alt46=3;
                }
                break;
            case GreaterThanSign:
                {
                alt46=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalMyBashParser.g:3524:2: ( LessThanSignEqualsSign )
                    {
                    // InternalMyBashParser.g:3524:2: ( LessThanSignEqualsSign )
                    // InternalMyBashParser.g:3525:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3530:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalMyBashParser.g:3530:2: ( GreaterThanSignEqualsSign )
                    // InternalMyBashParser.g:3531:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3536:2: ( LessThanSign )
                    {
                    // InternalMyBashParser.g:3536:2: ( LessThanSign )
                    // InternalMyBashParser.g:3537:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:3542:2: ( GreaterThanSign )
                    {
                    // InternalMyBashParser.g:3542:2: ( GreaterThanSign )
                    // InternalMyBashParser.g:3543:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__BitwiseShifts__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:3552:1: rule__BitwiseShifts__OpAlternatives_1_1_0 : ( ( LessThanSignLessThanSign ) | ( GreaterThanSignGreaterThanSign ) );
    public final void rule__BitwiseShifts__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3556:1: ( ( LessThanSignLessThanSign ) | ( GreaterThanSignGreaterThanSign ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==LessThanSignLessThanSign) ) {
                alt47=1;
            }
            else if ( (LA47_0==GreaterThanSignGreaterThanSign) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalMyBashParser.g:3557:2: ( LessThanSignLessThanSign )
                    {
                    // InternalMyBashParser.g:3557:2: ( LessThanSignLessThanSign )
                    // InternalMyBashParser.g:3558:3: LessThanSignLessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBitwiseShiftsAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); 
                    }
                    match(input,LessThanSignLessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBitwiseShiftsAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3563:2: ( GreaterThanSignGreaterThanSign )
                    {
                    // InternalMyBashParser.g:3563:2: ( GreaterThanSignGreaterThanSign )
                    // InternalMyBashParser.g:3564:3: GreaterThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBitwiseShiftsAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); 
                    }
                    match(input,GreaterThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBitwiseShiftsAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__OpAlternatives_1_1_0"


    // $ANTLR start "rule__AdditionSubtraction__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:3573:1: rule__AdditionSubtraction__OpAlternatives_1_1_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__AdditionSubtraction__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3577:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==PlusSign) ) {
                alt48=1;
            }
            else if ( (LA48_0==HyphenMinus) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalMyBashParser.g:3578:2: ( PlusSign )
                    {
                    // InternalMyBashParser.g:3578:2: ( PlusSign )
                    // InternalMyBashParser.g:3579:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditionSubtractionAccess().getOpPlusSignKeyword_1_1_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditionSubtractionAccess().getOpPlusSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3584:2: ( HyphenMinus )
                    {
                    // InternalMyBashParser.g:3584:2: ( HyphenMinus )
                    // InternalMyBashParser.g:3585:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditionSubtractionAccess().getOpHyphenMinusKeyword_1_1_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditionSubtractionAccess().getOpHyphenMinusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__OpAlternatives_1_1_0"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:3594:1: rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0 : ( ( Asterisk ) | ( Solidus ) | ( PercentSign ) );
    public final void rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3598:1: ( ( Asterisk ) | ( Solidus ) | ( PercentSign ) )
            int alt49=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt49=1;
                }
                break;
            case Solidus:
                {
                alt49=2;
                }
                break;
            case PercentSign:
                {
                alt49=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalMyBashParser.g:3599:2: ( Asterisk )
                    {
                    // InternalMyBashParser.g:3599:2: ( Asterisk )
                    // InternalMyBashParser.g:3600:3: Asterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpAsteriskKeyword_1_1_0_0()); 
                    }
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpAsteriskKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3605:2: ( Solidus )
                    {
                    // InternalMyBashParser.g:3605:2: ( Solidus )
                    // InternalMyBashParser.g:3606:3: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3611:2: ( PercentSign )
                    {
                    // InternalMyBashParser.g:3611:2: ( PercentSign )
                    // InternalMyBashParser.g:3612:3: PercentSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpPercentSignKeyword_1_1_0_2()); 
                    }
                    match(input,PercentSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpPercentSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__Alternatives"
    // InternalMyBashParser.g:3621:1: rule__LogicalAndBitwiseNegation__Alternatives : ( ( ( rule__LogicalAndBitwiseNegation__Group_0__0 ) ) | ( ruleUnaryMinusAndPlus ) );
    public final void rule__LogicalAndBitwiseNegation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3625:1: ( ( ( rule__LogicalAndBitwiseNegation__Group_0__0 ) ) | ( ruleUnaryMinusAndPlus ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==ExclamationMark||LA50_0==Tilde) ) {
                alt50=1;
            }
            else if ( (LA50_0==DollarSignLeftParenthesisLeftParenthesis||LA50_0==DollarSignLeftCurlyBracket||LA50_0==PlusSignPlusSign||LA50_0==HyphenMinusHyphenMinus||LA50_0==LessThanSignLeftParenthesis||LA50_0==GreaterThanSignLeftParenthesis||LA50_0==LeftParenthesis||LA50_0==PlusSign||LA50_0==HyphenMinus||LA50_0==RULE_I_NUMBER||LA50_0==RULE_NAME||(LA50_0>=RULE_VARIABLE && LA50_0<=RULE_A_PREFIX)||LA50_0==RULE_CS_START) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalMyBashParser.g:3626:2: ( ( rule__LogicalAndBitwiseNegation__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3626:2: ( ( rule__LogicalAndBitwiseNegation__Group_0__0 ) )
                    // InternalMyBashParser.g:3627:3: ( rule__LogicalAndBitwiseNegation__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalAndBitwiseNegationAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3628:3: ( rule__LogicalAndBitwiseNegation__Group_0__0 )
                    // InternalMyBashParser.g:3628:4: rule__LogicalAndBitwiseNegation__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LogicalAndBitwiseNegation__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalAndBitwiseNegationAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3632:2: ( ruleUnaryMinusAndPlus )
                    {
                    // InternalMyBashParser.g:3632:2: ( ruleUnaryMinusAndPlus )
                    // InternalMyBashParser.g:3633:3: ruleUnaryMinusAndPlus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalAndBitwiseNegationAccess().getUnaryMinusAndPlusParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnaryMinusAndPlus();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalAndBitwiseNegationAccess().getUnaryMinusAndPlusParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__Alternatives"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0"
    // InternalMyBashParser.g:3642:1: rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0 : ( ( ExclamationMark ) | ( Tilde ) );
    public final void rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3646:1: ( ( ExclamationMark ) | ( Tilde ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==ExclamationMark) ) {
                alt51=1;
            }
            else if ( (LA51_0==Tilde) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalMyBashParser.g:3647:2: ( ExclamationMark )
                    {
                    // InternalMyBashParser.g:3647:2: ( ExclamationMark )
                    // InternalMyBashParser.g:3648:3: ExclamationMark
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpExclamationMarkKeyword_0_1_0_0()); 
                    }
                    match(input,ExclamationMark,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpExclamationMarkKeyword_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3653:2: ( Tilde )
                    {
                    // InternalMyBashParser.g:3653:2: ( Tilde )
                    // InternalMyBashParser.g:3654:3: Tilde
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpTildeKeyword_0_1_0_1()); 
                    }
                    match(input,Tilde,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpTildeKeyword_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0"


    // $ANTLR start "rule__UnaryMinusAndPlus__Alternatives"
    // InternalMyBashParser.g:3663:1: rule__UnaryMinusAndPlus__Alternatives : ( ( ( rule__UnaryMinusAndPlus__Group_0__0 ) ) | ( rulePrimaryItem ) );
    public final void rule__UnaryMinusAndPlus__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3667:1: ( ( ( rule__UnaryMinusAndPlus__Group_0__0 ) ) | ( rulePrimaryItem ) )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==PlusSign||LA52_0==HyphenMinus) ) {
                alt52=1;
            }
            else if ( (LA52_0==DollarSignLeftParenthesisLeftParenthesis||LA52_0==DollarSignLeftCurlyBracket||LA52_0==PlusSignPlusSign||LA52_0==HyphenMinusHyphenMinus||LA52_0==LessThanSignLeftParenthesis||LA52_0==GreaterThanSignLeftParenthesis||LA52_0==LeftParenthesis||LA52_0==RULE_I_NUMBER||LA52_0==RULE_NAME||(LA52_0>=RULE_VARIABLE && LA52_0<=RULE_A_PREFIX)||LA52_0==RULE_CS_START) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalMyBashParser.g:3668:2: ( ( rule__UnaryMinusAndPlus__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3668:2: ( ( rule__UnaryMinusAndPlus__Group_0__0 ) )
                    // InternalMyBashParser.g:3669:3: ( rule__UnaryMinusAndPlus__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryMinusAndPlusAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3670:3: ( rule__UnaryMinusAndPlus__Group_0__0 )
                    // InternalMyBashParser.g:3670:4: rule__UnaryMinusAndPlus__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnaryMinusAndPlus__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryMinusAndPlusAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3674:2: ( rulePrimaryItem )
                    {
                    // InternalMyBashParser.g:3674:2: ( rulePrimaryItem )
                    // InternalMyBashParser.g:3675:3: rulePrimaryItem
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryMinusAndPlusAccess().getPrimaryItemParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePrimaryItem();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryMinusAndPlusAccess().getPrimaryItemParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__Alternatives"


    // $ANTLR start "rule__UnaryMinusAndPlus__OpAlternatives_0_1_0"
    // InternalMyBashParser.g:3684:1: rule__UnaryMinusAndPlus__OpAlternatives_0_1_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__UnaryMinusAndPlus__OpAlternatives_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3688:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==PlusSign) ) {
                alt53=1;
            }
            else if ( (LA53_0==HyphenMinus) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalMyBashParser.g:3689:2: ( PlusSign )
                    {
                    // InternalMyBashParser.g:3689:2: ( PlusSign )
                    // InternalMyBashParser.g:3690:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryMinusAndPlusAccess().getOpPlusSignKeyword_0_1_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryMinusAndPlusAccess().getOpPlusSignKeyword_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3695:2: ( HyphenMinus )
                    {
                    // InternalMyBashParser.g:3695:2: ( HyphenMinus )
                    // InternalMyBashParser.g:3696:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryMinusAndPlusAccess().getOpHyphenMinusKeyword_0_1_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryMinusAndPlusAccess().getOpHyphenMinusKeyword_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__OpAlternatives_0_1_0"


    // $ANTLR start "rule__PreDecrement__Alternatives"
    // InternalMyBashParser.g:3705:1: rule__PreDecrement__Alternatives : ( ( ( rule__PreDecrement__Group_0__0 ) ) | ( rulePostDecrement ) );
    public final void rule__PreDecrement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3709:1: ( ( ( rule__PreDecrement__Group_0__0 ) ) | ( rulePostDecrement ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==PlusSignPlusSign||LA54_0==HyphenMinusHyphenMinus) ) {
                alt54=1;
            }
            else if ( (LA54_0==RULE_NAME) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalMyBashParser.g:3710:2: ( ( rule__PreDecrement__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3710:2: ( ( rule__PreDecrement__Group_0__0 ) )
                    // InternalMyBashParser.g:3711:3: ( rule__PreDecrement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreDecrementAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3712:3: ( rule__PreDecrement__Group_0__0 )
                    // InternalMyBashParser.g:3712:4: rule__PreDecrement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PreDecrement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreDecrementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3716:2: ( rulePostDecrement )
                    {
                    // InternalMyBashParser.g:3716:2: ( rulePostDecrement )
                    // InternalMyBashParser.g:3717:3: rulePostDecrement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreDecrementAccess().getPostDecrementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePostDecrement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreDecrementAccess().getPostDecrementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__Alternatives"


    // $ANTLR start "rule__PreDecrement__OpAlternatives_0_1_0"
    // InternalMyBashParser.g:3726:1: rule__PreDecrement__OpAlternatives_0_1_0 : ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) );
    public final void rule__PreDecrement__OpAlternatives_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3730:1: ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==PlusSignPlusSign) ) {
                alt55=1;
            }
            else if ( (LA55_0==HyphenMinusHyphenMinus) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalMyBashParser.g:3731:2: ( PlusSignPlusSign )
                    {
                    // InternalMyBashParser.g:3731:2: ( PlusSignPlusSign )
                    // InternalMyBashParser.g:3732:3: PlusSignPlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreDecrementAccess().getOpPlusSignPlusSignKeyword_0_1_0_0()); 
                    }
                    match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreDecrementAccess().getOpPlusSignPlusSignKeyword_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3737:2: ( HyphenMinusHyphenMinus )
                    {
                    // InternalMyBashParser.g:3737:2: ( HyphenMinusHyphenMinus )
                    // InternalMyBashParser.g:3738:3: HyphenMinusHyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreDecrementAccess().getOpHyphenMinusHyphenMinusKeyword_0_1_0_1()); 
                    }
                    match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreDecrementAccess().getOpHyphenMinusHyphenMinusKeyword_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__OpAlternatives_0_1_0"


    // $ANTLR start "rule__PostDecrement__OpAlternatives_1_1_0"
    // InternalMyBashParser.g:3747:1: rule__PostDecrement__OpAlternatives_1_1_0 : ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) );
    public final void rule__PostDecrement__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3751:1: ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==PlusSignPlusSign) ) {
                alt56=1;
            }
            else if ( (LA56_0==HyphenMinusHyphenMinus) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalMyBashParser.g:3752:2: ( PlusSignPlusSign )
                    {
                    // InternalMyBashParser.g:3752:2: ( PlusSignPlusSign )
                    // InternalMyBashParser.g:3753:3: PlusSignPlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostDecrementAccess().getOpPlusSignPlusSignKeyword_1_1_0_0()); 
                    }
                    match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostDecrementAccess().getOpPlusSignPlusSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3758:2: ( HyphenMinusHyphenMinus )
                    {
                    // InternalMyBashParser.g:3758:2: ( HyphenMinusHyphenMinus )
                    // InternalMyBashParser.g:3759:3: HyphenMinusHyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostDecrementAccess().getOpHyphenMinusHyphenMinusKeyword_1_1_0_1()); 
                    }
                    match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostDecrementAccess().getOpHyphenMinusHyphenMinusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__OpAlternatives_1_1_0"


    // $ANTLR start "rule__PrimaryItem__Alternatives"
    // InternalMyBashParser.g:3768:1: rule__PrimaryItem__Alternatives : ( ( ( rule__PrimaryItem__Group_0__0 ) ) | ( ( rule__PrimaryItem__Group_1__0 ) ) | ( ( rule__PrimaryItem__Group_2__0 ) ) | ( rulePreDecrement ) );
    public final void rule__PrimaryItem__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3772:1: ( ( ( rule__PrimaryItem__Group_0__0 ) ) | ( ( rule__PrimaryItem__Group_1__0 ) ) | ( ( rule__PrimaryItem__Group_2__0 ) ) | ( rulePreDecrement ) )
            int alt57=4;
            switch ( input.LA(1) ) {
            case RULE_A_PREFIX:
                {
                int LA57_1 = input.LA(2);

                if ( (LA57_1==DollarSignLeftParenthesisLeftParenthesis||LA57_1==DollarSignLeftCurlyBracket||LA57_1==LessThanSignLeftParenthesis||LA57_1==GreaterThanSignLeftParenthesis||LA57_1==RULE_VARIABLE||LA57_1==RULE_CS_START) ) {
                    alt57=3;
                }
                else if ( (LA57_1==RULE_I_NUMBER) ) {
                    alt57=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_I_NUMBER:
                {
                alt57=1;
                }
                break;
            case LeftParenthesis:
                {
                alt57=2;
                }
                break;
            case DollarSignLeftParenthesisLeftParenthesis:
            case DollarSignLeftCurlyBracket:
            case LessThanSignLeftParenthesis:
            case GreaterThanSignLeftParenthesis:
            case RULE_VARIABLE:
            case RULE_CS_START:
                {
                alt57=3;
                }
                break;
            case PlusSignPlusSign:
            case HyphenMinusHyphenMinus:
            case RULE_NAME:
                {
                alt57=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalMyBashParser.g:3773:2: ( ( rule__PrimaryItem__Group_0__0 ) )
                    {
                    // InternalMyBashParser.g:3773:2: ( ( rule__PrimaryItem__Group_0__0 ) )
                    // InternalMyBashParser.g:3774:3: ( rule__PrimaryItem__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryItemAccess().getGroup_0()); 
                    }
                    // InternalMyBashParser.g:3775:3: ( rule__PrimaryItem__Group_0__0 )
                    // InternalMyBashParser.g:3775:4: rule__PrimaryItem__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryItem__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryItemAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3779:2: ( ( rule__PrimaryItem__Group_1__0 ) )
                    {
                    // InternalMyBashParser.g:3779:2: ( ( rule__PrimaryItem__Group_1__0 ) )
                    // InternalMyBashParser.g:3780:3: ( rule__PrimaryItem__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryItemAccess().getGroup_1()); 
                    }
                    // InternalMyBashParser.g:3781:3: ( rule__PrimaryItem__Group_1__0 )
                    // InternalMyBashParser.g:3781:4: rule__PrimaryItem__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryItem__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryItemAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3785:2: ( ( rule__PrimaryItem__Group_2__0 ) )
                    {
                    // InternalMyBashParser.g:3785:2: ( ( rule__PrimaryItem__Group_2__0 ) )
                    // InternalMyBashParser.g:3786:3: ( rule__PrimaryItem__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryItemAccess().getGroup_2()); 
                    }
                    // InternalMyBashParser.g:3787:3: ( rule__PrimaryItem__Group_2__0 )
                    // InternalMyBashParser.g:3787:4: rule__PrimaryItem__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryItem__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryItemAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:3791:2: ( rulePreDecrement )
                    {
                    // InternalMyBashParser.g:3791:2: ( rulePreDecrement )
                    // InternalMyBashParser.g:3792:3: rulePreDecrement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryItemAccess().getPreDecrementParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePreDecrement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryItemAccess().getPreDecrementParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Alternatives"


    // $ANTLR start "rule__ListTerminator__Alternatives"
    // InternalMyBashParser.g:3801:1: rule__ListTerminator__Alternatives : ( ( ruleNewLine ) | ( Semicolon ) );
    public final void rule__ListTerminator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3805:1: ( ( ruleNewLine ) | ( Semicolon ) )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_NEW_LINE||LA58_0==RULE_HERE_DOC_START) ) {
                alt58=1;
            }
            else if ( (LA58_0==Semicolon) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalMyBashParser.g:3806:2: ( ruleNewLine )
                    {
                    // InternalMyBashParser.g:3806:2: ( ruleNewLine )
                    // InternalMyBashParser.g:3807:3: ruleNewLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListTerminatorAccess().getNewLineParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNewLine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListTerminatorAccess().getNewLineParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3812:2: ( Semicolon )
                    {
                    // InternalMyBashParser.g:3812:2: ( Semicolon )
                    // InternalMyBashParser.g:3813:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListTerminatorAccess().getSemicolonKeyword_1()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListTerminatorAccess().getSemicolonKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTerminator__Alternatives"


    // $ANTLR start "rule__HereDoc__Alternatives_1"
    // InternalMyBashParser.g:3822:1: rule__HereDoc__Alternatives_1 : ( ( RULE_HERE_DOC_PART ) | ( RULE_NEW_LINE ) );
    public final void rule__HereDoc__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3826:1: ( ( RULE_HERE_DOC_PART ) | ( RULE_NEW_LINE ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_HERE_DOC_PART) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_NEW_LINE) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalMyBashParser.g:3827:2: ( RULE_HERE_DOC_PART )
                    {
                    // InternalMyBashParser.g:3827:2: ( RULE_HERE_DOC_PART )
                    // InternalMyBashParser.g:3828:3: RULE_HERE_DOC_PART
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHereDocAccess().getHERE_DOC_PARTTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_HERE_DOC_PART,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHereDocAccess().getHERE_DOC_PARTTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3833:2: ( RULE_NEW_LINE )
                    {
                    // InternalMyBashParser.g:3833:2: ( RULE_NEW_LINE )
                    // InternalMyBashParser.g:3834:3: RULE_NEW_LINE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHereDocAccess().getNEW_LINETerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_NEW_LINE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHereDocAccess().getNEW_LINETerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HereDoc__Alternatives_1"


    // $ANTLR start "rule__FollowWordOp__Alternatives"
    // InternalMyBashParser.g:3843:1: rule__FollowWordOp__Alternatives : ( ( ( PercentSignPercentSign ) ) | ( ( PercentSign ) ) | ( ( NumberSignNumberSign ) ) | ( ( NumberSign ) ) | ( ( CommaComma ) ) | ( ( Comma ) ) | ( ( CircumflexAccentCircumflexAccent ) ) | ( ( CircumflexAccent ) ) | ( ( ColonPlusSign ) ) | ( ( PlusSign ) ) | ( ( ColonHyphenMinus ) ) | ( ( HyphenMinus ) ) | ( ( ColonEqualsSign ) ) | ( ( EqualsSign ) ) | ( ( ColonQuestionMark ) ) | ( ( QuestionMark ) ) );
    public final void rule__FollowWordOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3847:1: ( ( ( PercentSignPercentSign ) ) | ( ( PercentSign ) ) | ( ( NumberSignNumberSign ) ) | ( ( NumberSign ) ) | ( ( CommaComma ) ) | ( ( Comma ) ) | ( ( CircumflexAccentCircumflexAccent ) ) | ( ( CircumflexAccent ) ) | ( ( ColonPlusSign ) ) | ( ( PlusSign ) ) | ( ( ColonHyphenMinus ) ) | ( ( HyphenMinus ) ) | ( ( ColonEqualsSign ) ) | ( ( EqualsSign ) ) | ( ( ColonQuestionMark ) ) | ( ( QuestionMark ) ) )
            int alt60=16;
            switch ( input.LA(1) ) {
            case PercentSignPercentSign:
                {
                alt60=1;
                }
                break;
            case PercentSign:
                {
                alt60=2;
                }
                break;
            case NumberSignNumberSign:
                {
                alt60=3;
                }
                break;
            case NumberSign:
                {
                alt60=4;
                }
                break;
            case CommaComma:
                {
                alt60=5;
                }
                break;
            case Comma:
                {
                alt60=6;
                }
                break;
            case CircumflexAccentCircumflexAccent:
                {
                alt60=7;
                }
                break;
            case CircumflexAccent:
                {
                alt60=8;
                }
                break;
            case ColonPlusSign:
                {
                alt60=9;
                }
                break;
            case PlusSign:
                {
                alt60=10;
                }
                break;
            case ColonHyphenMinus:
                {
                alt60=11;
                }
                break;
            case HyphenMinus:
                {
                alt60=12;
                }
                break;
            case ColonEqualsSign:
                {
                alt60=13;
                }
                break;
            case EqualsSign:
                {
                alt60=14;
                }
                break;
            case ColonQuestionMark:
                {
                alt60=15;
                }
                break;
            case QuestionMark:
                {
                alt60=16;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }

            switch (alt60) {
                case 1 :
                    // InternalMyBashParser.g:3848:2: ( ( PercentSignPercentSign ) )
                    {
                    // InternalMyBashParser.g:3848:2: ( ( PercentSignPercentSign ) )
                    // InternalMyBashParser.g:3849:3: ( PercentSignPercentSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getGreedyRemoveSuffixEnumLiteralDeclaration_0()); 
                    }
                    // InternalMyBashParser.g:3850:3: ( PercentSignPercentSign )
                    // InternalMyBashParser.g:3850:4: PercentSignPercentSign
                    {
                    match(input,PercentSignPercentSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getGreedyRemoveSuffixEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyBashParser.g:3854:2: ( ( PercentSign ) )
                    {
                    // InternalMyBashParser.g:3854:2: ( ( PercentSign ) )
                    // InternalMyBashParser.g:3855:3: ( PercentSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getRemoveSuffixEnumLiteralDeclaration_1()); 
                    }
                    // InternalMyBashParser.g:3856:3: ( PercentSign )
                    // InternalMyBashParser.g:3856:4: PercentSign
                    {
                    match(input,PercentSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getRemoveSuffixEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyBashParser.g:3860:2: ( ( NumberSignNumberSign ) )
                    {
                    // InternalMyBashParser.g:3860:2: ( ( NumberSignNumberSign ) )
                    // InternalMyBashParser.g:3861:3: ( NumberSignNumberSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getGreeyRemovePrefixEnumLiteralDeclaration_2()); 
                    }
                    // InternalMyBashParser.g:3862:3: ( NumberSignNumberSign )
                    // InternalMyBashParser.g:3862:4: NumberSignNumberSign
                    {
                    match(input,NumberSignNumberSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getGreeyRemovePrefixEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyBashParser.g:3866:2: ( ( NumberSign ) )
                    {
                    // InternalMyBashParser.g:3866:2: ( ( NumberSign ) )
                    // InternalMyBashParser.g:3867:3: ( NumberSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getRemovePrefixEnumLiteralDeclaration_3()); 
                    }
                    // InternalMyBashParser.g:3868:3: ( NumberSign )
                    // InternalMyBashParser.g:3868:4: NumberSign
                    {
                    match(input,NumberSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getRemovePrefixEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyBashParser.g:3872:2: ( ( CommaComma ) )
                    {
                    // InternalMyBashParser.g:3872:2: ( ( CommaComma ) )
                    // InternalMyBashParser.g:3873:3: ( CommaComma )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getGreedyLowercaseEnumLiteralDeclaration_4()); 
                    }
                    // InternalMyBashParser.g:3874:3: ( CommaComma )
                    // InternalMyBashParser.g:3874:4: CommaComma
                    {
                    match(input,CommaComma,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getGreedyLowercaseEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMyBashParser.g:3878:2: ( ( Comma ) )
                    {
                    // InternalMyBashParser.g:3878:2: ( ( Comma ) )
                    // InternalMyBashParser.g:3879:3: ( Comma )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getLowercaseEnumLiteralDeclaration_5()); 
                    }
                    // InternalMyBashParser.g:3880:3: ( Comma )
                    // InternalMyBashParser.g:3880:4: Comma
                    {
                    match(input,Comma,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getLowercaseEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMyBashParser.g:3884:2: ( ( CircumflexAccentCircumflexAccent ) )
                    {
                    // InternalMyBashParser.g:3884:2: ( ( CircumflexAccentCircumflexAccent ) )
                    // InternalMyBashParser.g:3885:3: ( CircumflexAccentCircumflexAccent )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getGreedyUppercaseEnumLiteralDeclaration_6()); 
                    }
                    // InternalMyBashParser.g:3886:3: ( CircumflexAccentCircumflexAccent )
                    // InternalMyBashParser.g:3886:4: CircumflexAccentCircumflexAccent
                    {
                    match(input,CircumflexAccentCircumflexAccent,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getGreedyUppercaseEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalMyBashParser.g:3890:2: ( ( CircumflexAccent ) )
                    {
                    // InternalMyBashParser.g:3890:2: ( ( CircumflexAccent ) )
                    // InternalMyBashParser.g:3891:3: ( CircumflexAccent )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getUppercaseEnumLiteralDeclaration_7()); 
                    }
                    // InternalMyBashParser.g:3892:3: ( CircumflexAccent )
                    // InternalMyBashParser.g:3892:4: CircumflexAccent
                    {
                    match(input,CircumflexAccent,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getUppercaseEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalMyBashParser.g:3896:2: ( ( ColonPlusSign ) )
                    {
                    // InternalMyBashParser.g:3896:2: ( ( ColonPlusSign ) )
                    // InternalMyBashParser.g:3897:3: ( ColonPlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getUseAlternateEnumLiteralDeclaration_8()); 
                    }
                    // InternalMyBashParser.g:3898:3: ( ColonPlusSign )
                    // InternalMyBashParser.g:3898:4: ColonPlusSign
                    {
                    match(input,ColonPlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getUseAlternateEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalMyBashParser.g:3902:2: ( ( PlusSign ) )
                    {
                    // InternalMyBashParser.g:3902:2: ( ( PlusSign ) )
                    // InternalMyBashParser.g:3903:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getUseAlternateEnumLiteralDeclaration_9()); 
                    }
                    // InternalMyBashParser.g:3904:3: ( PlusSign )
                    // InternalMyBashParser.g:3904:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getUseAlternateEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalMyBashParser.g:3908:2: ( ( ColonHyphenMinus ) )
                    {
                    // InternalMyBashParser.g:3908:2: ( ( ColonHyphenMinus ) )
                    // InternalMyBashParser.g:3909:3: ( ColonHyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getUseDefaultEnumLiteralDeclaration_10()); 
                    }
                    // InternalMyBashParser.g:3910:3: ( ColonHyphenMinus )
                    // InternalMyBashParser.g:3910:4: ColonHyphenMinus
                    {
                    match(input,ColonHyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getUseDefaultEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalMyBashParser.g:3914:2: ( ( HyphenMinus ) )
                    {
                    // InternalMyBashParser.g:3914:2: ( ( HyphenMinus ) )
                    // InternalMyBashParser.g:3915:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getUseDefaultEnumLiteralDeclaration_11()); 
                    }
                    // InternalMyBashParser.g:3916:3: ( HyphenMinus )
                    // InternalMyBashParser.g:3916:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getUseDefaultEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalMyBashParser.g:3920:2: ( ( ColonEqualsSign ) )
                    {
                    // InternalMyBashParser.g:3920:2: ( ( ColonEqualsSign ) )
                    // InternalMyBashParser.g:3921:3: ( ColonEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getAssignDefaultEnumLiteralDeclaration_12()); 
                    }
                    // InternalMyBashParser.g:3922:3: ( ColonEqualsSign )
                    // InternalMyBashParser.g:3922:4: ColonEqualsSign
                    {
                    match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getAssignDefaultEnumLiteralDeclaration_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalMyBashParser.g:3926:2: ( ( EqualsSign ) )
                    {
                    // InternalMyBashParser.g:3926:2: ( ( EqualsSign ) )
                    // InternalMyBashParser.g:3927:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getAssignDefaultEnumLiteralDeclaration_13()); 
                    }
                    // InternalMyBashParser.g:3928:3: ( EqualsSign )
                    // InternalMyBashParser.g:3928:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getAssignDefaultEnumLiteralDeclaration_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalMyBashParser.g:3932:2: ( ( ColonQuestionMark ) )
                    {
                    // InternalMyBashParser.g:3932:2: ( ( ColonQuestionMark ) )
                    // InternalMyBashParser.g:3933:3: ( ColonQuestionMark )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getErrorDefaultEnumLiteralDeclaration_14()); 
                    }
                    // InternalMyBashParser.g:3934:3: ( ColonQuestionMark )
                    // InternalMyBashParser.g:3934:4: ColonQuestionMark
                    {
                    match(input,ColonQuestionMark,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getErrorDefaultEnumLiteralDeclaration_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalMyBashParser.g:3938:2: ( ( QuestionMark ) )
                    {
                    // InternalMyBashParser.g:3938:2: ( ( QuestionMark ) )
                    // InternalMyBashParser.g:3939:3: ( QuestionMark )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFollowWordOpAccess().getErrorDefaultEnumLiteralDeclaration_15()); 
                    }
                    // InternalMyBashParser.g:3940:3: ( QuestionMark )
                    // InternalMyBashParser.g:3940:4: QuestionMark
                    {
                    match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFollowWordOpAccess().getErrorDefaultEnumLiteralDeclaration_15()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FollowWordOp__Alternatives"


    // $ANTLR start "rule__Bash__Group_0__0"
    // InternalMyBashParser.g:3948:1: rule__Bash__Group_0__0 : rule__Bash__Group_0__0__Impl rule__Bash__Group_0__1 ;
    public final void rule__Bash__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3952:1: ( rule__Bash__Group_0__0__Impl rule__Bash__Group_0__1 )
            // InternalMyBashParser.g:3953:2: rule__Bash__Group_0__0__Impl rule__Bash__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Bash__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0__0"


    // $ANTLR start "rule__Bash__Group_0__0__Impl"
    // InternalMyBashParser.g:3960:1: rule__Bash__Group_0__0__Impl : ( () ) ;
    public final void rule__Bash__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3964:1: ( ( () ) )
            // InternalMyBashParser.g:3965:1: ( () )
            {
            // InternalMyBashParser.g:3965:1: ( () )
            // InternalMyBashParser.g:3966:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getBashAction_0_0()); 
            }
            // InternalMyBashParser.g:3967:2: ()
            // InternalMyBashParser.g:3967:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getBashAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0__0__Impl"


    // $ANTLR start "rule__Bash__Group_0__1"
    // InternalMyBashParser.g:3975:1: rule__Bash__Group_0__1 : rule__Bash__Group_0__1__Impl rule__Bash__Group_0__2 ;
    public final void rule__Bash__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3979:1: ( rule__Bash__Group_0__1__Impl rule__Bash__Group_0__2 )
            // InternalMyBashParser.g:3980:2: rule__Bash__Group_0__1__Impl rule__Bash__Group_0__2
            {
            pushFollow(FOLLOW_6);
            rule__Bash__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0__1"


    // $ANTLR start "rule__Bash__Group_0__1__Impl"
    // InternalMyBashParser.g:3987:1: rule__Bash__Group_0__1__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__Bash__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:3991:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:3992:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:3992:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:3993:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getMaybeNewLineParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getMaybeNewLineParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0__1__Impl"


    // $ANTLR start "rule__Bash__Group_0__2"
    // InternalMyBashParser.g:4002:1: rule__Bash__Group_0__2 : rule__Bash__Group_0__2__Impl ;
    public final void rule__Bash__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4006:1: ( rule__Bash__Group_0__2__Impl )
            // InternalMyBashParser.g:4007:2: rule__Bash__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0__2"


    // $ANTLR start "rule__Bash__Group_0__2__Impl"
    // InternalMyBashParser.g:4013:1: rule__Bash__Group_0__2__Impl : ( ( rule__Bash__Group_0_2__0 )? ) ;
    public final void rule__Bash__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4017:1: ( ( ( rule__Bash__Group_0_2__0 )? ) )
            // InternalMyBashParser.g:4018:1: ( ( rule__Bash__Group_0_2__0 )? )
            {
            // InternalMyBashParser.g:4018:1: ( ( rule__Bash__Group_0_2__0 )? )
            // InternalMyBashParser.g:4019:2: ( rule__Bash__Group_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getGroup_0_2()); 
            }
            // InternalMyBashParser.g:4020:2: ( rule__Bash__Group_0_2__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=Function && LA61_0<=Case)||(LA61_0>=DollarSignLeftParenthesisLeftParenthesis && LA61_0<=AmpersandGreaterThanSignGreaterThanSign)||LA61_0==For||LA61_0==DollarSignLeftCurlyBracket||(LA61_0>=AmpersandGreaterThanSign && LA61_0<=LeftParenthesisLeftParenthesis)||(LA61_0>=LessThanSignAmpersand && LA61_0<=LessThanSignLessThanSign)||(LA61_0>=LessThanSignGreaterThanSign && LA61_0<=LessThanSignVerticalLine)||(LA61_0>=GreaterThanSignAmpersand && LA61_0<=GreaterThanSignLeftParenthesis)||(LA61_0>=GreaterThanSignGreaterThanSign && LA61_0<=LeftSquareBracketLeftSquareBracket)||LA61_0==If||(LA61_0>=ExclamationMark && LA61_0<=QuotationMark)||(LA61_0>=Apostrophe && LA61_0<=LeftParenthesis)||LA61_0==LessThanSign||LA61_0==GreaterThanSign||LA61_0==LeftCurlyBracket||LA61_0==RULE_I_NUMBER||(LA61_0>=RULE_NAME && LA61_0<=RULE_WORD_PART)||LA61_0==RULE_VARIABLE||LA61_0==RULE_CS_START) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalMyBashParser.g:4020:3: rule__Bash__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Bash__Group_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getGroup_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0__2__Impl"


    // $ANTLR start "rule__Bash__Group_0_2__0"
    // InternalMyBashParser.g:4029:1: rule__Bash__Group_0_2__0 : rule__Bash__Group_0_2__0__Impl rule__Bash__Group_0_2__1 ;
    public final void rule__Bash__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4033:1: ( rule__Bash__Group_0_2__0__Impl rule__Bash__Group_0_2__1 )
            // InternalMyBashParser.g:4034:2: rule__Bash__Group_0_2__0__Impl rule__Bash__Group_0_2__1
            {
            pushFollow(FOLLOW_5);
            rule__Bash__Group_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2__0"


    // $ANTLR start "rule__Bash__Group_0_2__0__Impl"
    // InternalMyBashParser.g:4041:1: rule__Bash__Group_0_2__0__Impl : ( ( rule__Bash__CommandsAssignment_0_2_0 ) ) ;
    public final void rule__Bash__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4045:1: ( ( ( rule__Bash__CommandsAssignment_0_2_0 ) ) )
            // InternalMyBashParser.g:4046:1: ( ( rule__Bash__CommandsAssignment_0_2_0 ) )
            {
            // InternalMyBashParser.g:4046:1: ( ( rule__Bash__CommandsAssignment_0_2_0 ) )
            // InternalMyBashParser.g:4047:2: ( rule__Bash__CommandsAssignment_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getCommandsAssignment_0_2_0()); 
            }
            // InternalMyBashParser.g:4048:2: ( rule__Bash__CommandsAssignment_0_2_0 )
            // InternalMyBashParser.g:4048:3: rule__Bash__CommandsAssignment_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__Bash__CommandsAssignment_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getCommandsAssignment_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2__0__Impl"


    // $ANTLR start "rule__Bash__Group_0_2__1"
    // InternalMyBashParser.g:4056:1: rule__Bash__Group_0_2__1 : rule__Bash__Group_0_2__1__Impl rule__Bash__Group_0_2__2 ;
    public final void rule__Bash__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4060:1: ( rule__Bash__Group_0_2__1__Impl rule__Bash__Group_0_2__2 )
            // InternalMyBashParser.g:4061:2: rule__Bash__Group_0_2__1__Impl rule__Bash__Group_0_2__2
            {
            pushFollow(FOLLOW_5);
            rule__Bash__Group_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2__1"


    // $ANTLR start "rule__Bash__Group_0_2__1__Impl"
    // InternalMyBashParser.g:4068:1: rule__Bash__Group_0_2__1__Impl : ( ( rule__Bash__Group_0_2_1__0 )* ) ;
    public final void rule__Bash__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4072:1: ( ( ( rule__Bash__Group_0_2_1__0 )* ) )
            // InternalMyBashParser.g:4073:1: ( ( rule__Bash__Group_0_2_1__0 )* )
            {
            // InternalMyBashParser.g:4073:1: ( ( rule__Bash__Group_0_2_1__0 )* )
            // InternalMyBashParser.g:4074:2: ( rule__Bash__Group_0_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getGroup_0_2_1()); 
            }
            // InternalMyBashParser.g:4075:2: ( rule__Bash__Group_0_2_1__0 )*
            loop62:
            do {
                int alt62=2;
                alt62 = dfa62.predict(input);
                switch (alt62) {
            	case 1 :
            	    // InternalMyBashParser.g:4075:3: rule__Bash__Group_0_2_1__0
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Bash__Group_0_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getGroup_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2__1__Impl"


    // $ANTLR start "rule__Bash__Group_0_2__2"
    // InternalMyBashParser.g:4083:1: rule__Bash__Group_0_2__2 : rule__Bash__Group_0_2__2__Impl ;
    public final void rule__Bash__Group_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4087:1: ( rule__Bash__Group_0_2__2__Impl )
            // InternalMyBashParser.g:4088:2: rule__Bash__Group_0_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2__2"


    // $ANTLR start "rule__Bash__Group_0_2__2__Impl"
    // InternalMyBashParser.g:4094:1: rule__Bash__Group_0_2__2__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__Bash__Group_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4098:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:4099:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:4099:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:4100:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getMaybeNewLineParserRuleCall_0_2_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getMaybeNewLineParserRuleCall_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2__2__Impl"


    // $ANTLR start "rule__Bash__Group_0_2_1__0"
    // InternalMyBashParser.g:4110:1: rule__Bash__Group_0_2_1__0 : rule__Bash__Group_0_2_1__0__Impl rule__Bash__Group_0_2_1__1 ;
    public final void rule__Bash__Group_0_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4114:1: ( rule__Bash__Group_0_2_1__0__Impl rule__Bash__Group_0_2_1__1 )
            // InternalMyBashParser.g:4115:2: rule__Bash__Group_0_2_1__0__Impl rule__Bash__Group_0_2_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Bash__Group_0_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2_1__0"


    // $ANTLR start "rule__Bash__Group_0_2_1__0__Impl"
    // InternalMyBashParser.g:4122:1: rule__Bash__Group_0_2_1__0__Impl : ( ruleNewLine ) ;
    public final void rule__Bash__Group_0_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4126:1: ( ( ruleNewLine ) )
            // InternalMyBashParser.g:4127:1: ( ruleNewLine )
            {
            // InternalMyBashParser.g:4127:1: ( ruleNewLine )
            // InternalMyBashParser.g:4128:2: ruleNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getNewLineParserRuleCall_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getNewLineParserRuleCall_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2_1__0__Impl"


    // $ANTLR start "rule__Bash__Group_0_2_1__1"
    // InternalMyBashParser.g:4137:1: rule__Bash__Group_0_2_1__1 : rule__Bash__Group_0_2_1__1__Impl ;
    public final void rule__Bash__Group_0_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4141:1: ( rule__Bash__Group_0_2_1__1__Impl )
            // InternalMyBashParser.g:4142:2: rule__Bash__Group_0_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Bash__Group_0_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2_1__1"


    // $ANTLR start "rule__Bash__Group_0_2_1__1__Impl"
    // InternalMyBashParser.g:4148:1: rule__Bash__Group_0_2_1__1__Impl : ( ( rule__Bash__CommandsAssignment_0_2_1_1 ) ) ;
    public final void rule__Bash__Group_0_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4152:1: ( ( ( rule__Bash__CommandsAssignment_0_2_1_1 ) ) )
            // InternalMyBashParser.g:4153:1: ( ( rule__Bash__CommandsAssignment_0_2_1_1 ) )
            {
            // InternalMyBashParser.g:4153:1: ( ( rule__Bash__CommandsAssignment_0_2_1_1 ) )
            // InternalMyBashParser.g:4154:2: ( rule__Bash__CommandsAssignment_0_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getCommandsAssignment_0_2_1_1()); 
            }
            // InternalMyBashParser.g:4155:2: ( rule__Bash__CommandsAssignment_0_2_1_1 )
            // InternalMyBashParser.g:4155:3: rule__Bash__CommandsAssignment_0_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Bash__CommandsAssignment_0_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getCommandsAssignment_0_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_0_2_1__1__Impl"


    // $ANTLR start "rule__Bash__Group_1__0"
    // InternalMyBashParser.g:4164:1: rule__Bash__Group_1__0 : rule__Bash__Group_1__0__Impl rule__Bash__Group_1__1 ;
    public final void rule__Bash__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4168:1: ( rule__Bash__Group_1__0__Impl rule__Bash__Group_1__1 )
            // InternalMyBashParser.g:4169:2: rule__Bash__Group_1__0__Impl rule__Bash__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Bash__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bash__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_1__0"


    // $ANTLR start "rule__Bash__Group_1__0__Impl"
    // InternalMyBashParser.g:4176:1: rule__Bash__Group_1__0__Impl : ( RULE_WS ) ;
    public final void rule__Bash__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4180:1: ( ( RULE_WS ) )
            // InternalMyBashParser.g:4181:1: ( RULE_WS )
            {
            // InternalMyBashParser.g:4181:1: ( RULE_WS )
            // InternalMyBashParser.g:4182:2: RULE_WS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getWSTerminalRuleCall_1_0()); 
            }
            match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getWSTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_1__0__Impl"


    // $ANTLR start "rule__Bash__Group_1__1"
    // InternalMyBashParser.g:4191:1: rule__Bash__Group_1__1 : rule__Bash__Group_1__1__Impl rule__Bash__Group_1__2 ;
    public final void rule__Bash__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4195:1: ( rule__Bash__Group_1__1__Impl rule__Bash__Group_1__2 )
            // InternalMyBashParser.g:4196:2: rule__Bash__Group_1__1__Impl rule__Bash__Group_1__2
            {
            pushFollow(FOLLOW_9);
            rule__Bash__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bash__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_1__1"


    // $ANTLR start "rule__Bash__Group_1__1__Impl"
    // InternalMyBashParser.g:4203:1: rule__Bash__Group_1__1__Impl : ( ( rule__Bash__Alternatives_1_1 ) ) ;
    public final void rule__Bash__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4207:1: ( ( ( rule__Bash__Alternatives_1_1 ) ) )
            // InternalMyBashParser.g:4208:1: ( ( rule__Bash__Alternatives_1_1 ) )
            {
            // InternalMyBashParser.g:4208:1: ( ( rule__Bash__Alternatives_1_1 ) )
            // InternalMyBashParser.g:4209:2: ( rule__Bash__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getAlternatives_1_1()); 
            }
            // InternalMyBashParser.g:4210:2: ( rule__Bash__Alternatives_1_1 )
            // InternalMyBashParser.g:4210:3: rule__Bash__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Bash__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_1__1__Impl"


    // $ANTLR start "rule__Bash__Group_1__2"
    // InternalMyBashParser.g:4218:1: rule__Bash__Group_1__2 : rule__Bash__Group_1__2__Impl ;
    public final void rule__Bash__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4222:1: ( rule__Bash__Group_1__2__Impl )
            // InternalMyBashParser.g:4223:2: rule__Bash__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Bash__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_1__2"


    // $ANTLR start "rule__Bash__Group_1__2__Impl"
    // InternalMyBashParser.g:4229:1: rule__Bash__Group_1__2__Impl : ( RULE_WS ) ;
    public final void rule__Bash__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4233:1: ( ( RULE_WS ) )
            // InternalMyBashParser.g:4234:1: ( RULE_WS )
            {
            // InternalMyBashParser.g:4234:1: ( RULE_WS )
            // InternalMyBashParser.g:4235:2: RULE_WS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getWSTerminalRuleCall_1_2()); 
            }
            match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getWSTerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__Group_1__2__Impl"


    // $ANTLR start "rule__CompoundList__Group__0"
    // InternalMyBashParser.g:4245:1: rule__CompoundList__Group__0 : rule__CompoundList__Group__0__Impl rule__CompoundList__Group__1 ;
    public final void rule__CompoundList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4249:1: ( rule__CompoundList__Group__0__Impl rule__CompoundList__Group__1 )
            // InternalMyBashParser.g:4250:2: rule__CompoundList__Group__0__Impl rule__CompoundList__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__CompoundList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group__0"


    // $ANTLR start "rule__CompoundList__Group__0__Impl"
    // InternalMyBashParser.g:4257:1: rule__CompoundList__Group__0__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__CompoundList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4261:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:4262:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:4262:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:4263:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getMaybeNewLineParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getMaybeNewLineParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group__0__Impl"


    // $ANTLR start "rule__CompoundList__Group__1"
    // InternalMyBashParser.g:4272:1: rule__CompoundList__Group__1 : rule__CompoundList__Group__1__Impl ;
    public final void rule__CompoundList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4276:1: ( rule__CompoundList__Group__1__Impl )
            // InternalMyBashParser.g:4277:2: rule__CompoundList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group__1"


    // $ANTLR start "rule__CompoundList__Group__1__Impl"
    // InternalMyBashParser.g:4283:1: rule__CompoundList__Group__1__Impl : ( ( rule__CompoundList__Group_1__0 ) ) ;
    public final void rule__CompoundList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4287:1: ( ( ( rule__CompoundList__Group_1__0 ) ) )
            // InternalMyBashParser.g:4288:1: ( ( rule__CompoundList__Group_1__0 ) )
            {
            // InternalMyBashParser.g:4288:1: ( ( rule__CompoundList__Group_1__0 ) )
            // InternalMyBashParser.g:4289:2: ( rule__CompoundList__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:4290:2: ( rule__CompoundList__Group_1__0 )
            // InternalMyBashParser.g:4290:3: rule__CompoundList__Group_1__0
            {
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group__1__Impl"


    // $ANTLR start "rule__CompoundList__Group_1__0"
    // InternalMyBashParser.g:4299:1: rule__CompoundList__Group_1__0 : rule__CompoundList__Group_1__0__Impl rule__CompoundList__Group_1__1 ;
    public final void rule__CompoundList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4303:1: ( rule__CompoundList__Group_1__0__Impl rule__CompoundList__Group_1__1 )
            // InternalMyBashParser.g:4304:2: rule__CompoundList__Group_1__0__Impl rule__CompoundList__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__CompoundList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1__0"


    // $ANTLR start "rule__CompoundList__Group_1__0__Impl"
    // InternalMyBashParser.g:4311:1: rule__CompoundList__Group_1__0__Impl : ( ( rule__CompoundList__CommandsAssignment_1_0 ) ) ;
    public final void rule__CompoundList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4315:1: ( ( ( rule__CompoundList__CommandsAssignment_1_0 ) ) )
            // InternalMyBashParser.g:4316:1: ( ( rule__CompoundList__CommandsAssignment_1_0 ) )
            {
            // InternalMyBashParser.g:4316:1: ( ( rule__CompoundList__CommandsAssignment_1_0 ) )
            // InternalMyBashParser.g:4317:2: ( rule__CompoundList__CommandsAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getCommandsAssignment_1_0()); 
            }
            // InternalMyBashParser.g:4318:2: ( rule__CompoundList__CommandsAssignment_1_0 )
            // InternalMyBashParser.g:4318:3: rule__CompoundList__CommandsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__CompoundList__CommandsAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getCommandsAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1__0__Impl"


    // $ANTLR start "rule__CompoundList__Group_1__1"
    // InternalMyBashParser.g:4326:1: rule__CompoundList__Group_1__1 : rule__CompoundList__Group_1__1__Impl rule__CompoundList__Group_1__2 ;
    public final void rule__CompoundList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4330:1: ( rule__CompoundList__Group_1__1__Impl rule__CompoundList__Group_1__2 )
            // InternalMyBashParser.g:4331:2: rule__CompoundList__Group_1__1__Impl rule__CompoundList__Group_1__2
            {
            pushFollow(FOLLOW_5);
            rule__CompoundList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1__1"


    // $ANTLR start "rule__CompoundList__Group_1__1__Impl"
    // InternalMyBashParser.g:4338:1: rule__CompoundList__Group_1__1__Impl : ( ( rule__CompoundList__Group_1_1__0 )* ) ;
    public final void rule__CompoundList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4342:1: ( ( ( rule__CompoundList__Group_1_1__0 )* ) )
            // InternalMyBashParser.g:4343:1: ( ( rule__CompoundList__Group_1_1__0 )* )
            {
            // InternalMyBashParser.g:4343:1: ( ( rule__CompoundList__Group_1_1__0 )* )
            // InternalMyBashParser.g:4344:2: ( rule__CompoundList__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getGroup_1_1()); 
            }
            // InternalMyBashParser.g:4345:2: ( rule__CompoundList__Group_1_1__0 )*
            loop63:
            do {
                int alt63=2;
                alt63 = dfa63.predict(input);
                switch (alt63) {
            	case 1 :
            	    // InternalMyBashParser.g:4345:3: rule__CompoundList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__CompoundList__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1__1__Impl"


    // $ANTLR start "rule__CompoundList__Group_1__2"
    // InternalMyBashParser.g:4353:1: rule__CompoundList__Group_1__2 : rule__CompoundList__Group_1__2__Impl ;
    public final void rule__CompoundList__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4357:1: ( rule__CompoundList__Group_1__2__Impl )
            // InternalMyBashParser.g:4358:2: rule__CompoundList__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1__2"


    // $ANTLR start "rule__CompoundList__Group_1__2__Impl"
    // InternalMyBashParser.g:4364:1: rule__CompoundList__Group_1__2__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__CompoundList__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4368:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:4369:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:4369:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:4370:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getMaybeNewLineParserRuleCall_1_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getMaybeNewLineParserRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1__2__Impl"


    // $ANTLR start "rule__CompoundList__Group_1_1__0"
    // InternalMyBashParser.g:4380:1: rule__CompoundList__Group_1_1__0 : rule__CompoundList__Group_1_1__0__Impl rule__CompoundList__Group_1_1__1 ;
    public final void rule__CompoundList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4384:1: ( rule__CompoundList__Group_1_1__0__Impl rule__CompoundList__Group_1_1__1 )
            // InternalMyBashParser.g:4385:2: rule__CompoundList__Group_1_1__0__Impl rule__CompoundList__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__CompoundList__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1_1__0"


    // $ANTLR start "rule__CompoundList__Group_1_1__0__Impl"
    // InternalMyBashParser.g:4392:1: rule__CompoundList__Group_1_1__0__Impl : ( ruleNewLine ) ;
    public final void rule__CompoundList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4396:1: ( ( ruleNewLine ) )
            // InternalMyBashParser.g:4397:1: ( ruleNewLine )
            {
            // InternalMyBashParser.g:4397:1: ( ruleNewLine )
            // InternalMyBashParser.g:4398:2: ruleNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getNewLineParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getNewLineParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1_1__0__Impl"


    // $ANTLR start "rule__CompoundList__Group_1_1__1"
    // InternalMyBashParser.g:4407:1: rule__CompoundList__Group_1_1__1 : rule__CompoundList__Group_1_1__1__Impl ;
    public final void rule__CompoundList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4411:1: ( rule__CompoundList__Group_1_1__1__Impl )
            // InternalMyBashParser.g:4412:2: rule__CompoundList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CompoundList__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1_1__1"


    // $ANTLR start "rule__CompoundList__Group_1_1__1__Impl"
    // InternalMyBashParser.g:4418:1: rule__CompoundList__Group_1_1__1__Impl : ( ( rule__CompoundList__CommandsAssignment_1_1_1 ) ) ;
    public final void rule__CompoundList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4422:1: ( ( ( rule__CompoundList__CommandsAssignment_1_1_1 ) ) )
            // InternalMyBashParser.g:4423:1: ( ( rule__CompoundList__CommandsAssignment_1_1_1 ) )
            {
            // InternalMyBashParser.g:4423:1: ( ( rule__CompoundList__CommandsAssignment_1_1_1 ) )
            // InternalMyBashParser.g:4424:2: ( rule__CompoundList__CommandsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getCommandsAssignment_1_1_1()); 
            }
            // InternalMyBashParser.g:4425:2: ( rule__CompoundList__CommandsAssignment_1_1_1 )
            // InternalMyBashParser.g:4425:3: rule__CompoundList__CommandsAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__CompoundList__CommandsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getCommandsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__Group_1_1__1__Impl"


    // $ANTLR start "rule__SimpleList__Group__0"
    // InternalMyBashParser.g:4434:1: rule__SimpleList__Group__0 : rule__SimpleList__Group__0__Impl rule__SimpleList__Group__1 ;
    public final void rule__SimpleList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4438:1: ( rule__SimpleList__Group__0__Impl rule__SimpleList__Group__1 )
            // InternalMyBashParser.g:4439:2: rule__SimpleList__Group__0__Impl rule__SimpleList__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__SimpleList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group__0"


    // $ANTLR start "rule__SimpleList__Group__0__Impl"
    // InternalMyBashParser.g:4446:1: rule__SimpleList__Group__0__Impl : ( rulePipelineCommand ) ;
    public final void rule__SimpleList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4450:1: ( ( rulePipelineCommand ) )
            // InternalMyBashParser.g:4451:1: ( rulePipelineCommand )
            {
            // InternalMyBashParser.g:4451:1: ( rulePipelineCommand )
            // InternalMyBashParser.g:4452:2: rulePipelineCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getPipelineCommandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePipelineCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getPipelineCommandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group__0__Impl"


    // $ANTLR start "rule__SimpleList__Group__1"
    // InternalMyBashParser.g:4461:1: rule__SimpleList__Group__1 : rule__SimpleList__Group__1__Impl rule__SimpleList__Group__2 ;
    public final void rule__SimpleList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4465:1: ( rule__SimpleList__Group__1__Impl rule__SimpleList__Group__2 )
            // InternalMyBashParser.g:4466:2: rule__SimpleList__Group__1__Impl rule__SimpleList__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__SimpleList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group__1"


    // $ANTLR start "rule__SimpleList__Group__1__Impl"
    // InternalMyBashParser.g:4473:1: rule__SimpleList__Group__1__Impl : ( ( rule__SimpleList__Group_1__0 )* ) ;
    public final void rule__SimpleList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4477:1: ( ( ( rule__SimpleList__Group_1__0 )* ) )
            // InternalMyBashParser.g:4478:1: ( ( rule__SimpleList__Group_1__0 )* )
            {
            // InternalMyBashParser.g:4478:1: ( ( rule__SimpleList__Group_1__0 )* )
            // InternalMyBashParser.g:4479:2: ( rule__SimpleList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:4480:2: ( rule__SimpleList__Group_1__0 )*
            loop64:
            do {
                int alt64=2;
                switch ( input.LA(1) ) {
                case Ampersand:
                    {
                    int LA64_1 = input.LA(2);

                    if ( ((LA64_1>=Function && LA64_1<=Case)||(LA64_1>=DollarSignLeftParenthesisLeftParenthesis && LA64_1<=AmpersandGreaterThanSignGreaterThanSign)||LA64_1==For||LA64_1==DollarSignLeftCurlyBracket||(LA64_1>=AmpersandGreaterThanSign && LA64_1<=LeftParenthesisLeftParenthesis)||(LA64_1>=LessThanSignAmpersand && LA64_1<=LessThanSignLessThanSign)||(LA64_1>=LessThanSignGreaterThanSign && LA64_1<=LessThanSignVerticalLine)||(LA64_1>=GreaterThanSignAmpersand && LA64_1<=GreaterThanSignLeftParenthesis)||(LA64_1>=GreaterThanSignGreaterThanSign && LA64_1<=LeftSquareBracketLeftSquareBracket)||LA64_1==If||(LA64_1>=ExclamationMark && LA64_1<=QuotationMark)||(LA64_1>=Apostrophe && LA64_1<=LeftParenthesis)||LA64_1==LessThanSign||LA64_1==GreaterThanSign||LA64_1==LeftCurlyBracket||LA64_1==RULE_I_NUMBER||(LA64_1>=RULE_NAME && LA64_1<=RULE_WORD_PART)||LA64_1==RULE_VARIABLE||LA64_1==RULE_CS_START) ) {
                        alt64=1;
                    }


                    }
                    break;
                case Semicolon:
                    {
                    int LA64_2 = input.LA(2);

                    if ( ((LA64_2>=Function && LA64_2<=Case)||(LA64_2>=DollarSignLeftParenthesisLeftParenthesis && LA64_2<=AmpersandGreaterThanSignGreaterThanSign)||LA64_2==For||LA64_2==DollarSignLeftCurlyBracket||(LA64_2>=AmpersandGreaterThanSign && LA64_2<=LeftParenthesisLeftParenthesis)||(LA64_2>=LessThanSignAmpersand && LA64_2<=LessThanSignLessThanSign)||(LA64_2>=LessThanSignGreaterThanSign && LA64_2<=LessThanSignVerticalLine)||(LA64_2>=GreaterThanSignAmpersand && LA64_2<=GreaterThanSignLeftParenthesis)||(LA64_2>=GreaterThanSignGreaterThanSign && LA64_2<=LeftSquareBracketLeftSquareBracket)||LA64_2==If||(LA64_2>=ExclamationMark && LA64_2<=QuotationMark)||(LA64_2>=Apostrophe && LA64_2<=LeftParenthesis)||LA64_2==LessThanSign||LA64_2==GreaterThanSign||LA64_2==LeftCurlyBracket||LA64_2==RULE_I_NUMBER||(LA64_2>=RULE_NAME && LA64_2<=RULE_WORD_PART)||LA64_2==RULE_VARIABLE||LA64_2==RULE_CS_START) ) {
                        alt64=1;
                    }


                    }
                    break;
                case AmpersandAmpersand:
                case VerticalLineVerticalLine:
                    {
                    alt64=1;
                    }
                    break;

                }

                switch (alt64) {
            	case 1 :
            	    // InternalMyBashParser.g:4480:3: rule__SimpleList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__SimpleList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group__1__Impl"


    // $ANTLR start "rule__SimpleList__Group__2"
    // InternalMyBashParser.g:4488:1: rule__SimpleList__Group__2 : rule__SimpleList__Group__2__Impl ;
    public final void rule__SimpleList__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4492:1: ( rule__SimpleList__Group__2__Impl )
            // InternalMyBashParser.g:4493:2: rule__SimpleList__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group__2"


    // $ANTLR start "rule__SimpleList__Group__2__Impl"
    // InternalMyBashParser.g:4499:1: rule__SimpleList__Group__2__Impl : ( ( rule__SimpleList__Alternatives_2 )? ) ;
    public final void rule__SimpleList__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4503:1: ( ( ( rule__SimpleList__Alternatives_2 )? ) )
            // InternalMyBashParser.g:4504:1: ( ( rule__SimpleList__Alternatives_2 )? )
            {
            // InternalMyBashParser.g:4504:1: ( ( rule__SimpleList__Alternatives_2 )? )
            // InternalMyBashParser.g:4505:2: ( rule__SimpleList__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getAlternatives_2()); 
            }
            // InternalMyBashParser.g:4506:2: ( rule__SimpleList__Alternatives_2 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Ampersand||LA65_0==Semicolon) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalMyBashParser.g:4506:3: rule__SimpleList__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleList__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group__2__Impl"


    // $ANTLR start "rule__SimpleList__Group_1__0"
    // InternalMyBashParser.g:4515:1: rule__SimpleList__Group_1__0 : rule__SimpleList__Group_1__0__Impl rule__SimpleList__Group_1__1 ;
    public final void rule__SimpleList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4519:1: ( rule__SimpleList__Group_1__0__Impl rule__SimpleList__Group_1__1 )
            // InternalMyBashParser.g:4520:2: rule__SimpleList__Group_1__0__Impl rule__SimpleList__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__SimpleList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1__0"


    // $ANTLR start "rule__SimpleList__Group_1__0__Impl"
    // InternalMyBashParser.g:4527:1: rule__SimpleList__Group_1__0__Impl : ( () ) ;
    public final void rule__SimpleList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4531:1: ( ( () ) )
            // InternalMyBashParser.g:4532:1: ( () )
            {
            // InternalMyBashParser.g:4532:1: ( () )
            // InternalMyBashParser.g:4533:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getSimpleListLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:4534:2: ()
            // InternalMyBashParser.g:4534:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getSimpleListLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleList__Group_1__1"
    // InternalMyBashParser.g:4542:1: rule__SimpleList__Group_1__1 : rule__SimpleList__Group_1__1__Impl rule__SimpleList__Group_1__2 ;
    public final void rule__SimpleList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4546:1: ( rule__SimpleList__Group_1__1__Impl rule__SimpleList__Group_1__2 )
            // InternalMyBashParser.g:4547:2: rule__SimpleList__Group_1__1__Impl rule__SimpleList__Group_1__2
            {
            pushFollow(FOLLOW_6);
            rule__SimpleList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1__1"


    // $ANTLR start "rule__SimpleList__Group_1__1__Impl"
    // InternalMyBashParser.g:4554:1: rule__SimpleList__Group_1__1__Impl : ( ( rule__SimpleList__Alternatives_1_1 ) ) ;
    public final void rule__SimpleList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4558:1: ( ( ( rule__SimpleList__Alternatives_1_1 ) ) )
            // InternalMyBashParser.g:4559:1: ( ( rule__SimpleList__Alternatives_1_1 ) )
            {
            // InternalMyBashParser.g:4559:1: ( ( rule__SimpleList__Alternatives_1_1 ) )
            // InternalMyBashParser.g:4560:2: ( rule__SimpleList__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getAlternatives_1_1()); 
            }
            // InternalMyBashParser.g:4561:2: ( rule__SimpleList__Alternatives_1_1 )
            // InternalMyBashParser.g:4561:3: rule__SimpleList__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleList__Group_1__2"
    // InternalMyBashParser.g:4569:1: rule__SimpleList__Group_1__2 : rule__SimpleList__Group_1__2__Impl ;
    public final void rule__SimpleList__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4573:1: ( rule__SimpleList__Group_1__2__Impl )
            // InternalMyBashParser.g:4574:2: rule__SimpleList__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1__2"


    // $ANTLR start "rule__SimpleList__Group_1__2__Impl"
    // InternalMyBashParser.g:4580:1: rule__SimpleList__Group_1__2__Impl : ( ( rule__SimpleList__RightAssignment_1_2 ) ) ;
    public final void rule__SimpleList__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4584:1: ( ( ( rule__SimpleList__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:4585:1: ( ( rule__SimpleList__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:4585:1: ( ( rule__SimpleList__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:4586:2: ( rule__SimpleList__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:4587:2: ( rule__SimpleList__RightAssignment_1_2 )
            // InternalMyBashParser.g:4587:3: rule__SimpleList__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleList__Group_1_1_0__0"
    // InternalMyBashParser.g:4596:1: rule__SimpleList__Group_1_1_0__0 : rule__SimpleList__Group_1_1_0__0__Impl rule__SimpleList__Group_1_1_0__1 ;
    public final void rule__SimpleList__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4600:1: ( rule__SimpleList__Group_1_1_0__0__Impl rule__SimpleList__Group_1_1_0__1 )
            // InternalMyBashParser.g:4601:2: rule__SimpleList__Group_1_1_0__0__Impl rule__SimpleList__Group_1_1_0__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleList__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1_1_0__0"


    // $ANTLR start "rule__SimpleList__Group_1_1_0__0__Impl"
    // InternalMyBashParser.g:4608:1: rule__SimpleList__Group_1_1_0__0__Impl : ( ( rule__SimpleList__OpAssignment_1_1_0_0 ) ) ;
    public final void rule__SimpleList__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4612:1: ( ( ( rule__SimpleList__OpAssignment_1_1_0_0 ) ) )
            // InternalMyBashParser.g:4613:1: ( ( rule__SimpleList__OpAssignment_1_1_0_0 ) )
            {
            // InternalMyBashParser.g:4613:1: ( ( rule__SimpleList__OpAssignment_1_1_0_0 ) )
            // InternalMyBashParser.g:4614:2: ( rule__SimpleList__OpAssignment_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getOpAssignment_1_1_0_0()); 
            }
            // InternalMyBashParser.g:4615:2: ( rule__SimpleList__OpAssignment_1_1_0_0 )
            // InternalMyBashParser.g:4615:3: rule__SimpleList__OpAssignment_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__OpAssignment_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getOpAssignment_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__SimpleList__Group_1_1_0__1"
    // InternalMyBashParser.g:4623:1: rule__SimpleList__Group_1_1_0__1 : rule__SimpleList__Group_1_1_0__1__Impl ;
    public final void rule__SimpleList__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4627:1: ( rule__SimpleList__Group_1_1_0__1__Impl )
            // InternalMyBashParser.g:4628:2: rule__SimpleList__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1_1_0__1"


    // $ANTLR start "rule__SimpleList__Group_1_1_0__1__Impl"
    // InternalMyBashParser.g:4634:1: rule__SimpleList__Group_1_1_0__1__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__SimpleList__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4638:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:4639:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:4639:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:4640:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getMaybeNewLineParserRuleCall_1_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getMaybeNewLineParserRuleCall_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__PipelineCommand__Group_0__0"
    // InternalMyBashParser.g:4650:1: rule__PipelineCommand__Group_0__0 : rule__PipelineCommand__Group_0__0__Impl rule__PipelineCommand__Group_0__1 ;
    public final void rule__PipelineCommand__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4654:1: ( rule__PipelineCommand__Group_0__0__Impl rule__PipelineCommand__Group_0__1 )
            // InternalMyBashParser.g:4655:2: rule__PipelineCommand__Group_0__0__Impl rule__PipelineCommand__Group_0__1
            {
            pushFollow(FOLLOW_12);
            rule__PipelineCommand__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PipelineCommand__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__Group_0__0"


    // $ANTLR start "rule__PipelineCommand__Group_0__0__Impl"
    // InternalMyBashParser.g:4662:1: rule__PipelineCommand__Group_0__0__Impl : ( () ) ;
    public final void rule__PipelineCommand__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4666:1: ( ( () ) )
            // InternalMyBashParser.g:4667:1: ( () )
            {
            // InternalMyBashParser.g:4667:1: ( () )
            // InternalMyBashParser.g:4668:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandAccess().getPipelineCommandAction_0_0()); 
            }
            // InternalMyBashParser.g:4669:2: ()
            // InternalMyBashParser.g:4669:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandAccess().getPipelineCommandAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__Group_0__0__Impl"


    // $ANTLR start "rule__PipelineCommand__Group_0__1"
    // InternalMyBashParser.g:4677:1: rule__PipelineCommand__Group_0__1 : rule__PipelineCommand__Group_0__1__Impl rule__PipelineCommand__Group_0__2 ;
    public final void rule__PipelineCommand__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4681:1: ( rule__PipelineCommand__Group_0__1__Impl rule__PipelineCommand__Group_0__2 )
            // InternalMyBashParser.g:4682:2: rule__PipelineCommand__Group_0__1__Impl rule__PipelineCommand__Group_0__2
            {
            pushFollow(FOLLOW_6);
            rule__PipelineCommand__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PipelineCommand__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__Group_0__1"


    // $ANTLR start "rule__PipelineCommand__Group_0__1__Impl"
    // InternalMyBashParser.g:4689:1: rule__PipelineCommand__Group_0__1__Impl : ( ( rule__PipelineCommand__NotAssignment_0_1 ) ) ;
    public final void rule__PipelineCommand__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4693:1: ( ( ( rule__PipelineCommand__NotAssignment_0_1 ) ) )
            // InternalMyBashParser.g:4694:1: ( ( rule__PipelineCommand__NotAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:4694:1: ( ( rule__PipelineCommand__NotAssignment_0_1 ) )
            // InternalMyBashParser.g:4695:2: ( rule__PipelineCommand__NotAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandAccess().getNotAssignment_0_1()); 
            }
            // InternalMyBashParser.g:4696:2: ( rule__PipelineCommand__NotAssignment_0_1 )
            // InternalMyBashParser.g:4696:3: rule__PipelineCommand__NotAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__PipelineCommand__NotAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandAccess().getNotAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__Group_0__1__Impl"


    // $ANTLR start "rule__PipelineCommand__Group_0__2"
    // InternalMyBashParser.g:4704:1: rule__PipelineCommand__Group_0__2 : rule__PipelineCommand__Group_0__2__Impl ;
    public final void rule__PipelineCommand__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4708:1: ( rule__PipelineCommand__Group_0__2__Impl )
            // InternalMyBashParser.g:4709:2: rule__PipelineCommand__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PipelineCommand__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__Group_0__2"


    // $ANTLR start "rule__PipelineCommand__Group_0__2__Impl"
    // InternalMyBashParser.g:4715:1: rule__PipelineCommand__Group_0__2__Impl : ( ( rule__PipelineCommand__PipelineAssignment_0_2 ) ) ;
    public final void rule__PipelineCommand__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4719:1: ( ( ( rule__PipelineCommand__PipelineAssignment_0_2 ) ) )
            // InternalMyBashParser.g:4720:1: ( ( rule__PipelineCommand__PipelineAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:4720:1: ( ( rule__PipelineCommand__PipelineAssignment_0_2 ) )
            // InternalMyBashParser.g:4721:2: ( rule__PipelineCommand__PipelineAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandAccess().getPipelineAssignment_0_2()); 
            }
            // InternalMyBashParser.g:4722:2: ( rule__PipelineCommand__PipelineAssignment_0_2 )
            // InternalMyBashParser.g:4722:3: rule__PipelineCommand__PipelineAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__PipelineCommand__PipelineAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandAccess().getPipelineAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__Group_0__2__Impl"


    // $ANTLR start "rule__Pipeline__Group__0"
    // InternalMyBashParser.g:4731:1: rule__Pipeline__Group__0 : rule__Pipeline__Group__0__Impl rule__Pipeline__Group__1 ;
    public final void rule__Pipeline__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4735:1: ( rule__Pipeline__Group__0__Impl rule__Pipeline__Group__1 )
            // InternalMyBashParser.g:4736:2: rule__Pipeline__Group__0__Impl rule__Pipeline__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Pipeline__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pipeline__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group__0"


    // $ANTLR start "rule__Pipeline__Group__0__Impl"
    // InternalMyBashParser.g:4743:1: rule__Pipeline__Group__0__Impl : ( ruleCommand ) ;
    public final void rule__Pipeline__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4747:1: ( ( ruleCommand ) )
            // InternalMyBashParser.g:4748:1: ( ruleCommand )
            {
            // InternalMyBashParser.g:4748:1: ( ruleCommand )
            // InternalMyBashParser.g:4749:2: ruleCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getCommandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getCommandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group__0__Impl"


    // $ANTLR start "rule__Pipeline__Group__1"
    // InternalMyBashParser.g:4758:1: rule__Pipeline__Group__1 : rule__Pipeline__Group__1__Impl ;
    public final void rule__Pipeline__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4762:1: ( rule__Pipeline__Group__1__Impl )
            // InternalMyBashParser.g:4763:2: rule__Pipeline__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pipeline__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group__1"


    // $ANTLR start "rule__Pipeline__Group__1__Impl"
    // InternalMyBashParser.g:4769:1: rule__Pipeline__Group__1__Impl : ( ( rule__Pipeline__Group_1__0 )* ) ;
    public final void rule__Pipeline__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4773:1: ( ( ( rule__Pipeline__Group_1__0 )* ) )
            // InternalMyBashParser.g:4774:1: ( ( rule__Pipeline__Group_1__0 )* )
            {
            // InternalMyBashParser.g:4774:1: ( ( rule__Pipeline__Group_1__0 )* )
            // InternalMyBashParser.g:4775:2: ( rule__Pipeline__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:4776:2: ( rule__Pipeline__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==VerticalLineAmpersand||LA66_0==VerticalLine) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalMyBashParser.g:4776:3: rule__Pipeline__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Pipeline__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group__1__Impl"


    // $ANTLR start "rule__Pipeline__Group_1__0"
    // InternalMyBashParser.g:4785:1: rule__Pipeline__Group_1__0 : rule__Pipeline__Group_1__0__Impl rule__Pipeline__Group_1__1 ;
    public final void rule__Pipeline__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4789:1: ( rule__Pipeline__Group_1__0__Impl rule__Pipeline__Group_1__1 )
            // InternalMyBashParser.g:4790:2: rule__Pipeline__Group_1__0__Impl rule__Pipeline__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Pipeline__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pipeline__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__0"


    // $ANTLR start "rule__Pipeline__Group_1__0__Impl"
    // InternalMyBashParser.g:4797:1: rule__Pipeline__Group_1__0__Impl : ( () ) ;
    public final void rule__Pipeline__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4801:1: ( ( () ) )
            // InternalMyBashParser.g:4802:1: ( () )
            {
            // InternalMyBashParser.g:4802:1: ( () )
            // InternalMyBashParser.g:4803:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getPipelineLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:4804:2: ()
            // InternalMyBashParser.g:4804:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getPipelineLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__0__Impl"


    // $ANTLR start "rule__Pipeline__Group_1__1"
    // InternalMyBashParser.g:4812:1: rule__Pipeline__Group_1__1 : rule__Pipeline__Group_1__1__Impl rule__Pipeline__Group_1__2 ;
    public final void rule__Pipeline__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4816:1: ( rule__Pipeline__Group_1__1__Impl rule__Pipeline__Group_1__2 )
            // InternalMyBashParser.g:4817:2: rule__Pipeline__Group_1__1__Impl rule__Pipeline__Group_1__2
            {
            pushFollow(FOLLOW_5);
            rule__Pipeline__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pipeline__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__1"


    // $ANTLR start "rule__Pipeline__Group_1__1__Impl"
    // InternalMyBashParser.g:4824:1: rule__Pipeline__Group_1__1__Impl : ( ( rule__Pipeline__OpAssignment_1_1 ) ) ;
    public final void rule__Pipeline__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4828:1: ( ( ( rule__Pipeline__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:4829:1: ( ( rule__Pipeline__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:4829:1: ( ( rule__Pipeline__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:4830:2: ( rule__Pipeline__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:4831:2: ( rule__Pipeline__OpAssignment_1_1 )
            // InternalMyBashParser.g:4831:3: rule__Pipeline__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Pipeline__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__1__Impl"


    // $ANTLR start "rule__Pipeline__Group_1__2"
    // InternalMyBashParser.g:4839:1: rule__Pipeline__Group_1__2 : rule__Pipeline__Group_1__2__Impl rule__Pipeline__Group_1__3 ;
    public final void rule__Pipeline__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4843:1: ( rule__Pipeline__Group_1__2__Impl rule__Pipeline__Group_1__3 )
            // InternalMyBashParser.g:4844:2: rule__Pipeline__Group_1__2__Impl rule__Pipeline__Group_1__3
            {
            pushFollow(FOLLOW_6);
            rule__Pipeline__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pipeline__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__2"


    // $ANTLR start "rule__Pipeline__Group_1__2__Impl"
    // InternalMyBashParser.g:4851:1: rule__Pipeline__Group_1__2__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__Pipeline__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4855:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:4856:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:4856:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:4857:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getMaybeNewLineParserRuleCall_1_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getMaybeNewLineParserRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__2__Impl"


    // $ANTLR start "rule__Pipeline__Group_1__3"
    // InternalMyBashParser.g:4866:1: rule__Pipeline__Group_1__3 : rule__Pipeline__Group_1__3__Impl ;
    public final void rule__Pipeline__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4870:1: ( rule__Pipeline__Group_1__3__Impl )
            // InternalMyBashParser.g:4871:2: rule__Pipeline__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pipeline__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__3"


    // $ANTLR start "rule__Pipeline__Group_1__3__Impl"
    // InternalMyBashParser.g:4877:1: rule__Pipeline__Group_1__3__Impl : ( ( rule__Pipeline__RightAssignment_1_3 ) ) ;
    public final void rule__Pipeline__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4881:1: ( ( ( rule__Pipeline__RightAssignment_1_3 ) ) )
            // InternalMyBashParser.g:4882:1: ( ( rule__Pipeline__RightAssignment_1_3 ) )
            {
            // InternalMyBashParser.g:4882:1: ( ( rule__Pipeline__RightAssignment_1_3 ) )
            // InternalMyBashParser.g:4883:2: ( rule__Pipeline__RightAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getRightAssignment_1_3()); 
            }
            // InternalMyBashParser.g:4884:2: ( rule__Pipeline__RightAssignment_1_3 )
            // InternalMyBashParser.g:4884:3: rule__Pipeline__RightAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__Pipeline__RightAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getRightAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__Group_1__3__Impl"


    // $ANTLR start "rule__Command__Group_2__0"
    // InternalMyBashParser.g:4893:1: rule__Command__Group_2__0 : rule__Command__Group_2__0__Impl rule__Command__Group_2__1 ;
    public final void rule__Command__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4897:1: ( rule__Command__Group_2__0__Impl rule__Command__Group_2__1 )
            // InternalMyBashParser.g:4898:2: rule__Command__Group_2__0__Impl rule__Command__Group_2__1
            {
            pushFollow(FOLLOW_15);
            rule__Command__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Command__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Command__Group_2__0"


    // $ANTLR start "rule__Command__Group_2__0__Impl"
    // InternalMyBashParser.g:4905:1: rule__Command__Group_2__0__Impl : ( ruleShellCommand ) ;
    public final void rule__Command__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4909:1: ( ( ruleShellCommand ) )
            // InternalMyBashParser.g:4910:1: ( ruleShellCommand )
            {
            // InternalMyBashParser.g:4910:1: ( ruleShellCommand )
            // InternalMyBashParser.g:4911:2: ruleShellCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandAccess().getShellCommandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleShellCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandAccess().getShellCommandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Command__Group_2__0__Impl"


    // $ANTLR start "rule__Command__Group_2__1"
    // InternalMyBashParser.g:4920:1: rule__Command__Group_2__1 : rule__Command__Group_2__1__Impl ;
    public final void rule__Command__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4924:1: ( rule__Command__Group_2__1__Impl )
            // InternalMyBashParser.g:4925:2: rule__Command__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Command__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Command__Group_2__1"


    // $ANTLR start "rule__Command__Group_2__1__Impl"
    // InternalMyBashParser.g:4931:1: rule__Command__Group_2__1__Impl : ( ( rule__Command__RedirectsAssignment_2_1 )* ) ;
    public final void rule__Command__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4935:1: ( ( ( rule__Command__RedirectsAssignment_2_1 )* ) )
            // InternalMyBashParser.g:4936:1: ( ( rule__Command__RedirectsAssignment_2_1 )* )
            {
            // InternalMyBashParser.g:4936:1: ( ( rule__Command__RedirectsAssignment_2_1 )* )
            // InternalMyBashParser.g:4937:2: ( rule__Command__RedirectsAssignment_2_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandAccess().getRedirectsAssignment_2_1()); 
            }
            // InternalMyBashParser.g:4938:2: ( rule__Command__RedirectsAssignment_2_1 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==AmpersandGreaterThanSignGreaterThanSign||LA67_0==AmpersandGreaterThanSign||LA67_0==LessThanSignAmpersand||LA67_0==LessThanSignLessThanSign||(LA67_0>=LessThanSignGreaterThanSign && LA67_0<=LessThanSignVerticalLine)||LA67_0==GreaterThanSignAmpersand||(LA67_0>=GreaterThanSignGreaterThanSign && LA67_0<=GreaterThanSignVerticalLine)||LA67_0==LessThanSign||LA67_0==GreaterThanSign||LA67_0==RULE_I_NUMBER) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalMyBashParser.g:4938:3: rule__Command__RedirectsAssignment_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Command__RedirectsAssignment_2_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandAccess().getRedirectsAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Command__Group_2__1__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0__0"
    // InternalMyBashParser.g:4947:1: rule__FunctionDefine__Group_0__0 : rule__FunctionDefine__Group_0__0__Impl rule__FunctionDefine__Group_0__1 ;
    public final void rule__FunctionDefine__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4951:1: ( rule__FunctionDefine__Group_0__0__Impl rule__FunctionDefine__Group_0__1 )
            // InternalMyBashParser.g:4952:2: rule__FunctionDefine__Group_0__0__Impl rule__FunctionDefine__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__FunctionDefine__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__0"


    // $ANTLR start "rule__FunctionDefine__Group_0__0__Impl"
    // InternalMyBashParser.g:4959:1: rule__FunctionDefine__Group_0__0__Impl : ( () ) ;
    public final void rule__FunctionDefine__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4963:1: ( ( () ) )
            // InternalMyBashParser.g:4964:1: ( () )
            {
            // InternalMyBashParser.g:4964:1: ( () )
            // InternalMyBashParser.g:4965:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getFunctionDefineAction_0_0()); 
            }
            // InternalMyBashParser.g:4966:2: ()
            // InternalMyBashParser.g:4966:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getFunctionDefineAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__0__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0__1"
    // InternalMyBashParser.g:4974:1: rule__FunctionDefine__Group_0__1 : rule__FunctionDefine__Group_0__1__Impl rule__FunctionDefine__Group_0__2 ;
    public final void rule__FunctionDefine__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4978:1: ( rule__FunctionDefine__Group_0__1__Impl rule__FunctionDefine__Group_0__2 )
            // InternalMyBashParser.g:4979:2: rule__FunctionDefine__Group_0__1__Impl rule__FunctionDefine__Group_0__2
            {
            pushFollow(FOLLOW_17);
            rule__FunctionDefine__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__1"


    // $ANTLR start "rule__FunctionDefine__Group_0__1__Impl"
    // InternalMyBashParser.g:4986:1: rule__FunctionDefine__Group_0__1__Impl : ( Function ) ;
    public final void rule__FunctionDefine__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:4990:1: ( ( Function ) )
            // InternalMyBashParser.g:4991:1: ( Function )
            {
            // InternalMyBashParser.g:4991:1: ( Function )
            // InternalMyBashParser.g:4992:2: Function
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getFunctionKeyword_0_1()); 
            }
            match(input,Function,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getFunctionKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__1__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0__2"
    // InternalMyBashParser.g:5001:1: rule__FunctionDefine__Group_0__2 : rule__FunctionDefine__Group_0__2__Impl rule__FunctionDefine__Group_0__3 ;
    public final void rule__FunctionDefine__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5005:1: ( rule__FunctionDefine__Group_0__2__Impl rule__FunctionDefine__Group_0__3 )
            // InternalMyBashParser.g:5006:2: rule__FunctionDefine__Group_0__2__Impl rule__FunctionDefine__Group_0__3
            {
            pushFollow(FOLLOW_18);
            rule__FunctionDefine__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__2"


    // $ANTLR start "rule__FunctionDefine__Group_0__2__Impl"
    // InternalMyBashParser.g:5013:1: rule__FunctionDefine__Group_0__2__Impl : ( ( rule__FunctionDefine__NameAssignment_0_2 ) ) ;
    public final void rule__FunctionDefine__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5017:1: ( ( ( rule__FunctionDefine__NameAssignment_0_2 ) ) )
            // InternalMyBashParser.g:5018:1: ( ( rule__FunctionDefine__NameAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:5018:1: ( ( rule__FunctionDefine__NameAssignment_0_2 ) )
            // InternalMyBashParser.g:5019:2: ( rule__FunctionDefine__NameAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getNameAssignment_0_2()); 
            }
            // InternalMyBashParser.g:5020:2: ( rule__FunctionDefine__NameAssignment_0_2 )
            // InternalMyBashParser.g:5020:3: rule__FunctionDefine__NameAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__NameAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getNameAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__2__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0__3"
    // InternalMyBashParser.g:5028:1: rule__FunctionDefine__Group_0__3 : rule__FunctionDefine__Group_0__3__Impl rule__FunctionDefine__Group_0__4 ;
    public final void rule__FunctionDefine__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5032:1: ( rule__FunctionDefine__Group_0__3__Impl rule__FunctionDefine__Group_0__4 )
            // InternalMyBashParser.g:5033:2: rule__FunctionDefine__Group_0__3__Impl rule__FunctionDefine__Group_0__4
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefine__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__3"


    // $ANTLR start "rule__FunctionDefine__Group_0__3__Impl"
    // InternalMyBashParser.g:5040:1: rule__FunctionDefine__Group_0__3__Impl : ( ( rule__FunctionDefine__Group_0_3__0 ) ) ;
    public final void rule__FunctionDefine__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5044:1: ( ( ( rule__FunctionDefine__Group_0_3__0 ) ) )
            // InternalMyBashParser.g:5045:1: ( ( rule__FunctionDefine__Group_0_3__0 ) )
            {
            // InternalMyBashParser.g:5045:1: ( ( rule__FunctionDefine__Group_0_3__0 ) )
            // InternalMyBashParser.g:5046:2: ( rule__FunctionDefine__Group_0_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getGroup_0_3()); 
            }
            // InternalMyBashParser.g:5047:2: ( rule__FunctionDefine__Group_0_3__0 )
            // InternalMyBashParser.g:5047:3: rule__FunctionDefine__Group_0_3__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getGroup_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__3__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0__4"
    // InternalMyBashParser.g:5055:1: rule__FunctionDefine__Group_0__4 : rule__FunctionDefine__Group_0__4__Impl ;
    public final void rule__FunctionDefine__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5059:1: ( rule__FunctionDefine__Group_0__4__Impl )
            // InternalMyBashParser.g:5060:2: rule__FunctionDefine__Group_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__4"


    // $ANTLR start "rule__FunctionDefine__Group_0__4__Impl"
    // InternalMyBashParser.g:5066:1: rule__FunctionDefine__Group_0__4__Impl : ( ( rule__FunctionDefine__BodyAssignment_0_4 ) ) ;
    public final void rule__FunctionDefine__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5070:1: ( ( ( rule__FunctionDefine__BodyAssignment_0_4 ) ) )
            // InternalMyBashParser.g:5071:1: ( ( rule__FunctionDefine__BodyAssignment_0_4 ) )
            {
            // InternalMyBashParser.g:5071:1: ( ( rule__FunctionDefine__BodyAssignment_0_4 ) )
            // InternalMyBashParser.g:5072:2: ( rule__FunctionDefine__BodyAssignment_0_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getBodyAssignment_0_4()); 
            }
            // InternalMyBashParser.g:5073:2: ( rule__FunctionDefine__BodyAssignment_0_4 )
            // InternalMyBashParser.g:5073:3: rule__FunctionDefine__BodyAssignment_0_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__BodyAssignment_0_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getBodyAssignment_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0__4__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0_3__0"
    // InternalMyBashParser.g:5082:1: rule__FunctionDefine__Group_0_3__0 : rule__FunctionDefine__Group_0_3__0__Impl rule__FunctionDefine__Group_0_3__1 ;
    public final void rule__FunctionDefine__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5086:1: ( rule__FunctionDefine__Group_0_3__0__Impl rule__FunctionDefine__Group_0_3__1 )
            // InternalMyBashParser.g:5087:2: rule__FunctionDefine__Group_0_3__0__Impl rule__FunctionDefine__Group_0_3__1
            {
            pushFollow(FOLLOW_18);
            rule__FunctionDefine__Group_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3__0"


    // $ANTLR start "rule__FunctionDefine__Group_0_3__0__Impl"
    // InternalMyBashParser.g:5094:1: rule__FunctionDefine__Group_0_3__0__Impl : ( ( rule__FunctionDefine__Group_0_3_0__0 )? ) ;
    public final void rule__FunctionDefine__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5098:1: ( ( ( rule__FunctionDefine__Group_0_3_0__0 )? ) )
            // InternalMyBashParser.g:5099:1: ( ( rule__FunctionDefine__Group_0_3_0__0 )? )
            {
            // InternalMyBashParser.g:5099:1: ( ( rule__FunctionDefine__Group_0_3_0__0 )? )
            // InternalMyBashParser.g:5100:2: ( rule__FunctionDefine__Group_0_3_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getGroup_0_3_0()); 
            }
            // InternalMyBashParser.g:5101:2: ( rule__FunctionDefine__Group_0_3_0__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LeftParenthesis) ) {
                int LA68_1 = input.LA(2);

                if ( (LA68_1==RightParenthesis) ) {
                    alt68=1;
                }
            }
            switch (alt68) {
                case 1 :
                    // InternalMyBashParser.g:5101:3: rule__FunctionDefine__Group_0_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefine__Group_0_3_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getGroup_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3__0__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0_3__1"
    // InternalMyBashParser.g:5109:1: rule__FunctionDefine__Group_0_3__1 : rule__FunctionDefine__Group_0_3__1__Impl ;
    public final void rule__FunctionDefine__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5113:1: ( rule__FunctionDefine__Group_0_3__1__Impl )
            // InternalMyBashParser.g:5114:2: rule__FunctionDefine__Group_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3__1"


    // $ANTLR start "rule__FunctionDefine__Group_0_3__1__Impl"
    // InternalMyBashParser.g:5120:1: rule__FunctionDefine__Group_0_3__1__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__FunctionDefine__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5124:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:5125:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:5125:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:5126:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getMaybeNewLineParserRuleCall_0_3_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getMaybeNewLineParserRuleCall_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3__1__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0_3_0__0"
    // InternalMyBashParser.g:5136:1: rule__FunctionDefine__Group_0_3_0__0 : rule__FunctionDefine__Group_0_3_0__0__Impl rule__FunctionDefine__Group_0_3_0__1 ;
    public final void rule__FunctionDefine__Group_0_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5140:1: ( rule__FunctionDefine__Group_0_3_0__0__Impl rule__FunctionDefine__Group_0_3_0__1 )
            // InternalMyBashParser.g:5141:2: rule__FunctionDefine__Group_0_3_0__0__Impl rule__FunctionDefine__Group_0_3_0__1
            {
            pushFollow(FOLLOW_19);
            rule__FunctionDefine__Group_0_3_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0_3_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3_0__0"


    // $ANTLR start "rule__FunctionDefine__Group_0_3_0__0__Impl"
    // InternalMyBashParser.g:5148:1: rule__FunctionDefine__Group_0_3_0__0__Impl : ( ( LeftParenthesis ) ) ;
    public final void rule__FunctionDefine__Group_0_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5152:1: ( ( ( LeftParenthesis ) ) )
            // InternalMyBashParser.g:5153:1: ( ( LeftParenthesis ) )
            {
            // InternalMyBashParser.g:5153:1: ( ( LeftParenthesis ) )
            // InternalMyBashParser.g:5154:2: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getLeftParenthesisKeyword_0_3_0_0()); 
            }
            // InternalMyBashParser.g:5155:2: ( LeftParenthesis )
            // InternalMyBashParser.g:5155:3: LeftParenthesis
            {
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getLeftParenthesisKeyword_0_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3_0__0__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_0_3_0__1"
    // InternalMyBashParser.g:5163:1: rule__FunctionDefine__Group_0_3_0__1 : rule__FunctionDefine__Group_0_3_0__1__Impl ;
    public final void rule__FunctionDefine__Group_0_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5167:1: ( rule__FunctionDefine__Group_0_3_0__1__Impl )
            // InternalMyBashParser.g:5168:2: rule__FunctionDefine__Group_0_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_0_3_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3_0__1"


    // $ANTLR start "rule__FunctionDefine__Group_0_3_0__1__Impl"
    // InternalMyBashParser.g:5174:1: rule__FunctionDefine__Group_0_3_0__1__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionDefine__Group_0_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5178:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:5179:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:5179:1: ( RightParenthesis )
            // InternalMyBashParser.g:5180:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getRightParenthesisKeyword_0_3_0_1()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getRightParenthesisKeyword_0_3_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_0_3_0__1__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_1__0"
    // InternalMyBashParser.g:5190:1: rule__FunctionDefine__Group_1__0 : rule__FunctionDefine__Group_1__0__Impl rule__FunctionDefine__Group_1__1 ;
    public final void rule__FunctionDefine__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5194:1: ( rule__FunctionDefine__Group_1__0__Impl rule__FunctionDefine__Group_1__1 )
            // InternalMyBashParser.g:5195:2: rule__FunctionDefine__Group_1__0__Impl rule__FunctionDefine__Group_1__1
            {
            pushFollow(FOLLOW_17);
            rule__FunctionDefine__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__0"


    // $ANTLR start "rule__FunctionDefine__Group_1__0__Impl"
    // InternalMyBashParser.g:5202:1: rule__FunctionDefine__Group_1__0__Impl : ( () ) ;
    public final void rule__FunctionDefine__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5206:1: ( ( () ) )
            // InternalMyBashParser.g:5207:1: ( () )
            {
            // InternalMyBashParser.g:5207:1: ( () )
            // InternalMyBashParser.g:5208:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getFunctionDefineAction_1_0()); 
            }
            // InternalMyBashParser.g:5209:2: ()
            // InternalMyBashParser.g:5209:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getFunctionDefineAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__0__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_1__1"
    // InternalMyBashParser.g:5217:1: rule__FunctionDefine__Group_1__1 : rule__FunctionDefine__Group_1__1__Impl rule__FunctionDefine__Group_1__2 ;
    public final void rule__FunctionDefine__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5221:1: ( rule__FunctionDefine__Group_1__1__Impl rule__FunctionDefine__Group_1__2 )
            // InternalMyBashParser.g:5222:2: rule__FunctionDefine__Group_1__1__Impl rule__FunctionDefine__Group_1__2
            {
            pushFollow(FOLLOW_20);
            rule__FunctionDefine__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__1"


    // $ANTLR start "rule__FunctionDefine__Group_1__1__Impl"
    // InternalMyBashParser.g:5229:1: rule__FunctionDefine__Group_1__1__Impl : ( ( rule__FunctionDefine__NameAssignment_1_1 ) ) ;
    public final void rule__FunctionDefine__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5233:1: ( ( ( rule__FunctionDefine__NameAssignment_1_1 ) ) )
            // InternalMyBashParser.g:5234:1: ( ( rule__FunctionDefine__NameAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:5234:1: ( ( rule__FunctionDefine__NameAssignment_1_1 ) )
            // InternalMyBashParser.g:5235:2: ( rule__FunctionDefine__NameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getNameAssignment_1_1()); 
            }
            // InternalMyBashParser.g:5236:2: ( rule__FunctionDefine__NameAssignment_1_1 )
            // InternalMyBashParser.g:5236:3: rule__FunctionDefine__NameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__NameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__1__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_1__2"
    // InternalMyBashParser.g:5244:1: rule__FunctionDefine__Group_1__2 : rule__FunctionDefine__Group_1__2__Impl rule__FunctionDefine__Group_1__3 ;
    public final void rule__FunctionDefine__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5248:1: ( rule__FunctionDefine__Group_1__2__Impl rule__FunctionDefine__Group_1__3 )
            // InternalMyBashParser.g:5249:2: rule__FunctionDefine__Group_1__2__Impl rule__FunctionDefine__Group_1__3
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefine__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__2"


    // $ANTLR start "rule__FunctionDefine__Group_1__2__Impl"
    // InternalMyBashParser.g:5256:1: rule__FunctionDefine__Group_1__2__Impl : ( ( rule__FunctionDefine__Group_1_2__0 ) ) ;
    public final void rule__FunctionDefine__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5260:1: ( ( ( rule__FunctionDefine__Group_1_2__0 ) ) )
            // InternalMyBashParser.g:5261:1: ( ( rule__FunctionDefine__Group_1_2__0 ) )
            {
            // InternalMyBashParser.g:5261:1: ( ( rule__FunctionDefine__Group_1_2__0 ) )
            // InternalMyBashParser.g:5262:2: ( rule__FunctionDefine__Group_1_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getGroup_1_2()); 
            }
            // InternalMyBashParser.g:5263:2: ( rule__FunctionDefine__Group_1_2__0 )
            // InternalMyBashParser.g:5263:3: rule__FunctionDefine__Group_1_2__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__2__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_1__3"
    // InternalMyBashParser.g:5271:1: rule__FunctionDefine__Group_1__3 : rule__FunctionDefine__Group_1__3__Impl ;
    public final void rule__FunctionDefine__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5275:1: ( rule__FunctionDefine__Group_1__3__Impl )
            // InternalMyBashParser.g:5276:2: rule__FunctionDefine__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__3"


    // $ANTLR start "rule__FunctionDefine__Group_1__3__Impl"
    // InternalMyBashParser.g:5282:1: rule__FunctionDefine__Group_1__3__Impl : ( ( rule__FunctionDefine__BodyAssignment_1_3 ) ) ;
    public final void rule__FunctionDefine__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5286:1: ( ( ( rule__FunctionDefine__BodyAssignment_1_3 ) ) )
            // InternalMyBashParser.g:5287:1: ( ( rule__FunctionDefine__BodyAssignment_1_3 ) )
            {
            // InternalMyBashParser.g:5287:1: ( ( rule__FunctionDefine__BodyAssignment_1_3 ) )
            // InternalMyBashParser.g:5288:2: ( rule__FunctionDefine__BodyAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getBodyAssignment_1_3()); 
            }
            // InternalMyBashParser.g:5289:2: ( rule__FunctionDefine__BodyAssignment_1_3 )
            // InternalMyBashParser.g:5289:3: rule__FunctionDefine__BodyAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__BodyAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getBodyAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1__3__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_1_2__0"
    // InternalMyBashParser.g:5298:1: rule__FunctionDefine__Group_1_2__0 : rule__FunctionDefine__Group_1_2__0__Impl rule__FunctionDefine__Group_1_2__1 ;
    public final void rule__FunctionDefine__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5302:1: ( rule__FunctionDefine__Group_1_2__0__Impl rule__FunctionDefine__Group_1_2__1 )
            // InternalMyBashParser.g:5303:2: rule__FunctionDefine__Group_1_2__0__Impl rule__FunctionDefine__Group_1_2__1
            {
            pushFollow(FOLLOW_19);
            rule__FunctionDefine__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1_2__0"


    // $ANTLR start "rule__FunctionDefine__Group_1_2__0__Impl"
    // InternalMyBashParser.g:5310:1: rule__FunctionDefine__Group_1_2__0__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionDefine__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5314:1: ( ( LeftParenthesis ) )
            // InternalMyBashParser.g:5315:1: ( LeftParenthesis )
            {
            // InternalMyBashParser.g:5315:1: ( LeftParenthesis )
            // InternalMyBashParser.g:5316:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getLeftParenthesisKeyword_1_2_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getLeftParenthesisKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1_2__0__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_1_2__1"
    // InternalMyBashParser.g:5325:1: rule__FunctionDefine__Group_1_2__1 : rule__FunctionDefine__Group_1_2__1__Impl rule__FunctionDefine__Group_1_2__2 ;
    public final void rule__FunctionDefine__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5329:1: ( rule__FunctionDefine__Group_1_2__1__Impl rule__FunctionDefine__Group_1_2__2 )
            // InternalMyBashParser.g:5330:2: rule__FunctionDefine__Group_1_2__1__Impl rule__FunctionDefine__Group_1_2__2
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefine__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1_2__1"


    // $ANTLR start "rule__FunctionDefine__Group_1_2__1__Impl"
    // InternalMyBashParser.g:5337:1: rule__FunctionDefine__Group_1_2__1__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionDefine__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5341:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:5342:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:5342:1: ( RightParenthesis )
            // InternalMyBashParser.g:5343:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getRightParenthesisKeyword_1_2_1()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getRightParenthesisKeyword_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1_2__1__Impl"


    // $ANTLR start "rule__FunctionDefine__Group_1_2__2"
    // InternalMyBashParser.g:5352:1: rule__FunctionDefine__Group_1_2__2 : rule__FunctionDefine__Group_1_2__2__Impl ;
    public final void rule__FunctionDefine__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5356:1: ( rule__FunctionDefine__Group_1_2__2__Impl )
            // InternalMyBashParser.g:5357:2: rule__FunctionDefine__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefine__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1_2__2"


    // $ANTLR start "rule__FunctionDefine__Group_1_2__2__Impl"
    // InternalMyBashParser.g:5363:1: rule__FunctionDefine__Group_1_2__2__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__FunctionDefine__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5367:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:5368:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:5368:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:5369:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getMaybeNewLineParserRuleCall_1_2_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getMaybeNewLineParserRuleCall_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__Group_1_2__2__Impl"


    // $ANTLR start "rule__SimpleCommand__Group_0__0"
    // InternalMyBashParser.g:5379:1: rule__SimpleCommand__Group_0__0 : rule__SimpleCommand__Group_0__0__Impl rule__SimpleCommand__Group_0__1 ;
    public final void rule__SimpleCommand__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5383:1: ( rule__SimpleCommand__Group_0__0__Impl rule__SimpleCommand__Group_0__1 )
            // InternalMyBashParser.g:5384:2: rule__SimpleCommand__Group_0__0__Impl rule__SimpleCommand__Group_0__1
            {
            pushFollow(FOLLOW_21);
            rule__SimpleCommand__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0__0"


    // $ANTLR start "rule__SimpleCommand__Group_0__0__Impl"
    // InternalMyBashParser.g:5391:1: rule__SimpleCommand__Group_0__0__Impl : ( ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 ) ) ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 )* ) ) ;
    public final void rule__SimpleCommand__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5395:1: ( ( ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 ) ) ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 )* ) ) )
            // InternalMyBashParser.g:5396:1: ( ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 ) ) ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 )* ) )
            {
            // InternalMyBashParser.g:5396:1: ( ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 ) ) ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 )* ) )
            // InternalMyBashParser.g:5397:2: ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 ) ) ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 )* )
            {
            // InternalMyBashParser.g:5397:2: ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 ) )
            // InternalMyBashParser.g:5398:3: ( rule__SimpleCommand__AssignmentsAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getAssignmentsAssignment_0_0()); 
            }
            // InternalMyBashParser.g:5399:3: ( rule__SimpleCommand__AssignmentsAssignment_0_0 )
            // InternalMyBashParser.g:5399:4: rule__SimpleCommand__AssignmentsAssignment_0_0
            {
            pushFollow(FOLLOW_22);
            rule__SimpleCommand__AssignmentsAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getAssignmentsAssignment_0_0()); 
            }

            }

            // InternalMyBashParser.g:5402:2: ( ( rule__SimpleCommand__AssignmentsAssignment_0_0 )* )
            // InternalMyBashParser.g:5403:3: ( rule__SimpleCommand__AssignmentsAssignment_0_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getAssignmentsAssignment_0_0()); 
            }
            // InternalMyBashParser.g:5404:3: ( rule__SimpleCommand__AssignmentsAssignment_0_0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==RULE_NAME) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalMyBashParser.g:5404:4: rule__SimpleCommand__AssignmentsAssignment_0_0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__SimpleCommand__AssignmentsAssignment_0_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getAssignmentsAssignment_0_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0__0__Impl"


    // $ANTLR start "rule__SimpleCommand__Group_0__1"
    // InternalMyBashParser.g:5413:1: rule__SimpleCommand__Group_0__1 : rule__SimpleCommand__Group_0__1__Impl ;
    public final void rule__SimpleCommand__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5417:1: ( rule__SimpleCommand__Group_0__1__Impl )
            // InternalMyBashParser.g:5418:2: rule__SimpleCommand__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0__1"


    // $ANTLR start "rule__SimpleCommand__Group_0__1__Impl"
    // InternalMyBashParser.g:5424:1: rule__SimpleCommand__Group_0__1__Impl : ( ( rule__SimpleCommand__Group_0_1__0 )? ) ;
    public final void rule__SimpleCommand__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5428:1: ( ( ( rule__SimpleCommand__Group_0_1__0 )? ) )
            // InternalMyBashParser.g:5429:1: ( ( rule__SimpleCommand__Group_0_1__0 )? )
            {
            // InternalMyBashParser.g:5429:1: ( ( rule__SimpleCommand__Group_0_1__0 )? )
            // InternalMyBashParser.g:5430:2: ( rule__SimpleCommand__Group_0_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getGroup_0_1()); 
            }
            // InternalMyBashParser.g:5431:2: ( rule__SimpleCommand__Group_0_1__0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==DollarSignLeftParenthesisLeftParenthesis||LA70_0==DollarSignLeftCurlyBracket||LA70_0==LessThanSignLeftParenthesis||LA70_0==GreaterThanSignLeftParenthesis||LA70_0==QuotationMark||LA70_0==Apostrophe||(LA70_0>=RULE_S_WORD_PART && LA70_0<=RULE_WORD_PART)||LA70_0==RULE_VARIABLE||LA70_0==RULE_CS_START) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalMyBashParser.g:5431:3: rule__SimpleCommand__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleCommand__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getGroup_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0__1__Impl"


    // $ANTLR start "rule__SimpleCommand__Group_0_1__0"
    // InternalMyBashParser.g:5440:1: rule__SimpleCommand__Group_0_1__0 : rule__SimpleCommand__Group_0_1__0__Impl rule__SimpleCommand__Group_0_1__1 ;
    public final void rule__SimpleCommand__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5444:1: ( rule__SimpleCommand__Group_0_1__0__Impl rule__SimpleCommand__Group_0_1__1 )
            // InternalMyBashParser.g:5445:2: rule__SimpleCommand__Group_0_1__0__Impl rule__SimpleCommand__Group_0_1__1
            {
            pushFollow(FOLLOW_23);
            rule__SimpleCommand__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0_1__0"


    // $ANTLR start "rule__SimpleCommand__Group_0_1__0__Impl"
    // InternalMyBashParser.g:5452:1: rule__SimpleCommand__Group_0_1__0__Impl : ( ( rule__SimpleCommand__CommandAssignment_0_1_0 ) ) ;
    public final void rule__SimpleCommand__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5456:1: ( ( ( rule__SimpleCommand__CommandAssignment_0_1_0 ) ) )
            // InternalMyBashParser.g:5457:1: ( ( rule__SimpleCommand__CommandAssignment_0_1_0 ) )
            {
            // InternalMyBashParser.g:5457:1: ( ( rule__SimpleCommand__CommandAssignment_0_1_0 ) )
            // InternalMyBashParser.g:5458:2: ( rule__SimpleCommand__CommandAssignment_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getCommandAssignment_0_1_0()); 
            }
            // InternalMyBashParser.g:5459:2: ( rule__SimpleCommand__CommandAssignment_0_1_0 )
            // InternalMyBashParser.g:5459:3: rule__SimpleCommand__CommandAssignment_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__CommandAssignment_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getCommandAssignment_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0_1__0__Impl"


    // $ANTLR start "rule__SimpleCommand__Group_0_1__1"
    // InternalMyBashParser.g:5467:1: rule__SimpleCommand__Group_0_1__1 : rule__SimpleCommand__Group_0_1__1__Impl ;
    public final void rule__SimpleCommand__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5471:1: ( rule__SimpleCommand__Group_0_1__1__Impl )
            // InternalMyBashParser.g:5472:2: rule__SimpleCommand__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0_1__1"


    // $ANTLR start "rule__SimpleCommand__Group_0_1__1__Impl"
    // InternalMyBashParser.g:5478:1: rule__SimpleCommand__Group_0_1__1__Impl : ( ( rule__SimpleCommand__Alternatives_0_1_1 )* ) ;
    public final void rule__SimpleCommand__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5482:1: ( ( ( rule__SimpleCommand__Alternatives_0_1_1 )* ) )
            // InternalMyBashParser.g:5483:1: ( ( rule__SimpleCommand__Alternatives_0_1_1 )* )
            {
            // InternalMyBashParser.g:5483:1: ( ( rule__SimpleCommand__Alternatives_0_1_1 )* )
            // InternalMyBashParser.g:5484:2: ( rule__SimpleCommand__Alternatives_0_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getAlternatives_0_1_1()); 
            }
            // InternalMyBashParser.g:5485:2: ( rule__SimpleCommand__Alternatives_0_1_1 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( ((LA71_0>=DollarSignLeftParenthesisLeftParenthesis && LA71_0<=AmpersandGreaterThanSignGreaterThanSign)||LA71_0==DollarSignLeftCurlyBracket||LA71_0==AmpersandGreaterThanSign||(LA71_0>=LessThanSignAmpersand && LA71_0<=LessThanSignLessThanSign)||(LA71_0>=LessThanSignGreaterThanSign && LA71_0<=LessThanSignVerticalLine)||(LA71_0>=GreaterThanSignAmpersand && LA71_0<=GreaterThanSignLeftParenthesis)||(LA71_0>=GreaterThanSignGreaterThanSign && LA71_0<=GreaterThanSignVerticalLine)||LA71_0==QuotationMark||LA71_0==Apostrophe||LA71_0==LessThanSign||LA71_0==GreaterThanSign||LA71_0==RULE_I_NUMBER||(LA71_0>=RULE_S_WORD_PART && LA71_0<=RULE_WORD_PART)||LA71_0==RULE_VARIABLE||LA71_0==RULE_CS_START) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalMyBashParser.g:5485:3: rule__SimpleCommand__Alternatives_0_1_1
            	    {
            	    pushFollow(FOLLOW_24);
            	    rule__SimpleCommand__Alternatives_0_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getAlternatives_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_0_1__1__Impl"


    // $ANTLR start "rule__SimpleCommand__Group_1__0"
    // InternalMyBashParser.g:5494:1: rule__SimpleCommand__Group_1__0 : rule__SimpleCommand__Group_1__0__Impl rule__SimpleCommand__Group_1__1 ;
    public final void rule__SimpleCommand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5498:1: ( rule__SimpleCommand__Group_1__0__Impl rule__SimpleCommand__Group_1__1 )
            // InternalMyBashParser.g:5499:2: rule__SimpleCommand__Group_1__0__Impl rule__SimpleCommand__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__SimpleCommand__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_1__0"


    // $ANTLR start "rule__SimpleCommand__Group_1__0__Impl"
    // InternalMyBashParser.g:5506:1: rule__SimpleCommand__Group_1__0__Impl : ( ( rule__SimpleCommand__CommandAssignment_1_0 ) ) ;
    public final void rule__SimpleCommand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5510:1: ( ( ( rule__SimpleCommand__CommandAssignment_1_0 ) ) )
            // InternalMyBashParser.g:5511:1: ( ( rule__SimpleCommand__CommandAssignment_1_0 ) )
            {
            // InternalMyBashParser.g:5511:1: ( ( rule__SimpleCommand__CommandAssignment_1_0 ) )
            // InternalMyBashParser.g:5512:2: ( rule__SimpleCommand__CommandAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getCommandAssignment_1_0()); 
            }
            // InternalMyBashParser.g:5513:2: ( rule__SimpleCommand__CommandAssignment_1_0 )
            // InternalMyBashParser.g:5513:3: rule__SimpleCommand__CommandAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__CommandAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getCommandAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleCommand__Group_1__1"
    // InternalMyBashParser.g:5521:1: rule__SimpleCommand__Group_1__1 : rule__SimpleCommand__Group_1__1__Impl ;
    public final void rule__SimpleCommand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5525:1: ( rule__SimpleCommand__Group_1__1__Impl )
            // InternalMyBashParser.g:5526:2: rule__SimpleCommand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_1__1"


    // $ANTLR start "rule__SimpleCommand__Group_1__1__Impl"
    // InternalMyBashParser.g:5532:1: rule__SimpleCommand__Group_1__1__Impl : ( ( rule__SimpleCommand__Alternatives_1_1 )* ) ;
    public final void rule__SimpleCommand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5536:1: ( ( ( rule__SimpleCommand__Alternatives_1_1 )* ) )
            // InternalMyBashParser.g:5537:1: ( ( rule__SimpleCommand__Alternatives_1_1 )* )
            {
            // InternalMyBashParser.g:5537:1: ( ( rule__SimpleCommand__Alternatives_1_1 )* )
            // InternalMyBashParser.g:5538:2: ( rule__SimpleCommand__Alternatives_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getAlternatives_1_1()); 
            }
            // InternalMyBashParser.g:5539:2: ( rule__SimpleCommand__Alternatives_1_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=DollarSignLeftParenthesisLeftParenthesis && LA72_0<=AmpersandGreaterThanSignGreaterThanSign)||LA72_0==DollarSignLeftCurlyBracket||LA72_0==AmpersandGreaterThanSign||(LA72_0>=LessThanSignAmpersand && LA72_0<=LessThanSignLessThanSign)||(LA72_0>=LessThanSignGreaterThanSign && LA72_0<=LessThanSignVerticalLine)||(LA72_0>=GreaterThanSignAmpersand && LA72_0<=GreaterThanSignLeftParenthesis)||(LA72_0>=GreaterThanSignGreaterThanSign && LA72_0<=GreaterThanSignVerticalLine)||LA72_0==QuotationMark||LA72_0==Apostrophe||LA72_0==LessThanSign||LA72_0==GreaterThanSign||LA72_0==RULE_I_NUMBER||(LA72_0>=RULE_NAME && LA72_0<=RULE_WORD_PART)||LA72_0==RULE_VARIABLE||LA72_0==RULE_CS_START) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalMyBashParser.g:5539:3: rule__SimpleCommand__Alternatives_1_1
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__SimpleCommand__Alternatives_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__Group_1__1__Impl"


    // $ANTLR start "rule__GroupCommand__Group__0"
    // InternalMyBashParser.g:5548:1: rule__GroupCommand__Group__0 : rule__GroupCommand__Group__0__Impl rule__GroupCommand__Group__1 ;
    public final void rule__GroupCommand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5552:1: ( rule__GroupCommand__Group__0__Impl rule__GroupCommand__Group__1 )
            // InternalMyBashParser.g:5553:2: rule__GroupCommand__Group__0__Impl rule__GroupCommand__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__GroupCommand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupCommand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__0"


    // $ANTLR start "rule__GroupCommand__Group__0__Impl"
    // InternalMyBashParser.g:5560:1: rule__GroupCommand__Group__0__Impl : ( () ) ;
    public final void rule__GroupCommand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5564:1: ( ( () ) )
            // InternalMyBashParser.g:5565:1: ( () )
            {
            // InternalMyBashParser.g:5565:1: ( () )
            // InternalMyBashParser.g:5566:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupCommandAccess().getGroupCommandAction_0()); 
            }
            // InternalMyBashParser.g:5567:2: ()
            // InternalMyBashParser.g:5567:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupCommandAccess().getGroupCommandAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__0__Impl"


    // $ANTLR start "rule__GroupCommand__Group__1"
    // InternalMyBashParser.g:5575:1: rule__GroupCommand__Group__1 : rule__GroupCommand__Group__1__Impl rule__GroupCommand__Group__2 ;
    public final void rule__GroupCommand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5579:1: ( rule__GroupCommand__Group__1__Impl rule__GroupCommand__Group__2 )
            // InternalMyBashParser.g:5580:2: rule__GroupCommand__Group__1__Impl rule__GroupCommand__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__GroupCommand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupCommand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__1"


    // $ANTLR start "rule__GroupCommand__Group__1__Impl"
    // InternalMyBashParser.g:5587:1: rule__GroupCommand__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__GroupCommand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5591:1: ( ( LeftCurlyBracket ) )
            // InternalMyBashParser.g:5592:1: ( LeftCurlyBracket )
            {
            // InternalMyBashParser.g:5592:1: ( LeftCurlyBracket )
            // InternalMyBashParser.g:5593:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupCommandAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupCommandAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__1__Impl"


    // $ANTLR start "rule__GroupCommand__Group__2"
    // InternalMyBashParser.g:5602:1: rule__GroupCommand__Group__2 : rule__GroupCommand__Group__2__Impl rule__GroupCommand__Group__3 ;
    public final void rule__GroupCommand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5606:1: ( rule__GroupCommand__Group__2__Impl rule__GroupCommand__Group__3 )
            // InternalMyBashParser.g:5607:2: rule__GroupCommand__Group__2__Impl rule__GroupCommand__Group__3
            {
            pushFollow(FOLLOW_28);
            rule__GroupCommand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupCommand__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__2"


    // $ANTLR start "rule__GroupCommand__Group__2__Impl"
    // InternalMyBashParser.g:5614:1: rule__GroupCommand__Group__2__Impl : ( ( rule__GroupCommand__BodyAssignment_2 ) ) ;
    public final void rule__GroupCommand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5618:1: ( ( ( rule__GroupCommand__BodyAssignment_2 ) ) )
            // InternalMyBashParser.g:5619:1: ( ( rule__GroupCommand__BodyAssignment_2 ) )
            {
            // InternalMyBashParser.g:5619:1: ( ( rule__GroupCommand__BodyAssignment_2 ) )
            // InternalMyBashParser.g:5620:2: ( rule__GroupCommand__BodyAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupCommandAccess().getBodyAssignment_2()); 
            }
            // InternalMyBashParser.g:5621:2: ( rule__GroupCommand__BodyAssignment_2 )
            // InternalMyBashParser.g:5621:3: rule__GroupCommand__BodyAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__GroupCommand__BodyAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupCommandAccess().getBodyAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__2__Impl"


    // $ANTLR start "rule__GroupCommand__Group__3"
    // InternalMyBashParser.g:5629:1: rule__GroupCommand__Group__3 : rule__GroupCommand__Group__3__Impl ;
    public final void rule__GroupCommand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5633:1: ( rule__GroupCommand__Group__3__Impl )
            // InternalMyBashParser.g:5634:2: rule__GroupCommand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupCommand__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__3"


    // $ANTLR start "rule__GroupCommand__Group__3__Impl"
    // InternalMyBashParser.g:5640:1: rule__GroupCommand__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__GroupCommand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5644:1: ( ( RightCurlyBracket ) )
            // InternalMyBashParser.g:5645:1: ( RightCurlyBracket )
            {
            // InternalMyBashParser.g:5645:1: ( RightCurlyBracket )
            // InternalMyBashParser.g:5646:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupCommandAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupCommandAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__Group__3__Impl"


    // $ANTLR start "rule__CondCommand__Group__0"
    // InternalMyBashParser.g:5656:1: rule__CondCommand__Group__0 : rule__CondCommand__Group__0__Impl rule__CondCommand__Group__1 ;
    public final void rule__CondCommand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5660:1: ( rule__CondCommand__Group__0__Impl rule__CondCommand__Group__1 )
            // InternalMyBashParser.g:5661:2: rule__CondCommand__Group__0__Impl rule__CondCommand__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__CondCommand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondCommand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondCommand__Group__0"


    // $ANTLR start "rule__CondCommand__Group__0__Impl"
    // InternalMyBashParser.g:5668:1: rule__CondCommand__Group__0__Impl : ( LeftSquareBracketLeftSquareBracket ) ;
    public final void rule__CondCommand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5672:1: ( ( LeftSquareBracketLeftSquareBracket ) )
            // InternalMyBashParser.g:5673:1: ( LeftSquareBracketLeftSquareBracket )
            {
            // InternalMyBashParser.g:5673:1: ( LeftSquareBracketLeftSquareBracket )
            // InternalMyBashParser.g:5674:2: LeftSquareBracketLeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondCommandAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracketLeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondCommandAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondCommand__Group__0__Impl"


    // $ANTLR start "rule__CondCommand__Group__1"
    // InternalMyBashParser.g:5683:1: rule__CondCommand__Group__1 : rule__CondCommand__Group__1__Impl rule__CondCommand__Group__2 ;
    public final void rule__CondCommand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5687:1: ( rule__CondCommand__Group__1__Impl rule__CondCommand__Group__2 )
            // InternalMyBashParser.g:5688:2: rule__CondCommand__Group__1__Impl rule__CondCommand__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__CondCommand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondCommand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondCommand__Group__1"


    // $ANTLR start "rule__CondCommand__Group__1__Impl"
    // InternalMyBashParser.g:5695:1: rule__CondCommand__Group__1__Impl : ( ( rule__CondCommand__ExpressionAssignment_1 ) ) ;
    public final void rule__CondCommand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5699:1: ( ( ( rule__CondCommand__ExpressionAssignment_1 ) ) )
            // InternalMyBashParser.g:5700:1: ( ( rule__CondCommand__ExpressionAssignment_1 ) )
            {
            // InternalMyBashParser.g:5700:1: ( ( rule__CondCommand__ExpressionAssignment_1 ) )
            // InternalMyBashParser.g:5701:2: ( rule__CondCommand__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondCommandAccess().getExpressionAssignment_1()); 
            }
            // InternalMyBashParser.g:5702:2: ( rule__CondCommand__ExpressionAssignment_1 )
            // InternalMyBashParser.g:5702:3: rule__CondCommand__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CondCommand__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondCommandAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondCommand__Group__1__Impl"


    // $ANTLR start "rule__CondCommand__Group__2"
    // InternalMyBashParser.g:5710:1: rule__CondCommand__Group__2 : rule__CondCommand__Group__2__Impl ;
    public final void rule__CondCommand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5714:1: ( rule__CondCommand__Group__2__Impl )
            // InternalMyBashParser.g:5715:2: rule__CondCommand__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondCommand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondCommand__Group__2"


    // $ANTLR start "rule__CondCommand__Group__2__Impl"
    // InternalMyBashParser.g:5721:1: rule__CondCommand__Group__2__Impl : ( RightSquareBracketRightSquareBracket ) ;
    public final void rule__CondCommand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5725:1: ( ( RightSquareBracketRightSquareBracket ) )
            // InternalMyBashParser.g:5726:1: ( RightSquareBracketRightSquareBracket )
            {
            // InternalMyBashParser.g:5726:1: ( RightSquareBracketRightSquareBracket )
            // InternalMyBashParser.g:5727:2: RightSquareBracketRightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondCommandAccess().getRightSquareBracketRightSquareBracketKeyword_2()); 
            }
            match(input,RightSquareBracketRightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondCommandAccess().getRightSquareBracketRightSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondCommand__Group__2__Impl"


    // $ANTLR start "rule__ArithmeticCommand__Group__0"
    // InternalMyBashParser.g:5737:1: rule__ArithmeticCommand__Group__0 : rule__ArithmeticCommand__Group__0__Impl rule__ArithmeticCommand__Group__1 ;
    public final void rule__ArithmeticCommand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5741:1: ( rule__ArithmeticCommand__Group__0__Impl rule__ArithmeticCommand__Group__1 )
            // InternalMyBashParser.g:5742:2: rule__ArithmeticCommand__Group__0__Impl rule__ArithmeticCommand__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__ArithmeticCommand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArithmeticCommand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticCommand__Group__0"


    // $ANTLR start "rule__ArithmeticCommand__Group__0__Impl"
    // InternalMyBashParser.g:5749:1: rule__ArithmeticCommand__Group__0__Impl : ( LeftParenthesisLeftParenthesis ) ;
    public final void rule__ArithmeticCommand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5753:1: ( ( LeftParenthesisLeftParenthesis ) )
            // InternalMyBashParser.g:5754:1: ( LeftParenthesisLeftParenthesis )
            {
            // InternalMyBashParser.g:5754:1: ( LeftParenthesisLeftParenthesis )
            // InternalMyBashParser.g:5755:2: LeftParenthesisLeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticCommandAccess().getLeftParenthesisLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesisLeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticCommandAccess().getLeftParenthesisLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticCommand__Group__0__Impl"


    // $ANTLR start "rule__ArithmeticCommand__Group__1"
    // InternalMyBashParser.g:5764:1: rule__ArithmeticCommand__Group__1 : rule__ArithmeticCommand__Group__1__Impl rule__ArithmeticCommand__Group__2 ;
    public final void rule__ArithmeticCommand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5768:1: ( rule__ArithmeticCommand__Group__1__Impl rule__ArithmeticCommand__Group__2 )
            // InternalMyBashParser.g:5769:2: rule__ArithmeticCommand__Group__1__Impl rule__ArithmeticCommand__Group__2
            {
            pushFollow(FOLLOW_32);
            rule__ArithmeticCommand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArithmeticCommand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticCommand__Group__1"


    // $ANTLR start "rule__ArithmeticCommand__Group__1__Impl"
    // InternalMyBashParser.g:5776:1: rule__ArithmeticCommand__Group__1__Impl : ( ( rule__ArithmeticCommand__ExpressionAssignment_1 ) ) ;
    public final void rule__ArithmeticCommand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5780:1: ( ( ( rule__ArithmeticCommand__ExpressionAssignment_1 ) ) )
            // InternalMyBashParser.g:5781:1: ( ( rule__ArithmeticCommand__ExpressionAssignment_1 ) )
            {
            // InternalMyBashParser.g:5781:1: ( ( rule__ArithmeticCommand__ExpressionAssignment_1 ) )
            // InternalMyBashParser.g:5782:2: ( rule__ArithmeticCommand__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticCommandAccess().getExpressionAssignment_1()); 
            }
            // InternalMyBashParser.g:5783:2: ( rule__ArithmeticCommand__ExpressionAssignment_1 )
            // InternalMyBashParser.g:5783:3: rule__ArithmeticCommand__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticCommand__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticCommandAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticCommand__Group__1__Impl"


    // $ANTLR start "rule__ArithmeticCommand__Group__2"
    // InternalMyBashParser.g:5791:1: rule__ArithmeticCommand__Group__2 : rule__ArithmeticCommand__Group__2__Impl ;
    public final void rule__ArithmeticCommand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5795:1: ( rule__ArithmeticCommand__Group__2__Impl )
            // InternalMyBashParser.g:5796:2: rule__ArithmeticCommand__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticCommand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticCommand__Group__2"


    // $ANTLR start "rule__ArithmeticCommand__Group__2__Impl"
    // InternalMyBashParser.g:5802:1: rule__ArithmeticCommand__Group__2__Impl : ( RightParenthesisRightParenthesis ) ;
    public final void rule__ArithmeticCommand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5806:1: ( ( RightParenthesisRightParenthesis ) )
            // InternalMyBashParser.g:5807:1: ( RightParenthesisRightParenthesis )
            {
            // InternalMyBashParser.g:5807:1: ( RightParenthesisRightParenthesis )
            // InternalMyBashParser.g:5808:2: RightParenthesisRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticCommandAccess().getRightParenthesisRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesisRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticCommandAccess().getRightParenthesisRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticCommand__Group__2__Impl"


    // $ANTLR start "rule__Subshell__Group__0"
    // InternalMyBashParser.g:5818:1: rule__Subshell__Group__0 : rule__Subshell__Group__0__Impl rule__Subshell__Group__1 ;
    public final void rule__Subshell__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5822:1: ( rule__Subshell__Group__0__Impl rule__Subshell__Group__1 )
            // InternalMyBashParser.g:5823:2: rule__Subshell__Group__0__Impl rule__Subshell__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Subshell__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Subshell__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subshell__Group__0"


    // $ANTLR start "rule__Subshell__Group__0__Impl"
    // InternalMyBashParser.g:5830:1: rule__Subshell__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Subshell__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5834:1: ( ( LeftParenthesis ) )
            // InternalMyBashParser.g:5835:1: ( LeftParenthesis )
            {
            // InternalMyBashParser.g:5835:1: ( LeftParenthesis )
            // InternalMyBashParser.g:5836:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubshellAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubshellAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subshell__Group__0__Impl"


    // $ANTLR start "rule__Subshell__Group__1"
    // InternalMyBashParser.g:5845:1: rule__Subshell__Group__1 : rule__Subshell__Group__1__Impl rule__Subshell__Group__2 ;
    public final void rule__Subshell__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5849:1: ( rule__Subshell__Group__1__Impl rule__Subshell__Group__2 )
            // InternalMyBashParser.g:5850:2: rule__Subshell__Group__1__Impl rule__Subshell__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__Subshell__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Subshell__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subshell__Group__1"


    // $ANTLR start "rule__Subshell__Group__1__Impl"
    // InternalMyBashParser.g:5857:1: rule__Subshell__Group__1__Impl : ( ( rule__Subshell__BodyAssignment_1 ) ) ;
    public final void rule__Subshell__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5861:1: ( ( ( rule__Subshell__BodyAssignment_1 ) ) )
            // InternalMyBashParser.g:5862:1: ( ( rule__Subshell__BodyAssignment_1 ) )
            {
            // InternalMyBashParser.g:5862:1: ( ( rule__Subshell__BodyAssignment_1 ) )
            // InternalMyBashParser.g:5863:2: ( rule__Subshell__BodyAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubshellAccess().getBodyAssignment_1()); 
            }
            // InternalMyBashParser.g:5864:2: ( rule__Subshell__BodyAssignment_1 )
            // InternalMyBashParser.g:5864:3: rule__Subshell__BodyAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Subshell__BodyAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubshellAccess().getBodyAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subshell__Group__1__Impl"


    // $ANTLR start "rule__Subshell__Group__2"
    // InternalMyBashParser.g:5872:1: rule__Subshell__Group__2 : rule__Subshell__Group__2__Impl ;
    public final void rule__Subshell__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5876:1: ( rule__Subshell__Group__2__Impl )
            // InternalMyBashParser.g:5877:2: rule__Subshell__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Subshell__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subshell__Group__2"


    // $ANTLR start "rule__Subshell__Group__2__Impl"
    // InternalMyBashParser.g:5883:1: rule__Subshell__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__Subshell__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5887:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:5888:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:5888:1: ( RightParenthesis )
            // InternalMyBashParser.g:5889:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubshellAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubshellAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subshell__Group__2__Impl"


    // $ANTLR start "rule__CommandName__Group_0__0"
    // InternalMyBashParser.g:5899:1: rule__CommandName__Group_0__0 : rule__CommandName__Group_0__0__Impl rule__CommandName__Group_0__1 ;
    public final void rule__CommandName__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5903:1: ( rule__CommandName__Group_0__0__Impl rule__CommandName__Group_0__1 )
            // InternalMyBashParser.g:5904:2: rule__CommandName__Group_0__0__Impl rule__CommandName__Group_0__1
            {
            pushFollow(FOLLOW_17);
            rule__CommandName__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CommandName__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandName__Group_0__0"


    // $ANTLR start "rule__CommandName__Group_0__0__Impl"
    // InternalMyBashParser.g:5911:1: rule__CommandName__Group_0__0__Impl : ( () ) ;
    public final void rule__CommandName__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5915:1: ( ( () ) )
            // InternalMyBashParser.g:5916:1: ( () )
            {
            // InternalMyBashParser.g:5916:1: ( () )
            // InternalMyBashParser.g:5917:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandNameAccess().getCommandNameAction_0_0()); 
            }
            // InternalMyBashParser.g:5918:2: ()
            // InternalMyBashParser.g:5918:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandNameAccess().getCommandNameAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandName__Group_0__0__Impl"


    // $ANTLR start "rule__CommandName__Group_0__1"
    // InternalMyBashParser.g:5926:1: rule__CommandName__Group_0__1 : rule__CommandName__Group_0__1__Impl ;
    public final void rule__CommandName__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5930:1: ( rule__CommandName__Group_0__1__Impl )
            // InternalMyBashParser.g:5931:2: rule__CommandName__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CommandName__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandName__Group_0__1"


    // $ANTLR start "rule__CommandName__Group_0__1__Impl"
    // InternalMyBashParser.g:5937:1: rule__CommandName__Group_0__1__Impl : ( ( rule__CommandName__RefAssignment_0_1 ) ) ;
    public final void rule__CommandName__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5941:1: ( ( ( rule__CommandName__RefAssignment_0_1 ) ) )
            // InternalMyBashParser.g:5942:1: ( ( rule__CommandName__RefAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:5942:1: ( ( rule__CommandName__RefAssignment_0_1 ) )
            // InternalMyBashParser.g:5943:2: ( rule__CommandName__RefAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandNameAccess().getRefAssignment_0_1()); 
            }
            // InternalMyBashParser.g:5944:2: ( rule__CommandName__RefAssignment_0_1 )
            // InternalMyBashParser.g:5944:3: rule__CommandName__RefAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__CommandName__RefAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandNameAccess().getRefAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandName__Group_0__1__Impl"


    // $ANTLR start "rule__CaseStatement__Group__0"
    // InternalMyBashParser.g:5953:1: rule__CaseStatement__Group__0 : rule__CaseStatement__Group__0__Impl rule__CaseStatement__Group__1 ;
    public final void rule__CaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5957:1: ( rule__CaseStatement__Group__0__Impl rule__CaseStatement__Group__1 )
            // InternalMyBashParser.g:5958:2: rule__CaseStatement__Group__0__Impl rule__CaseStatement__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__CaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__0"


    // $ANTLR start "rule__CaseStatement__Group__0__Impl"
    // InternalMyBashParser.g:5965:1: rule__CaseStatement__Group__0__Impl : ( () ) ;
    public final void rule__CaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5969:1: ( ( () ) )
            // InternalMyBashParser.g:5970:1: ( () )
            {
            // InternalMyBashParser.g:5970:1: ( () )
            // InternalMyBashParser.g:5971:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getCaseStatementAction_0()); 
            }
            // InternalMyBashParser.g:5972:2: ()
            // InternalMyBashParser.g:5972:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getCaseStatementAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__0__Impl"


    // $ANTLR start "rule__CaseStatement__Group__1"
    // InternalMyBashParser.g:5980:1: rule__CaseStatement__Group__1 : rule__CaseStatement__Group__1__Impl rule__CaseStatement__Group__2 ;
    public final void rule__CaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5984:1: ( rule__CaseStatement__Group__1__Impl rule__CaseStatement__Group__2 )
            // InternalMyBashParser.g:5985:2: rule__CaseStatement__Group__1__Impl rule__CaseStatement__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__CaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__1"


    // $ANTLR start "rule__CaseStatement__Group__1__Impl"
    // InternalMyBashParser.g:5992:1: rule__CaseStatement__Group__1__Impl : ( Case ) ;
    public final void rule__CaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:5996:1: ( ( Case ) )
            // InternalMyBashParser.g:5997:1: ( Case )
            {
            // InternalMyBashParser.g:5997:1: ( Case )
            // InternalMyBashParser.g:5998:2: Case
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getCaseKeyword_1()); 
            }
            match(input,Case,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getCaseKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__1__Impl"


    // $ANTLR start "rule__CaseStatement__Group__2"
    // InternalMyBashParser.g:6007:1: rule__CaseStatement__Group__2 : rule__CaseStatement__Group__2__Impl rule__CaseStatement__Group__3 ;
    public final void rule__CaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6011:1: ( rule__CaseStatement__Group__2__Impl rule__CaseStatement__Group__3 )
            // InternalMyBashParser.g:6012:2: rule__CaseStatement__Group__2__Impl rule__CaseStatement__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__CaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__2"


    // $ANTLR start "rule__CaseStatement__Group__2__Impl"
    // InternalMyBashParser.g:6019:1: rule__CaseStatement__Group__2__Impl : ( ( rule__CaseStatement__VariableAssignment_2 ) ) ;
    public final void rule__CaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6023:1: ( ( ( rule__CaseStatement__VariableAssignment_2 ) ) )
            // InternalMyBashParser.g:6024:1: ( ( rule__CaseStatement__VariableAssignment_2 ) )
            {
            // InternalMyBashParser.g:6024:1: ( ( rule__CaseStatement__VariableAssignment_2 ) )
            // InternalMyBashParser.g:6025:2: ( rule__CaseStatement__VariableAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getVariableAssignment_2()); 
            }
            // InternalMyBashParser.g:6026:2: ( rule__CaseStatement__VariableAssignment_2 )
            // InternalMyBashParser.g:6026:3: rule__CaseStatement__VariableAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__CaseStatement__VariableAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getVariableAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__2__Impl"


    // $ANTLR start "rule__CaseStatement__Group__3"
    // InternalMyBashParser.g:6034:1: rule__CaseStatement__Group__3 : rule__CaseStatement__Group__3__Impl rule__CaseStatement__Group__4 ;
    public final void rule__CaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6038:1: ( rule__CaseStatement__Group__3__Impl rule__CaseStatement__Group__4 )
            // InternalMyBashParser.g:6039:2: rule__CaseStatement__Group__3__Impl rule__CaseStatement__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__CaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__3"


    // $ANTLR start "rule__CaseStatement__Group__3__Impl"
    // InternalMyBashParser.g:6046:1: rule__CaseStatement__Group__3__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__CaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6050:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:6051:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:6051:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:6052:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getMaybeNewLineParserRuleCall_3()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getMaybeNewLineParserRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__3__Impl"


    // $ANTLR start "rule__CaseStatement__Group__4"
    // InternalMyBashParser.g:6061:1: rule__CaseStatement__Group__4 : rule__CaseStatement__Group__4__Impl rule__CaseStatement__Group__5 ;
    public final void rule__CaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6065:1: ( rule__CaseStatement__Group__4__Impl rule__CaseStatement__Group__5 )
            // InternalMyBashParser.g:6066:2: rule__CaseStatement__Group__4__Impl rule__CaseStatement__Group__5
            {
            pushFollow(FOLLOW_5);
            rule__CaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__4"


    // $ANTLR start "rule__CaseStatement__Group__4__Impl"
    // InternalMyBashParser.g:6073:1: rule__CaseStatement__Group__4__Impl : ( In ) ;
    public final void rule__CaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6077:1: ( ( In ) )
            // InternalMyBashParser.g:6078:1: ( In )
            {
            // InternalMyBashParser.g:6078:1: ( In )
            // InternalMyBashParser.g:6079:2: In
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getInKeyword_4()); 
            }
            match(input,In,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getInKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__4__Impl"


    // $ANTLR start "rule__CaseStatement__Group__5"
    // InternalMyBashParser.g:6088:1: rule__CaseStatement__Group__5 : rule__CaseStatement__Group__5__Impl rule__CaseStatement__Group__6 ;
    public final void rule__CaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6092:1: ( rule__CaseStatement__Group__5__Impl rule__CaseStatement__Group__6 )
            // InternalMyBashParser.g:6093:2: rule__CaseStatement__Group__5__Impl rule__CaseStatement__Group__6
            {
            pushFollow(FOLLOW_35);
            rule__CaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__5"


    // $ANTLR start "rule__CaseStatement__Group__5__Impl"
    // InternalMyBashParser.g:6100:1: rule__CaseStatement__Group__5__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__CaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6104:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:6105:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:6105:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:6106:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getMaybeNewLineParserRuleCall_5()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getMaybeNewLineParserRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__5__Impl"


    // $ANTLR start "rule__CaseStatement__Group__6"
    // InternalMyBashParser.g:6115:1: rule__CaseStatement__Group__6 : rule__CaseStatement__Group__6__Impl rule__CaseStatement__Group__7 ;
    public final void rule__CaseStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6119:1: ( rule__CaseStatement__Group__6__Impl rule__CaseStatement__Group__7 )
            // InternalMyBashParser.g:6120:2: rule__CaseStatement__Group__6__Impl rule__CaseStatement__Group__7
            {
            pushFollow(FOLLOW_35);
            rule__CaseStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__6"


    // $ANTLR start "rule__CaseStatement__Group__6__Impl"
    // InternalMyBashParser.g:6127:1: rule__CaseStatement__Group__6__Impl : ( ( rule__CaseStatement__Group_6__0 )? ) ;
    public final void rule__CaseStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6131:1: ( ( ( rule__CaseStatement__Group_6__0 )? ) )
            // InternalMyBashParser.g:6132:1: ( ( rule__CaseStatement__Group_6__0 )? )
            {
            // InternalMyBashParser.g:6132:1: ( ( rule__CaseStatement__Group_6__0 )? )
            // InternalMyBashParser.g:6133:2: ( rule__CaseStatement__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getGroup_6()); 
            }
            // InternalMyBashParser.g:6134:2: ( rule__CaseStatement__Group_6__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==DollarSignLeftParenthesisLeftParenthesis||LA73_0==DollarSignLeftCurlyBracket||LA73_0==LessThanSignLeftParenthesis||LA73_0==GreaterThanSignLeftParenthesis||LA73_0==QuotationMark||(LA73_0>=Apostrophe && LA73_0<=LeftParenthesis)||(LA73_0>=RULE_S_WORD_PART && LA73_0<=RULE_WORD_PART)||LA73_0==RULE_VARIABLE||LA73_0==RULE_CS_START) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalMyBashParser.g:6134:3: rule__CaseStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CaseStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__6__Impl"


    // $ANTLR start "rule__CaseStatement__Group__7"
    // InternalMyBashParser.g:6142:1: rule__CaseStatement__Group__7 : rule__CaseStatement__Group__7__Impl ;
    public final void rule__CaseStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6146:1: ( rule__CaseStatement__Group__7__Impl )
            // InternalMyBashParser.g:6147:2: rule__CaseStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__7"


    // $ANTLR start "rule__CaseStatement__Group__7__Impl"
    // InternalMyBashParser.g:6153:1: rule__CaseStatement__Group__7__Impl : ( Esac ) ;
    public final void rule__CaseStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6157:1: ( ( Esac ) )
            // InternalMyBashParser.g:6158:1: ( Esac )
            {
            // InternalMyBashParser.g:6158:1: ( Esac )
            // InternalMyBashParser.g:6159:2: Esac
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getEsacKeyword_7()); 
            }
            match(input,Esac,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getEsacKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group__7__Impl"


    // $ANTLR start "rule__CaseStatement__Group_6__0"
    // InternalMyBashParser.g:6169:1: rule__CaseStatement__Group_6__0 : rule__CaseStatement__Group_6__0__Impl rule__CaseStatement__Group_6__1 ;
    public final void rule__CaseStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6173:1: ( rule__CaseStatement__Group_6__0__Impl rule__CaseStatement__Group_6__1 )
            // InternalMyBashParser.g:6174:2: rule__CaseStatement__Group_6__0__Impl rule__CaseStatement__Group_6__1
            {
            pushFollow(FOLLOW_36);
            rule__CaseStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6__0"


    // $ANTLR start "rule__CaseStatement__Group_6__0__Impl"
    // InternalMyBashParser.g:6181:1: rule__CaseStatement__Group_6__0__Impl : ( ( rule__CaseStatement__PatternsAssignment_6_0 ) ) ;
    public final void rule__CaseStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6185:1: ( ( ( rule__CaseStatement__PatternsAssignment_6_0 ) ) )
            // InternalMyBashParser.g:6186:1: ( ( rule__CaseStatement__PatternsAssignment_6_0 ) )
            {
            // InternalMyBashParser.g:6186:1: ( ( rule__CaseStatement__PatternsAssignment_6_0 ) )
            // InternalMyBashParser.g:6187:2: ( rule__CaseStatement__PatternsAssignment_6_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getPatternsAssignment_6_0()); 
            }
            // InternalMyBashParser.g:6188:2: ( rule__CaseStatement__PatternsAssignment_6_0 )
            // InternalMyBashParser.g:6188:3: rule__CaseStatement__PatternsAssignment_6_0
            {
            pushFollow(FOLLOW_2);
            rule__CaseStatement__PatternsAssignment_6_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getPatternsAssignment_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6__0__Impl"


    // $ANTLR start "rule__CaseStatement__Group_6__1"
    // InternalMyBashParser.g:6196:1: rule__CaseStatement__Group_6__1 : rule__CaseStatement__Group_6__1__Impl rule__CaseStatement__Group_6__2 ;
    public final void rule__CaseStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6200:1: ( rule__CaseStatement__Group_6__1__Impl rule__CaseStatement__Group_6__2 )
            // InternalMyBashParser.g:6201:2: rule__CaseStatement__Group_6__1__Impl rule__CaseStatement__Group_6__2
            {
            pushFollow(FOLLOW_36);
            rule__CaseStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6__1"


    // $ANTLR start "rule__CaseStatement__Group_6__1__Impl"
    // InternalMyBashParser.g:6208:1: rule__CaseStatement__Group_6__1__Impl : ( ( rule__CaseStatement__PatternsAssignment_6_1 )* ) ;
    public final void rule__CaseStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6212:1: ( ( ( rule__CaseStatement__PatternsAssignment_6_1 )* ) )
            // InternalMyBashParser.g:6213:1: ( ( rule__CaseStatement__PatternsAssignment_6_1 )* )
            {
            // InternalMyBashParser.g:6213:1: ( ( rule__CaseStatement__PatternsAssignment_6_1 )* )
            // InternalMyBashParser.g:6214:2: ( rule__CaseStatement__PatternsAssignment_6_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getPatternsAssignment_6_1()); 
            }
            // InternalMyBashParser.g:6215:2: ( rule__CaseStatement__PatternsAssignment_6_1 )*
            loop74:
            do {
                int alt74=2;
                alt74 = dfa74.predict(input);
                switch (alt74) {
            	case 1 :
            	    // InternalMyBashParser.g:6215:3: rule__CaseStatement__PatternsAssignment_6_1
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__CaseStatement__PatternsAssignment_6_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getPatternsAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6__1__Impl"


    // $ANTLR start "rule__CaseStatement__Group_6__2"
    // InternalMyBashParser.g:6223:1: rule__CaseStatement__Group_6__2 : rule__CaseStatement__Group_6__2__Impl ;
    public final void rule__CaseStatement__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6227:1: ( rule__CaseStatement__Group_6__2__Impl )
            // InternalMyBashParser.g:6228:2: rule__CaseStatement__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6__2"


    // $ANTLR start "rule__CaseStatement__Group_6__2__Impl"
    // InternalMyBashParser.g:6234:1: rule__CaseStatement__Group_6__2__Impl : ( ( rule__CaseStatement__Group_6_2__0 )? ) ;
    public final void rule__CaseStatement__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6238:1: ( ( ( rule__CaseStatement__Group_6_2__0 )? ) )
            // InternalMyBashParser.g:6239:1: ( ( rule__CaseStatement__Group_6_2__0 )? )
            {
            // InternalMyBashParser.g:6239:1: ( ( rule__CaseStatement__Group_6_2__0 )? )
            // InternalMyBashParser.g:6240:2: ( rule__CaseStatement__Group_6_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getGroup_6_2()); 
            }
            // InternalMyBashParser.g:6241:2: ( rule__CaseStatement__Group_6_2__0 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==SemicolonSemicolonAmpersand||(LA75_0>=SemicolonAmpersand && LA75_0<=SemicolonSemicolon)) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalMyBashParser.g:6241:3: rule__CaseStatement__Group_6_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CaseStatement__Group_6_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getGroup_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6__2__Impl"


    // $ANTLR start "rule__CaseStatement__Group_6_2__0"
    // InternalMyBashParser.g:6250:1: rule__CaseStatement__Group_6_2__0 : rule__CaseStatement__Group_6_2__0__Impl rule__CaseStatement__Group_6_2__1 ;
    public final void rule__CaseStatement__Group_6_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6254:1: ( rule__CaseStatement__Group_6_2__0__Impl rule__CaseStatement__Group_6_2__1 )
            // InternalMyBashParser.g:6255:2: rule__CaseStatement__Group_6_2__0__Impl rule__CaseStatement__Group_6_2__1
            {
            pushFollow(FOLLOW_5);
            rule__CaseStatement__Group_6_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group_6_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6_2__0"


    // $ANTLR start "rule__CaseStatement__Group_6_2__0__Impl"
    // InternalMyBashParser.g:6262:1: rule__CaseStatement__Group_6_2__0__Impl : ( ( rule__CaseStatement__Alternatives_6_2_0 ) ) ;
    public final void rule__CaseStatement__Group_6_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6266:1: ( ( ( rule__CaseStatement__Alternatives_6_2_0 ) ) )
            // InternalMyBashParser.g:6267:1: ( ( rule__CaseStatement__Alternatives_6_2_0 ) )
            {
            // InternalMyBashParser.g:6267:1: ( ( rule__CaseStatement__Alternatives_6_2_0 ) )
            // InternalMyBashParser.g:6268:2: ( rule__CaseStatement__Alternatives_6_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getAlternatives_6_2_0()); 
            }
            // InternalMyBashParser.g:6269:2: ( rule__CaseStatement__Alternatives_6_2_0 )
            // InternalMyBashParser.g:6269:3: rule__CaseStatement__Alternatives_6_2_0
            {
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Alternatives_6_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getAlternatives_6_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6_2__0__Impl"


    // $ANTLR start "rule__CaseStatement__Group_6_2__1"
    // InternalMyBashParser.g:6277:1: rule__CaseStatement__Group_6_2__1 : rule__CaseStatement__Group_6_2__1__Impl ;
    public final void rule__CaseStatement__Group_6_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6281:1: ( rule__CaseStatement__Group_6_2__1__Impl )
            // InternalMyBashParser.g:6282:2: rule__CaseStatement__Group_6_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CaseStatement__Group_6_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6_2__1"


    // $ANTLR start "rule__CaseStatement__Group_6_2__1__Impl"
    // InternalMyBashParser.g:6288:1: rule__CaseStatement__Group_6_2__1__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__CaseStatement__Group_6_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6292:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:6293:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:6293:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:6294:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getMaybeNewLineParserRuleCall_6_2_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getMaybeNewLineParserRuleCall_6_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__Group_6_2__1__Impl"


    // $ANTLR start "rule__CasePattern__Group__0"
    // InternalMyBashParser.g:6304:1: rule__CasePattern__Group__0 : rule__CasePattern__Group__0__Impl rule__CasePattern__Group__1 ;
    public final void rule__CasePattern__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6308:1: ( rule__CasePattern__Group__0__Impl rule__CasePattern__Group__1 )
            // InternalMyBashParser.g:6309:2: rule__CasePattern__Group__0__Impl rule__CasePattern__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__CasePattern__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePattern__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__0"


    // $ANTLR start "rule__CasePattern__Group__0__Impl"
    // InternalMyBashParser.g:6316:1: rule__CasePattern__Group__0__Impl : ( ( LeftParenthesis )? ) ;
    public final void rule__CasePattern__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6320:1: ( ( ( LeftParenthesis )? ) )
            // InternalMyBashParser.g:6321:1: ( ( LeftParenthesis )? )
            {
            // InternalMyBashParser.g:6321:1: ( ( LeftParenthesis )? )
            // InternalMyBashParser.g:6322:2: ( LeftParenthesis )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternAccess().getLeftParenthesisKeyword_0()); 
            }
            // InternalMyBashParser.g:6323:2: ( LeftParenthesis )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==LeftParenthesis) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalMyBashParser.g:6323:3: LeftParenthesis
                    {
                    match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__0__Impl"


    // $ANTLR start "rule__CasePattern__Group__1"
    // InternalMyBashParser.g:6331:1: rule__CasePattern__Group__1 : rule__CasePattern__Group__1__Impl rule__CasePattern__Group__2 ;
    public final void rule__CasePattern__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6335:1: ( rule__CasePattern__Group__1__Impl rule__CasePattern__Group__2 )
            // InternalMyBashParser.g:6336:2: rule__CasePattern__Group__1__Impl rule__CasePattern__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__CasePattern__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePattern__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__1"


    // $ANTLR start "rule__CasePattern__Group__1__Impl"
    // InternalMyBashParser.g:6343:1: rule__CasePattern__Group__1__Impl : ( ( rule__CasePattern__ConditionAssignment_1 ) ) ;
    public final void rule__CasePattern__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6347:1: ( ( ( rule__CasePattern__ConditionAssignment_1 ) ) )
            // InternalMyBashParser.g:6348:1: ( ( rule__CasePattern__ConditionAssignment_1 ) )
            {
            // InternalMyBashParser.g:6348:1: ( ( rule__CasePattern__ConditionAssignment_1 ) )
            // InternalMyBashParser.g:6349:2: ( rule__CasePattern__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternAccess().getConditionAssignment_1()); 
            }
            // InternalMyBashParser.g:6350:2: ( rule__CasePattern__ConditionAssignment_1 )
            // InternalMyBashParser.g:6350:3: rule__CasePattern__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CasePattern__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__1__Impl"


    // $ANTLR start "rule__CasePattern__Group__2"
    // InternalMyBashParser.g:6358:1: rule__CasePattern__Group__2 : rule__CasePattern__Group__2__Impl rule__CasePattern__Group__3 ;
    public final void rule__CasePattern__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6362:1: ( rule__CasePattern__Group__2__Impl rule__CasePattern__Group__3 )
            // InternalMyBashParser.g:6363:2: rule__CasePattern__Group__2__Impl rule__CasePattern__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__CasePattern__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePattern__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__2"


    // $ANTLR start "rule__CasePattern__Group__2__Impl"
    // InternalMyBashParser.g:6370:1: rule__CasePattern__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__CasePattern__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6374:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:6375:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:6375:1: ( RightParenthesis )
            // InternalMyBashParser.g:6376:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__2__Impl"


    // $ANTLR start "rule__CasePattern__Group__3"
    // InternalMyBashParser.g:6385:1: rule__CasePattern__Group__3 : rule__CasePattern__Group__3__Impl ;
    public final void rule__CasePattern__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6389:1: ( rule__CasePattern__Group__3__Impl )
            // InternalMyBashParser.g:6390:2: rule__CasePattern__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CasePattern__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__3"


    // $ANTLR start "rule__CasePattern__Group__3__Impl"
    // InternalMyBashParser.g:6396:1: rule__CasePattern__Group__3__Impl : ( ( rule__CasePattern__BodyAssignment_3 ) ) ;
    public final void rule__CasePattern__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6400:1: ( ( ( rule__CasePattern__BodyAssignment_3 ) ) )
            // InternalMyBashParser.g:6401:1: ( ( rule__CasePattern__BodyAssignment_3 ) )
            {
            // InternalMyBashParser.g:6401:1: ( ( rule__CasePattern__BodyAssignment_3 ) )
            // InternalMyBashParser.g:6402:2: ( rule__CasePattern__BodyAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternAccess().getBodyAssignment_3()); 
            }
            // InternalMyBashParser.g:6403:2: ( rule__CasePattern__BodyAssignment_3 )
            // InternalMyBashParser.g:6403:3: rule__CasePattern__BodyAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__CasePattern__BodyAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternAccess().getBodyAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__Group__3__Impl"


    // $ANTLR start "rule__CasePatternContinue__Group__0"
    // InternalMyBashParser.g:6412:1: rule__CasePatternContinue__Group__0 : rule__CasePatternContinue__Group__0__Impl rule__CasePatternContinue__Group__1 ;
    public final void rule__CasePatternContinue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6416:1: ( rule__CasePatternContinue__Group__0__Impl rule__CasePatternContinue__Group__1 )
            // InternalMyBashParser.g:6417:2: rule__CasePatternContinue__Group__0__Impl rule__CasePatternContinue__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__CasePatternContinue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__0"


    // $ANTLR start "rule__CasePatternContinue__Group__0__Impl"
    // InternalMyBashParser.g:6424:1: rule__CasePatternContinue__Group__0__Impl : ( ( rule__CasePatternContinue__Group_0__0 ) ) ;
    public final void rule__CasePatternContinue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6428:1: ( ( ( rule__CasePatternContinue__Group_0__0 ) ) )
            // InternalMyBashParser.g:6429:1: ( ( rule__CasePatternContinue__Group_0__0 ) )
            {
            // InternalMyBashParser.g:6429:1: ( ( rule__CasePatternContinue__Group_0__0 ) )
            // InternalMyBashParser.g:6430:2: ( rule__CasePatternContinue__Group_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getGroup_0()); 
            }
            // InternalMyBashParser.g:6431:2: ( rule__CasePatternContinue__Group_0__0 )
            // InternalMyBashParser.g:6431:3: rule__CasePatternContinue__Group_0__0
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__0__Impl"


    // $ANTLR start "rule__CasePatternContinue__Group__1"
    // InternalMyBashParser.g:6439:1: rule__CasePatternContinue__Group__1 : rule__CasePatternContinue__Group__1__Impl rule__CasePatternContinue__Group__2 ;
    public final void rule__CasePatternContinue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6443:1: ( rule__CasePatternContinue__Group__1__Impl rule__CasePatternContinue__Group__2 )
            // InternalMyBashParser.g:6444:2: rule__CasePatternContinue__Group__1__Impl rule__CasePatternContinue__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__CasePatternContinue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__1"


    // $ANTLR start "rule__CasePatternContinue__Group__1__Impl"
    // InternalMyBashParser.g:6451:1: rule__CasePatternContinue__Group__1__Impl : ( ( LeftParenthesis )? ) ;
    public final void rule__CasePatternContinue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6455:1: ( ( ( LeftParenthesis )? ) )
            // InternalMyBashParser.g:6456:1: ( ( LeftParenthesis )? )
            {
            // InternalMyBashParser.g:6456:1: ( ( LeftParenthesis )? )
            // InternalMyBashParser.g:6457:2: ( LeftParenthesis )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getLeftParenthesisKeyword_1()); 
            }
            // InternalMyBashParser.g:6458:2: ( LeftParenthesis )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==LeftParenthesis) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalMyBashParser.g:6458:3: LeftParenthesis
                    {
                    match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__1__Impl"


    // $ANTLR start "rule__CasePatternContinue__Group__2"
    // InternalMyBashParser.g:6466:1: rule__CasePatternContinue__Group__2 : rule__CasePatternContinue__Group__2__Impl rule__CasePatternContinue__Group__3 ;
    public final void rule__CasePatternContinue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6470:1: ( rule__CasePatternContinue__Group__2__Impl rule__CasePatternContinue__Group__3 )
            // InternalMyBashParser.g:6471:2: rule__CasePatternContinue__Group__2__Impl rule__CasePatternContinue__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__CasePatternContinue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__2"


    // $ANTLR start "rule__CasePatternContinue__Group__2__Impl"
    // InternalMyBashParser.g:6478:1: rule__CasePatternContinue__Group__2__Impl : ( ( rule__CasePatternContinue__ConditionAssignment_2 ) ) ;
    public final void rule__CasePatternContinue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6482:1: ( ( ( rule__CasePatternContinue__ConditionAssignment_2 ) ) )
            // InternalMyBashParser.g:6483:1: ( ( rule__CasePatternContinue__ConditionAssignment_2 ) )
            {
            // InternalMyBashParser.g:6483:1: ( ( rule__CasePatternContinue__ConditionAssignment_2 ) )
            // InternalMyBashParser.g:6484:2: ( rule__CasePatternContinue__ConditionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getConditionAssignment_2()); 
            }
            // InternalMyBashParser.g:6485:2: ( rule__CasePatternContinue__ConditionAssignment_2 )
            // InternalMyBashParser.g:6485:3: rule__CasePatternContinue__ConditionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__ConditionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getConditionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__2__Impl"


    // $ANTLR start "rule__CasePatternContinue__Group__3"
    // InternalMyBashParser.g:6493:1: rule__CasePatternContinue__Group__3 : rule__CasePatternContinue__Group__3__Impl rule__CasePatternContinue__Group__4 ;
    public final void rule__CasePatternContinue__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6497:1: ( rule__CasePatternContinue__Group__3__Impl rule__CasePatternContinue__Group__4 )
            // InternalMyBashParser.g:6498:2: rule__CasePatternContinue__Group__3__Impl rule__CasePatternContinue__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__CasePatternContinue__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__3"


    // $ANTLR start "rule__CasePatternContinue__Group__3__Impl"
    // InternalMyBashParser.g:6505:1: rule__CasePatternContinue__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__CasePatternContinue__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6509:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:6510:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:6510:1: ( RightParenthesis )
            // InternalMyBashParser.g:6511:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__3__Impl"


    // $ANTLR start "rule__CasePatternContinue__Group__4"
    // InternalMyBashParser.g:6520:1: rule__CasePatternContinue__Group__4 : rule__CasePatternContinue__Group__4__Impl ;
    public final void rule__CasePatternContinue__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6524:1: ( rule__CasePatternContinue__Group__4__Impl )
            // InternalMyBashParser.g:6525:2: rule__CasePatternContinue__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__4"


    // $ANTLR start "rule__CasePatternContinue__Group__4__Impl"
    // InternalMyBashParser.g:6531:1: rule__CasePatternContinue__Group__4__Impl : ( ( rule__CasePatternContinue__BodyAssignment_4 ) ) ;
    public final void rule__CasePatternContinue__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6535:1: ( ( ( rule__CasePatternContinue__BodyAssignment_4 ) ) )
            // InternalMyBashParser.g:6536:1: ( ( rule__CasePatternContinue__BodyAssignment_4 ) )
            {
            // InternalMyBashParser.g:6536:1: ( ( rule__CasePatternContinue__BodyAssignment_4 ) )
            // InternalMyBashParser.g:6537:2: ( rule__CasePatternContinue__BodyAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getBodyAssignment_4()); 
            }
            // InternalMyBashParser.g:6538:2: ( rule__CasePatternContinue__BodyAssignment_4 )
            // InternalMyBashParser.g:6538:3: rule__CasePatternContinue__BodyAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__BodyAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getBodyAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group__4__Impl"


    // $ANTLR start "rule__CasePatternContinue__Group_0__0"
    // InternalMyBashParser.g:6547:1: rule__CasePatternContinue__Group_0__0 : rule__CasePatternContinue__Group_0__0__Impl rule__CasePatternContinue__Group_0__1 ;
    public final void rule__CasePatternContinue__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6551:1: ( rule__CasePatternContinue__Group_0__0__Impl rule__CasePatternContinue__Group_0__1 )
            // InternalMyBashParser.g:6552:2: rule__CasePatternContinue__Group_0__0__Impl rule__CasePatternContinue__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__CasePatternContinue__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group_0__0"


    // $ANTLR start "rule__CasePatternContinue__Group_0__0__Impl"
    // InternalMyBashParser.g:6559:1: rule__CasePatternContinue__Group_0__0__Impl : ( ( rule__CasePatternContinue__FollowAssignment_0_0 ) ) ;
    public final void rule__CasePatternContinue__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6563:1: ( ( ( rule__CasePatternContinue__FollowAssignment_0_0 ) ) )
            // InternalMyBashParser.g:6564:1: ( ( rule__CasePatternContinue__FollowAssignment_0_0 ) )
            {
            // InternalMyBashParser.g:6564:1: ( ( rule__CasePatternContinue__FollowAssignment_0_0 ) )
            // InternalMyBashParser.g:6565:2: ( rule__CasePatternContinue__FollowAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getFollowAssignment_0_0()); 
            }
            // InternalMyBashParser.g:6566:2: ( rule__CasePatternContinue__FollowAssignment_0_0 )
            // InternalMyBashParser.g:6566:3: rule__CasePatternContinue__FollowAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__FollowAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getFollowAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group_0__0__Impl"


    // $ANTLR start "rule__CasePatternContinue__Group_0__1"
    // InternalMyBashParser.g:6574:1: rule__CasePatternContinue__Group_0__1 : rule__CasePatternContinue__Group_0__1__Impl ;
    public final void rule__CasePatternContinue__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6578:1: ( rule__CasePatternContinue__Group_0__1__Impl )
            // InternalMyBashParser.g:6579:2: rule__CasePatternContinue__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group_0__1"


    // $ANTLR start "rule__CasePatternContinue__Group_0__1__Impl"
    // InternalMyBashParser.g:6585:1: rule__CasePatternContinue__Group_0__1__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__CasePatternContinue__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6589:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:6590:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:6590:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:6591:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getMaybeNewLineParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getMaybeNewLineParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__Group_0__1__Impl"


    // $ANTLR start "rule__Pattern__Group__0"
    // InternalMyBashParser.g:6601:1: rule__Pattern__Group__0 : rule__Pattern__Group__0__Impl rule__Pattern__Group__1 ;
    public final void rule__Pattern__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6605:1: ( rule__Pattern__Group__0__Impl rule__Pattern__Group__1 )
            // InternalMyBashParser.g:6606:2: rule__Pattern__Group__0__Impl rule__Pattern__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__Pattern__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group__0"


    // $ANTLR start "rule__Pattern__Group__0__Impl"
    // InternalMyBashParser.g:6613:1: rule__Pattern__Group__0__Impl : ( ( rule__Pattern__PartsAssignment_0 ) ) ;
    public final void rule__Pattern__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6617:1: ( ( ( rule__Pattern__PartsAssignment_0 ) ) )
            // InternalMyBashParser.g:6618:1: ( ( rule__Pattern__PartsAssignment_0 ) )
            {
            // InternalMyBashParser.g:6618:1: ( ( rule__Pattern__PartsAssignment_0 ) )
            // InternalMyBashParser.g:6619:2: ( rule__Pattern__PartsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPartsAssignment_0()); 
            }
            // InternalMyBashParser.g:6620:2: ( rule__Pattern__PartsAssignment_0 )
            // InternalMyBashParser.g:6620:3: rule__Pattern__PartsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__PartsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPartsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group__0__Impl"


    // $ANTLR start "rule__Pattern__Group__1"
    // InternalMyBashParser.g:6628:1: rule__Pattern__Group__1 : rule__Pattern__Group__1__Impl ;
    public final void rule__Pattern__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6632:1: ( rule__Pattern__Group__1__Impl )
            // InternalMyBashParser.g:6633:2: rule__Pattern__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group__1"


    // $ANTLR start "rule__Pattern__Group__1__Impl"
    // InternalMyBashParser.g:6639:1: rule__Pattern__Group__1__Impl : ( ( rule__Pattern__Group_1__0 )* ) ;
    public final void rule__Pattern__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6643:1: ( ( ( rule__Pattern__Group_1__0 )* ) )
            // InternalMyBashParser.g:6644:1: ( ( rule__Pattern__Group_1__0 )* )
            {
            // InternalMyBashParser.g:6644:1: ( ( rule__Pattern__Group_1__0 )* )
            // InternalMyBashParser.g:6645:2: ( rule__Pattern__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:6646:2: ( rule__Pattern__Group_1__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==VerticalLine) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalMyBashParser.g:6646:3: rule__Pattern__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__Pattern__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group__1__Impl"


    // $ANTLR start "rule__Pattern__Group_1__0"
    // InternalMyBashParser.g:6655:1: rule__Pattern__Group_1__0 : rule__Pattern__Group_1__0__Impl rule__Pattern__Group_1__1 ;
    public final void rule__Pattern__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6659:1: ( rule__Pattern__Group_1__0__Impl rule__Pattern__Group_1__1 )
            // InternalMyBashParser.g:6660:2: rule__Pattern__Group_1__0__Impl rule__Pattern__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__Pattern__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__0"


    // $ANTLR start "rule__Pattern__Group_1__0__Impl"
    // InternalMyBashParser.g:6667:1: rule__Pattern__Group_1__0__Impl : ( VerticalLine ) ;
    public final void rule__Pattern__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6671:1: ( ( VerticalLine ) )
            // InternalMyBashParser.g:6672:1: ( VerticalLine )
            {
            // InternalMyBashParser.g:6672:1: ( VerticalLine )
            // InternalMyBashParser.g:6673:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getVerticalLineKeyword_1_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getVerticalLineKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__0__Impl"


    // $ANTLR start "rule__Pattern__Group_1__1"
    // InternalMyBashParser.g:6682:1: rule__Pattern__Group_1__1 : rule__Pattern__Group_1__1__Impl ;
    public final void rule__Pattern__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6686:1: ( rule__Pattern__Group_1__1__Impl )
            // InternalMyBashParser.g:6687:2: rule__Pattern__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__1"


    // $ANTLR start "rule__Pattern__Group_1__1__Impl"
    // InternalMyBashParser.g:6693:1: rule__Pattern__Group_1__1__Impl : ( ( rule__Pattern__PartsAssignment_1_1 ) ) ;
    public final void rule__Pattern__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6697:1: ( ( ( rule__Pattern__PartsAssignment_1_1 ) ) )
            // InternalMyBashParser.g:6698:1: ( ( rule__Pattern__PartsAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:6698:1: ( ( rule__Pattern__PartsAssignment_1_1 ) )
            // InternalMyBashParser.g:6699:2: ( rule__Pattern__PartsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPartsAssignment_1_1()); 
            }
            // InternalMyBashParser.g:6700:2: ( rule__Pattern__PartsAssignment_1_1 )
            // InternalMyBashParser.g:6700:3: rule__Pattern__PartsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__PartsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPartsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__1__Impl"


    // $ANTLR start "rule__IfStatement__Group__0"
    // InternalMyBashParser.g:6709:1: rule__IfStatement__Group__0 : rule__IfStatement__Group__0__Impl rule__IfStatement__Group__1 ;
    public final void rule__IfStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6713:1: ( rule__IfStatement__Group__0__Impl rule__IfStatement__Group__1 )
            // InternalMyBashParser.g:6714:2: rule__IfStatement__Group__0__Impl rule__IfStatement__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__IfStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__0"


    // $ANTLR start "rule__IfStatement__Group__0__Impl"
    // InternalMyBashParser.g:6721:1: rule__IfStatement__Group__0__Impl : ( () ) ;
    public final void rule__IfStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6725:1: ( ( () ) )
            // InternalMyBashParser.g:6726:1: ( () )
            {
            // InternalMyBashParser.g:6726:1: ( () )
            // InternalMyBashParser.g:6727:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); 
            }
            // InternalMyBashParser.g:6728:2: ()
            // InternalMyBashParser.g:6728:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__0__Impl"


    // $ANTLR start "rule__IfStatement__Group__1"
    // InternalMyBashParser.g:6736:1: rule__IfStatement__Group__1 : rule__IfStatement__Group__1__Impl rule__IfStatement__Group__2 ;
    public final void rule__IfStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6740:1: ( rule__IfStatement__Group__1__Impl rule__IfStatement__Group__2 )
            // InternalMyBashParser.g:6741:2: rule__IfStatement__Group__1__Impl rule__IfStatement__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__IfStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__1"


    // $ANTLR start "rule__IfStatement__Group__1__Impl"
    // InternalMyBashParser.g:6748:1: rule__IfStatement__Group__1__Impl : ( If ) ;
    public final void rule__IfStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6752:1: ( ( If ) )
            // InternalMyBashParser.g:6753:1: ( If )
            {
            // InternalMyBashParser.g:6753:1: ( If )
            // InternalMyBashParser.g:6754:2: If
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getIfKeyword_1()); 
            }
            match(input,If,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getIfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__1__Impl"


    // $ANTLR start "rule__IfStatement__Group__2"
    // InternalMyBashParser.g:6763:1: rule__IfStatement__Group__2 : rule__IfStatement__Group__2__Impl rule__IfStatement__Group__3 ;
    public final void rule__IfStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6767:1: ( rule__IfStatement__Group__2__Impl rule__IfStatement__Group__3 )
            // InternalMyBashParser.g:6768:2: rule__IfStatement__Group__2__Impl rule__IfStatement__Group__3
            {
            pushFollow(FOLLOW_42);
            rule__IfStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__2"


    // $ANTLR start "rule__IfStatement__Group__2__Impl"
    // InternalMyBashParser.g:6775:1: rule__IfStatement__Group__2__Impl : ( ( rule__IfStatement__ConditionAssignment_2 ) ) ;
    public final void rule__IfStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6779:1: ( ( ( rule__IfStatement__ConditionAssignment_2 ) ) )
            // InternalMyBashParser.g:6780:1: ( ( rule__IfStatement__ConditionAssignment_2 ) )
            {
            // InternalMyBashParser.g:6780:1: ( ( rule__IfStatement__ConditionAssignment_2 ) )
            // InternalMyBashParser.g:6781:2: ( rule__IfStatement__ConditionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); 
            }
            // InternalMyBashParser.g:6782:2: ( rule__IfStatement__ConditionAssignment_2 )
            // InternalMyBashParser.g:6782:3: rule__IfStatement__ConditionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__IfStatement__ConditionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__2__Impl"


    // $ANTLR start "rule__IfStatement__Group__3"
    // InternalMyBashParser.g:6790:1: rule__IfStatement__Group__3 : rule__IfStatement__Group__3__Impl rule__IfStatement__Group__4 ;
    public final void rule__IfStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6794:1: ( rule__IfStatement__Group__3__Impl rule__IfStatement__Group__4 )
            // InternalMyBashParser.g:6795:2: rule__IfStatement__Group__3__Impl rule__IfStatement__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__IfStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__3"


    // $ANTLR start "rule__IfStatement__Group__3__Impl"
    // InternalMyBashParser.g:6802:1: rule__IfStatement__Group__3__Impl : ( Then ) ;
    public final void rule__IfStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6806:1: ( ( Then ) )
            // InternalMyBashParser.g:6807:1: ( Then )
            {
            // InternalMyBashParser.g:6807:1: ( Then )
            // InternalMyBashParser.g:6808:2: Then
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getThenKeyword_3()); 
            }
            match(input,Then,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getThenKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__3__Impl"


    // $ANTLR start "rule__IfStatement__Group__4"
    // InternalMyBashParser.g:6817:1: rule__IfStatement__Group__4 : rule__IfStatement__Group__4__Impl rule__IfStatement__Group__5 ;
    public final void rule__IfStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6821:1: ( rule__IfStatement__Group__4__Impl rule__IfStatement__Group__5 )
            // InternalMyBashParser.g:6822:2: rule__IfStatement__Group__4__Impl rule__IfStatement__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__IfStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__4"


    // $ANTLR start "rule__IfStatement__Group__4__Impl"
    // InternalMyBashParser.g:6829:1: rule__IfStatement__Group__4__Impl : ( ( rule__IfStatement__ThenAssignment_4 ) ) ;
    public final void rule__IfStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6833:1: ( ( ( rule__IfStatement__ThenAssignment_4 ) ) )
            // InternalMyBashParser.g:6834:1: ( ( rule__IfStatement__ThenAssignment_4 ) )
            {
            // InternalMyBashParser.g:6834:1: ( ( rule__IfStatement__ThenAssignment_4 ) )
            // InternalMyBashParser.g:6835:2: ( rule__IfStatement__ThenAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getThenAssignment_4()); 
            }
            // InternalMyBashParser.g:6836:2: ( rule__IfStatement__ThenAssignment_4 )
            // InternalMyBashParser.g:6836:3: rule__IfStatement__ThenAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__IfStatement__ThenAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getThenAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__4__Impl"


    // $ANTLR start "rule__IfStatement__Group__5"
    // InternalMyBashParser.g:6844:1: rule__IfStatement__Group__5 : rule__IfStatement__Group__5__Impl rule__IfStatement__Group__6 ;
    public final void rule__IfStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6848:1: ( rule__IfStatement__Group__5__Impl rule__IfStatement__Group__6 )
            // InternalMyBashParser.g:6849:2: rule__IfStatement__Group__5__Impl rule__IfStatement__Group__6
            {
            pushFollow(FOLLOW_43);
            rule__IfStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__5"


    // $ANTLR start "rule__IfStatement__Group__5__Impl"
    // InternalMyBashParser.g:6856:1: rule__IfStatement__Group__5__Impl : ( ( rule__IfStatement__ElseIfBlockAssignment_5 )* ) ;
    public final void rule__IfStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6860:1: ( ( ( rule__IfStatement__ElseIfBlockAssignment_5 )* ) )
            // InternalMyBashParser.g:6861:1: ( ( rule__IfStatement__ElseIfBlockAssignment_5 )* )
            {
            // InternalMyBashParser.g:6861:1: ( ( rule__IfStatement__ElseIfBlockAssignment_5 )* )
            // InternalMyBashParser.g:6862:2: ( rule__IfStatement__ElseIfBlockAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getElseIfBlockAssignment_5()); 
            }
            // InternalMyBashParser.g:6863:2: ( rule__IfStatement__ElseIfBlockAssignment_5 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==Elif) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalMyBashParser.g:6863:3: rule__IfStatement__ElseIfBlockAssignment_5
            	    {
            	    pushFollow(FOLLOW_44);
            	    rule__IfStatement__ElseIfBlockAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getElseIfBlockAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__5__Impl"


    // $ANTLR start "rule__IfStatement__Group__6"
    // InternalMyBashParser.g:6871:1: rule__IfStatement__Group__6 : rule__IfStatement__Group__6__Impl rule__IfStatement__Group__7 ;
    public final void rule__IfStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6875:1: ( rule__IfStatement__Group__6__Impl rule__IfStatement__Group__7 )
            // InternalMyBashParser.g:6876:2: rule__IfStatement__Group__6__Impl rule__IfStatement__Group__7
            {
            pushFollow(FOLLOW_43);
            rule__IfStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__6"


    // $ANTLR start "rule__IfStatement__Group__6__Impl"
    // InternalMyBashParser.g:6883:1: rule__IfStatement__Group__6__Impl : ( ( rule__IfStatement__Group_6__0 )? ) ;
    public final void rule__IfStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6887:1: ( ( ( rule__IfStatement__Group_6__0 )? ) )
            // InternalMyBashParser.g:6888:1: ( ( rule__IfStatement__Group_6__0 )? )
            {
            // InternalMyBashParser.g:6888:1: ( ( rule__IfStatement__Group_6__0 )? )
            // InternalMyBashParser.g:6889:2: ( rule__IfStatement__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getGroup_6()); 
            }
            // InternalMyBashParser.g:6890:2: ( rule__IfStatement__Group_6__0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==Else) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalMyBashParser.g:6890:3: rule__IfStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IfStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__6__Impl"


    // $ANTLR start "rule__IfStatement__Group__7"
    // InternalMyBashParser.g:6898:1: rule__IfStatement__Group__7 : rule__IfStatement__Group__7__Impl ;
    public final void rule__IfStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6902:1: ( rule__IfStatement__Group__7__Impl )
            // InternalMyBashParser.g:6903:2: rule__IfStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__7"


    // $ANTLR start "rule__IfStatement__Group__7__Impl"
    // InternalMyBashParser.g:6909:1: rule__IfStatement__Group__7__Impl : ( Fi ) ;
    public final void rule__IfStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6913:1: ( ( Fi ) )
            // InternalMyBashParser.g:6914:1: ( Fi )
            {
            // InternalMyBashParser.g:6914:1: ( Fi )
            // InternalMyBashParser.g:6915:2: Fi
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getFiKeyword_7()); 
            }
            match(input,Fi,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getFiKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__7__Impl"


    // $ANTLR start "rule__IfStatement__Group_6__0"
    // InternalMyBashParser.g:6925:1: rule__IfStatement__Group_6__0 : rule__IfStatement__Group_6__0__Impl rule__IfStatement__Group_6__1 ;
    public final void rule__IfStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6929:1: ( rule__IfStatement__Group_6__0__Impl rule__IfStatement__Group_6__1 )
            // InternalMyBashParser.g:6930:2: rule__IfStatement__Group_6__0__Impl rule__IfStatement__Group_6__1
            {
            pushFollow(FOLLOW_5);
            rule__IfStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__0"


    // $ANTLR start "rule__IfStatement__Group_6__0__Impl"
    // InternalMyBashParser.g:6937:1: rule__IfStatement__Group_6__0__Impl : ( Else ) ;
    public final void rule__IfStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6941:1: ( ( Else ) )
            // InternalMyBashParser.g:6942:1: ( Else )
            {
            // InternalMyBashParser.g:6942:1: ( Else )
            // InternalMyBashParser.g:6943:2: Else
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); 
            }
            match(input,Else,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__0__Impl"


    // $ANTLR start "rule__IfStatement__Group_6__1"
    // InternalMyBashParser.g:6952:1: rule__IfStatement__Group_6__1 : rule__IfStatement__Group_6__1__Impl ;
    public final void rule__IfStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6956:1: ( rule__IfStatement__Group_6__1__Impl )
            // InternalMyBashParser.g:6957:2: rule__IfStatement__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IfStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__1"


    // $ANTLR start "rule__IfStatement__Group_6__1__Impl"
    // InternalMyBashParser.g:6963:1: rule__IfStatement__Group_6__1__Impl : ( ( rule__IfStatement__ElseAssignment_6_1 ) ) ;
    public final void rule__IfStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6967:1: ( ( ( rule__IfStatement__ElseAssignment_6_1 ) ) )
            // InternalMyBashParser.g:6968:1: ( ( rule__IfStatement__ElseAssignment_6_1 ) )
            {
            // InternalMyBashParser.g:6968:1: ( ( rule__IfStatement__ElseAssignment_6_1 ) )
            // InternalMyBashParser.g:6969:2: ( rule__IfStatement__ElseAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getElseAssignment_6_1()); 
            }
            // InternalMyBashParser.g:6970:2: ( rule__IfStatement__ElseAssignment_6_1 )
            // InternalMyBashParser.g:6970:3: rule__IfStatement__ElseAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__IfStatement__ElseAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getElseAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__1__Impl"


    // $ANTLR start "rule__ElseIfBlock__Group__0"
    // InternalMyBashParser.g:6979:1: rule__ElseIfBlock__Group__0 : rule__ElseIfBlock__Group__0__Impl rule__ElseIfBlock__Group__1 ;
    public final void rule__ElseIfBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6983:1: ( rule__ElseIfBlock__Group__0__Impl rule__ElseIfBlock__Group__1 )
            // InternalMyBashParser.g:6984:2: rule__ElseIfBlock__Group__0__Impl rule__ElseIfBlock__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__ElseIfBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__0"


    // $ANTLR start "rule__ElseIfBlock__Group__0__Impl"
    // InternalMyBashParser.g:6991:1: rule__ElseIfBlock__Group__0__Impl : ( () ) ;
    public final void rule__ElseIfBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:6995:1: ( ( () ) )
            // InternalMyBashParser.g:6996:1: ( () )
            {
            // InternalMyBashParser.g:6996:1: ( () )
            // InternalMyBashParser.g:6997:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getElseIfBlockAction_0()); 
            }
            // InternalMyBashParser.g:6998:2: ()
            // InternalMyBashParser.g:6998:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getElseIfBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__0__Impl"


    // $ANTLR start "rule__ElseIfBlock__Group__1"
    // InternalMyBashParser.g:7006:1: rule__ElseIfBlock__Group__1 : rule__ElseIfBlock__Group__1__Impl rule__ElseIfBlock__Group__2 ;
    public final void rule__ElseIfBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7010:1: ( rule__ElseIfBlock__Group__1__Impl rule__ElseIfBlock__Group__2 )
            // InternalMyBashParser.g:7011:2: rule__ElseIfBlock__Group__1__Impl rule__ElseIfBlock__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__ElseIfBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__1"


    // $ANTLR start "rule__ElseIfBlock__Group__1__Impl"
    // InternalMyBashParser.g:7018:1: rule__ElseIfBlock__Group__1__Impl : ( Elif ) ;
    public final void rule__ElseIfBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7022:1: ( ( Elif ) )
            // InternalMyBashParser.g:7023:1: ( Elif )
            {
            // InternalMyBashParser.g:7023:1: ( Elif )
            // InternalMyBashParser.g:7024:2: Elif
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getElifKeyword_1()); 
            }
            match(input,Elif,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getElifKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__1__Impl"


    // $ANTLR start "rule__ElseIfBlock__Group__2"
    // InternalMyBashParser.g:7033:1: rule__ElseIfBlock__Group__2 : rule__ElseIfBlock__Group__2__Impl rule__ElseIfBlock__Group__3 ;
    public final void rule__ElseIfBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7037:1: ( rule__ElseIfBlock__Group__2__Impl rule__ElseIfBlock__Group__3 )
            // InternalMyBashParser.g:7038:2: rule__ElseIfBlock__Group__2__Impl rule__ElseIfBlock__Group__3
            {
            pushFollow(FOLLOW_42);
            rule__ElseIfBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__2"


    // $ANTLR start "rule__ElseIfBlock__Group__2__Impl"
    // InternalMyBashParser.g:7045:1: rule__ElseIfBlock__Group__2__Impl : ( ( rule__ElseIfBlock__ConditionAssignment_2 ) ) ;
    public final void rule__ElseIfBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7049:1: ( ( ( rule__ElseIfBlock__ConditionAssignment_2 ) ) )
            // InternalMyBashParser.g:7050:1: ( ( rule__ElseIfBlock__ConditionAssignment_2 ) )
            {
            // InternalMyBashParser.g:7050:1: ( ( rule__ElseIfBlock__ConditionAssignment_2 ) )
            // InternalMyBashParser.g:7051:2: ( rule__ElseIfBlock__ConditionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getConditionAssignment_2()); 
            }
            // InternalMyBashParser.g:7052:2: ( rule__ElseIfBlock__ConditionAssignment_2 )
            // InternalMyBashParser.g:7052:3: rule__ElseIfBlock__ConditionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__ConditionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getConditionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__2__Impl"


    // $ANTLR start "rule__ElseIfBlock__Group__3"
    // InternalMyBashParser.g:7060:1: rule__ElseIfBlock__Group__3 : rule__ElseIfBlock__Group__3__Impl rule__ElseIfBlock__Group__4 ;
    public final void rule__ElseIfBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7064:1: ( rule__ElseIfBlock__Group__3__Impl rule__ElseIfBlock__Group__4 )
            // InternalMyBashParser.g:7065:2: rule__ElseIfBlock__Group__3__Impl rule__ElseIfBlock__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__ElseIfBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__3"


    // $ANTLR start "rule__ElseIfBlock__Group__3__Impl"
    // InternalMyBashParser.g:7072:1: rule__ElseIfBlock__Group__3__Impl : ( Then ) ;
    public final void rule__ElseIfBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7076:1: ( ( Then ) )
            // InternalMyBashParser.g:7077:1: ( Then )
            {
            // InternalMyBashParser.g:7077:1: ( Then )
            // InternalMyBashParser.g:7078:2: Then
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getThenKeyword_3()); 
            }
            match(input,Then,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getThenKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__3__Impl"


    // $ANTLR start "rule__ElseIfBlock__Group__4"
    // InternalMyBashParser.g:7087:1: rule__ElseIfBlock__Group__4 : rule__ElseIfBlock__Group__4__Impl ;
    public final void rule__ElseIfBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7091:1: ( rule__ElseIfBlock__Group__4__Impl )
            // InternalMyBashParser.g:7092:2: rule__ElseIfBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__4"


    // $ANTLR start "rule__ElseIfBlock__Group__4__Impl"
    // InternalMyBashParser.g:7098:1: rule__ElseIfBlock__Group__4__Impl : ( ( rule__ElseIfBlock__ThenAssignment_4 ) ) ;
    public final void rule__ElseIfBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7102:1: ( ( ( rule__ElseIfBlock__ThenAssignment_4 ) ) )
            // InternalMyBashParser.g:7103:1: ( ( rule__ElseIfBlock__ThenAssignment_4 ) )
            {
            // InternalMyBashParser.g:7103:1: ( ( rule__ElseIfBlock__ThenAssignment_4 ) )
            // InternalMyBashParser.g:7104:2: ( rule__ElseIfBlock__ThenAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getThenAssignment_4()); 
            }
            // InternalMyBashParser.g:7105:2: ( rule__ElseIfBlock__ThenAssignment_4 )
            // InternalMyBashParser.g:7105:3: rule__ElseIfBlock__ThenAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__ElseIfBlock__ThenAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getThenAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__Group__4__Impl"


    // $ANTLR start "rule__ForStatement__Group__0"
    // InternalMyBashParser.g:7114:1: rule__ForStatement__Group__0 : rule__ForStatement__Group__0__Impl rule__ForStatement__Group__1 ;
    public final void rule__ForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7118:1: ( rule__ForStatement__Group__0__Impl rule__ForStatement__Group__1 )
            // InternalMyBashParser.g:7119:2: rule__ForStatement__Group__0__Impl rule__ForStatement__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__ForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__0"


    // $ANTLR start "rule__ForStatement__Group__0__Impl"
    // InternalMyBashParser.g:7126:1: rule__ForStatement__Group__0__Impl : ( For ) ;
    public final void rule__ForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7130:1: ( ( For ) )
            // InternalMyBashParser.g:7131:1: ( For )
            {
            // InternalMyBashParser.g:7131:1: ( For )
            // InternalMyBashParser.g:7132:2: For
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getForKeyword_0()); 
            }
            match(input,For,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getForKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__0__Impl"


    // $ANTLR start "rule__ForStatement__Group__1"
    // InternalMyBashParser.g:7141:1: rule__ForStatement__Group__1 : rule__ForStatement__Group__1__Impl rule__ForStatement__Group__2 ;
    public final void rule__ForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7145:1: ( rule__ForStatement__Group__1__Impl rule__ForStatement__Group__2 )
            // InternalMyBashParser.g:7146:2: rule__ForStatement__Group__1__Impl rule__ForStatement__Group__2
            {
            pushFollow(FOLLOW_47);
            rule__ForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__1"


    // $ANTLR start "rule__ForStatement__Group__1__Impl"
    // InternalMyBashParser.g:7153:1: rule__ForStatement__Group__1__Impl : ( ( rule__ForStatement__Alternatives_1 ) ) ;
    public final void rule__ForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7157:1: ( ( ( rule__ForStatement__Alternatives_1 ) ) )
            // InternalMyBashParser.g:7158:1: ( ( rule__ForStatement__Alternatives_1 ) )
            {
            // InternalMyBashParser.g:7158:1: ( ( rule__ForStatement__Alternatives_1 ) )
            // InternalMyBashParser.g:7159:2: ( rule__ForStatement__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getAlternatives_1()); 
            }
            // InternalMyBashParser.g:7160:2: ( rule__ForStatement__Alternatives_1 )
            // InternalMyBashParser.g:7160:3: rule__ForStatement__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__1__Impl"


    // $ANTLR start "rule__ForStatement__Group__2"
    // InternalMyBashParser.g:7168:1: rule__ForStatement__Group__2 : rule__ForStatement__Group__2__Impl rule__ForStatement__Group__3 ;
    public final void rule__ForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7172:1: ( rule__ForStatement__Group__2__Impl rule__ForStatement__Group__3 )
            // InternalMyBashParser.g:7173:2: rule__ForStatement__Group__2__Impl rule__ForStatement__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__ForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__2"


    // $ANTLR start "rule__ForStatement__Group__2__Impl"
    // InternalMyBashParser.g:7180:1: rule__ForStatement__Group__2__Impl : ( Do ) ;
    public final void rule__ForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7184:1: ( ( Do ) )
            // InternalMyBashParser.g:7185:1: ( Do )
            {
            // InternalMyBashParser.g:7185:1: ( Do )
            // InternalMyBashParser.g:7186:2: Do
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getDoKeyword_2()); 
            }
            match(input,Do,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getDoKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__2__Impl"


    // $ANTLR start "rule__ForStatement__Group__3"
    // InternalMyBashParser.g:7195:1: rule__ForStatement__Group__3 : rule__ForStatement__Group__3__Impl rule__ForStatement__Group__4 ;
    public final void rule__ForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7199:1: ( rule__ForStatement__Group__3__Impl rule__ForStatement__Group__4 )
            // InternalMyBashParser.g:7200:2: rule__ForStatement__Group__3__Impl rule__ForStatement__Group__4
            {
            pushFollow(FOLLOW_48);
            rule__ForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__3"


    // $ANTLR start "rule__ForStatement__Group__3__Impl"
    // InternalMyBashParser.g:7207:1: rule__ForStatement__Group__3__Impl : ( ( rule__ForStatement__BodyAssignment_3 ) ) ;
    public final void rule__ForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7211:1: ( ( ( rule__ForStatement__BodyAssignment_3 ) ) )
            // InternalMyBashParser.g:7212:1: ( ( rule__ForStatement__BodyAssignment_3 ) )
            {
            // InternalMyBashParser.g:7212:1: ( ( rule__ForStatement__BodyAssignment_3 ) )
            // InternalMyBashParser.g:7213:2: ( rule__ForStatement__BodyAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getBodyAssignment_3()); 
            }
            // InternalMyBashParser.g:7214:2: ( rule__ForStatement__BodyAssignment_3 )
            // InternalMyBashParser.g:7214:3: rule__ForStatement__BodyAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__BodyAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getBodyAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__3__Impl"


    // $ANTLR start "rule__ForStatement__Group__4"
    // InternalMyBashParser.g:7222:1: rule__ForStatement__Group__4 : rule__ForStatement__Group__4__Impl ;
    public final void rule__ForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7226:1: ( rule__ForStatement__Group__4__Impl )
            // InternalMyBashParser.g:7227:2: rule__ForStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__4"


    // $ANTLR start "rule__ForStatement__Group__4__Impl"
    // InternalMyBashParser.g:7233:1: rule__ForStatement__Group__4__Impl : ( Done ) ;
    public final void rule__ForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7237:1: ( ( Done ) )
            // InternalMyBashParser.g:7238:1: ( Done )
            {
            // InternalMyBashParser.g:7238:1: ( Done )
            // InternalMyBashParser.g:7239:2: Done
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getDoneKeyword_4()); 
            }
            match(input,Done,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getDoneKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group__4__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__0"
    // InternalMyBashParser.g:7249:1: rule__ForStatement__Group_1_0__0 : rule__ForStatement__Group_1_0__0__Impl rule__ForStatement__Group_1_0__1 ;
    public final void rule__ForStatement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7253:1: ( rule__ForStatement__Group_1_0__0__Impl rule__ForStatement__Group_1_0__1 )
            // InternalMyBashParser.g:7254:2: rule__ForStatement__Group_1_0__0__Impl rule__ForStatement__Group_1_0__1
            {
            pushFollow(FOLLOW_49);
            rule__ForStatement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__0"


    // $ANTLR start "rule__ForStatement__Group_1_0__0__Impl"
    // InternalMyBashParser.g:7261:1: rule__ForStatement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__ForStatement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7265:1: ( ( () ) )
            // InternalMyBashParser.g:7266:1: ( () )
            {
            // InternalMyBashParser.g:7266:1: ( () )
            // InternalMyBashParser.g:7267:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getArithmeticForStatementAction_1_0_0()); 
            }
            // InternalMyBashParser.g:7268:2: ()
            // InternalMyBashParser.g:7268:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getArithmeticForStatementAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__0__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__1"
    // InternalMyBashParser.g:7276:1: rule__ForStatement__Group_1_0__1 : rule__ForStatement__Group_1_0__1__Impl rule__ForStatement__Group_1_0__2 ;
    public final void rule__ForStatement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7280:1: ( rule__ForStatement__Group_1_0__1__Impl rule__ForStatement__Group_1_0__2 )
            // InternalMyBashParser.g:7281:2: rule__ForStatement__Group_1_0__1__Impl rule__ForStatement__Group_1_0__2
            {
            pushFollow(FOLLOW_50);
            rule__ForStatement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__1"


    // $ANTLR start "rule__ForStatement__Group_1_0__1__Impl"
    // InternalMyBashParser.g:7288:1: rule__ForStatement__Group_1_0__1__Impl : ( LeftParenthesisLeftParenthesis ) ;
    public final void rule__ForStatement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7292:1: ( ( LeftParenthesisLeftParenthesis ) )
            // InternalMyBashParser.g:7293:1: ( LeftParenthesisLeftParenthesis )
            {
            // InternalMyBashParser.g:7293:1: ( LeftParenthesisLeftParenthesis )
            // InternalMyBashParser.g:7294:2: LeftParenthesisLeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getLeftParenthesisLeftParenthesisKeyword_1_0_1()); 
            }
            match(input,LeftParenthesisLeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getLeftParenthesisLeftParenthesisKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__1__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__2"
    // InternalMyBashParser.g:7303:1: rule__ForStatement__Group_1_0__2 : rule__ForStatement__Group_1_0__2__Impl rule__ForStatement__Group_1_0__3 ;
    public final void rule__ForStatement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7307:1: ( rule__ForStatement__Group_1_0__2__Impl rule__ForStatement__Group_1_0__3 )
            // InternalMyBashParser.g:7308:2: rule__ForStatement__Group_1_0__2__Impl rule__ForStatement__Group_1_0__3
            {
            pushFollow(FOLLOW_50);
            rule__ForStatement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__2"


    // $ANTLR start "rule__ForStatement__Group_1_0__2__Impl"
    // InternalMyBashParser.g:7315:1: rule__ForStatement__Group_1_0__2__Impl : ( ( rule__ForStatement__InitAssignment_1_0_2 )? ) ;
    public final void rule__ForStatement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7319:1: ( ( ( rule__ForStatement__InitAssignment_1_0_2 )? ) )
            // InternalMyBashParser.g:7320:1: ( ( rule__ForStatement__InitAssignment_1_0_2 )? )
            {
            // InternalMyBashParser.g:7320:1: ( ( rule__ForStatement__InitAssignment_1_0_2 )? )
            // InternalMyBashParser.g:7321:2: ( rule__ForStatement__InitAssignment_1_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getInitAssignment_1_0_2()); 
            }
            // InternalMyBashParser.g:7322:2: ( rule__ForStatement__InitAssignment_1_0_2 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==DollarSignLeftParenthesisLeftParenthesis||LA81_0==DollarSignLeftCurlyBracket||LA81_0==PlusSignPlusSign||LA81_0==HyphenMinusHyphenMinus||LA81_0==LessThanSignLeftParenthesis||LA81_0==GreaterThanSignLeftParenthesis||LA81_0==ExclamationMark||LA81_0==LeftParenthesis||LA81_0==PlusSign||LA81_0==HyphenMinus||(LA81_0>=Tilde && LA81_0<=RULE_I_NUMBER)||LA81_0==RULE_NAME||(LA81_0>=RULE_VARIABLE && LA81_0<=RULE_A_PREFIX)||LA81_0==RULE_CS_START) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalMyBashParser.g:7322:3: rule__ForStatement__InitAssignment_1_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStatement__InitAssignment_1_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getInitAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__2__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__3"
    // InternalMyBashParser.g:7330:1: rule__ForStatement__Group_1_0__3 : rule__ForStatement__Group_1_0__3__Impl rule__ForStatement__Group_1_0__4 ;
    public final void rule__ForStatement__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7334:1: ( rule__ForStatement__Group_1_0__3__Impl rule__ForStatement__Group_1_0__4 )
            // InternalMyBashParser.g:7335:2: rule__ForStatement__Group_1_0__3__Impl rule__ForStatement__Group_1_0__4
            {
            pushFollow(FOLLOW_50);
            rule__ForStatement__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__3"


    // $ANTLR start "rule__ForStatement__Group_1_0__3__Impl"
    // InternalMyBashParser.g:7342:1: rule__ForStatement__Group_1_0__3__Impl : ( Semicolon ) ;
    public final void rule__ForStatement__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7346:1: ( ( Semicolon ) )
            // InternalMyBashParser.g:7347:1: ( Semicolon )
            {
            // InternalMyBashParser.g:7347:1: ( Semicolon )
            // InternalMyBashParser.g:7348:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_0_3()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__3__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__4"
    // InternalMyBashParser.g:7357:1: rule__ForStatement__Group_1_0__4 : rule__ForStatement__Group_1_0__4__Impl rule__ForStatement__Group_1_0__5 ;
    public final void rule__ForStatement__Group_1_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7361:1: ( rule__ForStatement__Group_1_0__4__Impl rule__ForStatement__Group_1_0__5 )
            // InternalMyBashParser.g:7362:2: rule__ForStatement__Group_1_0__4__Impl rule__ForStatement__Group_1_0__5
            {
            pushFollow(FOLLOW_50);
            rule__ForStatement__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__4"


    // $ANTLR start "rule__ForStatement__Group_1_0__4__Impl"
    // InternalMyBashParser.g:7369:1: rule__ForStatement__Group_1_0__4__Impl : ( ( rule__ForStatement__ConditionAssignment_1_0_4 )? ) ;
    public final void rule__ForStatement__Group_1_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7373:1: ( ( ( rule__ForStatement__ConditionAssignment_1_0_4 )? ) )
            // InternalMyBashParser.g:7374:1: ( ( rule__ForStatement__ConditionAssignment_1_0_4 )? )
            {
            // InternalMyBashParser.g:7374:1: ( ( rule__ForStatement__ConditionAssignment_1_0_4 )? )
            // InternalMyBashParser.g:7375:2: ( rule__ForStatement__ConditionAssignment_1_0_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getConditionAssignment_1_0_4()); 
            }
            // InternalMyBashParser.g:7376:2: ( rule__ForStatement__ConditionAssignment_1_0_4 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==DollarSignLeftParenthesisLeftParenthesis||LA82_0==DollarSignLeftCurlyBracket||LA82_0==PlusSignPlusSign||LA82_0==HyphenMinusHyphenMinus||LA82_0==LessThanSignLeftParenthesis||LA82_0==GreaterThanSignLeftParenthesis||LA82_0==ExclamationMark||LA82_0==LeftParenthesis||LA82_0==PlusSign||LA82_0==HyphenMinus||(LA82_0>=Tilde && LA82_0<=RULE_I_NUMBER)||LA82_0==RULE_NAME||(LA82_0>=RULE_VARIABLE && LA82_0<=RULE_A_PREFIX)||LA82_0==RULE_CS_START) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalMyBashParser.g:7376:3: rule__ForStatement__ConditionAssignment_1_0_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStatement__ConditionAssignment_1_0_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getConditionAssignment_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__4__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__5"
    // InternalMyBashParser.g:7384:1: rule__ForStatement__Group_1_0__5 : rule__ForStatement__Group_1_0__5__Impl rule__ForStatement__Group_1_0__6 ;
    public final void rule__ForStatement__Group_1_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7388:1: ( rule__ForStatement__Group_1_0__5__Impl rule__ForStatement__Group_1_0__6 )
            // InternalMyBashParser.g:7389:2: rule__ForStatement__Group_1_0__5__Impl rule__ForStatement__Group_1_0__6
            {
            pushFollow(FOLLOW_51);
            rule__ForStatement__Group_1_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__5"


    // $ANTLR start "rule__ForStatement__Group_1_0__5__Impl"
    // InternalMyBashParser.g:7396:1: rule__ForStatement__Group_1_0__5__Impl : ( Semicolon ) ;
    public final void rule__ForStatement__Group_1_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7400:1: ( ( Semicolon ) )
            // InternalMyBashParser.g:7401:1: ( Semicolon )
            {
            // InternalMyBashParser.g:7401:1: ( Semicolon )
            // InternalMyBashParser.g:7402:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_0_5()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__5__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__6"
    // InternalMyBashParser.g:7411:1: rule__ForStatement__Group_1_0__6 : rule__ForStatement__Group_1_0__6__Impl rule__ForStatement__Group_1_0__7 ;
    public final void rule__ForStatement__Group_1_0__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7415:1: ( rule__ForStatement__Group_1_0__6__Impl rule__ForStatement__Group_1_0__7 )
            // InternalMyBashParser.g:7416:2: rule__ForStatement__Group_1_0__6__Impl rule__ForStatement__Group_1_0__7
            {
            pushFollow(FOLLOW_51);
            rule__ForStatement__Group_1_0__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__6"


    // $ANTLR start "rule__ForStatement__Group_1_0__6__Impl"
    // InternalMyBashParser.g:7423:1: rule__ForStatement__Group_1_0__6__Impl : ( ( rule__ForStatement__StepAssignment_1_0_6 )? ) ;
    public final void rule__ForStatement__Group_1_0__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7427:1: ( ( ( rule__ForStatement__StepAssignment_1_0_6 )? ) )
            // InternalMyBashParser.g:7428:1: ( ( rule__ForStatement__StepAssignment_1_0_6 )? )
            {
            // InternalMyBashParser.g:7428:1: ( ( rule__ForStatement__StepAssignment_1_0_6 )? )
            // InternalMyBashParser.g:7429:2: ( rule__ForStatement__StepAssignment_1_0_6 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getStepAssignment_1_0_6()); 
            }
            // InternalMyBashParser.g:7430:2: ( rule__ForStatement__StepAssignment_1_0_6 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==DollarSignLeftParenthesisLeftParenthesis||LA83_0==DollarSignLeftCurlyBracket||LA83_0==PlusSignPlusSign||LA83_0==HyphenMinusHyphenMinus||LA83_0==LessThanSignLeftParenthesis||LA83_0==GreaterThanSignLeftParenthesis||LA83_0==ExclamationMark||LA83_0==LeftParenthesis||LA83_0==PlusSign||LA83_0==HyphenMinus||(LA83_0>=Tilde && LA83_0<=RULE_I_NUMBER)||LA83_0==RULE_NAME||(LA83_0>=RULE_VARIABLE && LA83_0<=RULE_A_PREFIX)||LA83_0==RULE_CS_START) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalMyBashParser.g:7430:3: rule__ForStatement__StepAssignment_1_0_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStatement__StepAssignment_1_0_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getStepAssignment_1_0_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__6__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__7"
    // InternalMyBashParser.g:7438:1: rule__ForStatement__Group_1_0__7 : rule__ForStatement__Group_1_0__7__Impl rule__ForStatement__Group_1_0__8 ;
    public final void rule__ForStatement__Group_1_0__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7442:1: ( rule__ForStatement__Group_1_0__7__Impl rule__ForStatement__Group_1_0__8 )
            // InternalMyBashParser.g:7443:2: rule__ForStatement__Group_1_0__7__Impl rule__ForStatement__Group_1_0__8
            {
            pushFollow(FOLLOW_52);
            rule__ForStatement__Group_1_0__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__7"


    // $ANTLR start "rule__ForStatement__Group_1_0__7__Impl"
    // InternalMyBashParser.g:7450:1: rule__ForStatement__Group_1_0__7__Impl : ( RightParenthesisRightParenthesis ) ;
    public final void rule__ForStatement__Group_1_0__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7454:1: ( ( RightParenthesisRightParenthesis ) )
            // InternalMyBashParser.g:7455:1: ( RightParenthesisRightParenthesis )
            {
            // InternalMyBashParser.g:7455:1: ( RightParenthesisRightParenthesis )
            // InternalMyBashParser.g:7456:2: RightParenthesisRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getRightParenthesisRightParenthesisKeyword_1_0_7()); 
            }
            match(input,RightParenthesisRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getRightParenthesisRightParenthesisKeyword_1_0_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__7__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0__8"
    // InternalMyBashParser.g:7465:1: rule__ForStatement__Group_1_0__8 : rule__ForStatement__Group_1_0__8__Impl ;
    public final void rule__ForStatement__Group_1_0__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7469:1: ( rule__ForStatement__Group_1_0__8__Impl )
            // InternalMyBashParser.g:7470:2: rule__ForStatement__Group_1_0__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__8"


    // $ANTLR start "rule__ForStatement__Group_1_0__8__Impl"
    // InternalMyBashParser.g:7476:1: rule__ForStatement__Group_1_0__8__Impl : ( ( rule__ForStatement__Group_1_0_8__0 )? ) ;
    public final void rule__ForStatement__Group_1_0__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7480:1: ( ( ( rule__ForStatement__Group_1_0_8__0 )? ) )
            // InternalMyBashParser.g:7481:1: ( ( rule__ForStatement__Group_1_0_8__0 )? )
            {
            // InternalMyBashParser.g:7481:1: ( ( rule__ForStatement__Group_1_0_8__0 )? )
            // InternalMyBashParser.g:7482:2: ( rule__ForStatement__Group_1_0_8__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getGroup_1_0_8()); 
            }
            // InternalMyBashParser.g:7483:2: ( rule__ForStatement__Group_1_0_8__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==Semicolon||LA84_0==RULE_NEW_LINE||LA84_0==RULE_HERE_DOC_START) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalMyBashParser.g:7483:3: rule__ForStatement__Group_1_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStatement__Group_1_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getGroup_1_0_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0__8__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0_8__0"
    // InternalMyBashParser.g:7492:1: rule__ForStatement__Group_1_0_8__0 : rule__ForStatement__Group_1_0_8__0__Impl rule__ForStatement__Group_1_0_8__1 ;
    public final void rule__ForStatement__Group_1_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7496:1: ( rule__ForStatement__Group_1_0_8__0__Impl rule__ForStatement__Group_1_0_8__1 )
            // InternalMyBashParser.g:7497:2: rule__ForStatement__Group_1_0_8__0__Impl rule__ForStatement__Group_1_0_8__1
            {
            pushFollow(FOLLOW_5);
            rule__ForStatement__Group_1_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0_8__0"


    // $ANTLR start "rule__ForStatement__Group_1_0_8__0__Impl"
    // InternalMyBashParser.g:7504:1: rule__ForStatement__Group_1_0_8__0__Impl : ( ruleListTerminator ) ;
    public final void rule__ForStatement__Group_1_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7508:1: ( ( ruleListTerminator ) )
            // InternalMyBashParser.g:7509:1: ( ruleListTerminator )
            {
            // InternalMyBashParser.g:7509:1: ( ruleListTerminator )
            // InternalMyBashParser.g:7510:2: ruleListTerminator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getListTerminatorParserRuleCall_1_0_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleListTerminator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getListTerminatorParserRuleCall_1_0_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0_8__0__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_0_8__1"
    // InternalMyBashParser.g:7519:1: rule__ForStatement__Group_1_0_8__1 : rule__ForStatement__Group_1_0_8__1__Impl ;
    public final void rule__ForStatement__Group_1_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7523:1: ( rule__ForStatement__Group_1_0_8__1__Impl )
            // InternalMyBashParser.g:7524:2: rule__ForStatement__Group_1_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0_8__1"


    // $ANTLR start "rule__ForStatement__Group_1_0_8__1__Impl"
    // InternalMyBashParser.g:7530:1: rule__ForStatement__Group_1_0_8__1__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__ForStatement__Group_1_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7534:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:7535:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:7535:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:7536:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getMaybeNewLineParserRuleCall_1_0_8_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getMaybeNewLineParserRuleCall_1_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_0_8__1__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_1__0"
    // InternalMyBashParser.g:7546:1: rule__ForStatement__Group_1_1__0 : rule__ForStatement__Group_1_1__0__Impl rule__ForStatement__Group_1_1__1 ;
    public final void rule__ForStatement__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7550:1: ( rule__ForStatement__Group_1_1__0__Impl rule__ForStatement__Group_1_1__1 )
            // InternalMyBashParser.g:7551:2: rule__ForStatement__Group_1_1__0__Impl rule__ForStatement__Group_1_1__1
            {
            pushFollow(FOLLOW_46);
            rule__ForStatement__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__0"


    // $ANTLR start "rule__ForStatement__Group_1_1__0__Impl"
    // InternalMyBashParser.g:7558:1: rule__ForStatement__Group_1_1__0__Impl : ( () ) ;
    public final void rule__ForStatement__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7562:1: ( ( () ) )
            // InternalMyBashParser.g:7563:1: ( () )
            {
            // InternalMyBashParser.g:7563:1: ( () )
            // InternalMyBashParser.g:7564:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getForStatementAction_1_1_0()); 
            }
            // InternalMyBashParser.g:7565:2: ()
            // InternalMyBashParser.g:7565:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getForStatementAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__0__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_1__1"
    // InternalMyBashParser.g:7573:1: rule__ForStatement__Group_1_1__1 : rule__ForStatement__Group_1_1__1__Impl rule__ForStatement__Group_1_1__2 ;
    public final void rule__ForStatement__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7577:1: ( rule__ForStatement__Group_1_1__1__Impl rule__ForStatement__Group_1_1__2 )
            // InternalMyBashParser.g:7578:2: rule__ForStatement__Group_1_1__1__Impl rule__ForStatement__Group_1_1__2
            {
            pushFollow(FOLLOW_34);
            rule__ForStatement__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__1"


    // $ANTLR start "rule__ForStatement__Group_1_1__1__Impl"
    // InternalMyBashParser.g:7585:1: rule__ForStatement__Group_1_1__1__Impl : ( ( rule__ForStatement__VariableAssignment_1_1_1 ) ) ;
    public final void rule__ForStatement__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7589:1: ( ( ( rule__ForStatement__VariableAssignment_1_1_1 ) ) )
            // InternalMyBashParser.g:7590:1: ( ( rule__ForStatement__VariableAssignment_1_1_1 ) )
            {
            // InternalMyBashParser.g:7590:1: ( ( rule__ForStatement__VariableAssignment_1_1_1 ) )
            // InternalMyBashParser.g:7591:2: ( rule__ForStatement__VariableAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getVariableAssignment_1_1_1()); 
            }
            // InternalMyBashParser.g:7592:2: ( rule__ForStatement__VariableAssignment_1_1_1 )
            // InternalMyBashParser.g:7592:3: rule__ForStatement__VariableAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__VariableAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getVariableAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__1__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_1__2"
    // InternalMyBashParser.g:7600:1: rule__ForStatement__Group_1_1__2 : rule__ForStatement__Group_1_1__2__Impl rule__ForStatement__Group_1_1__3 ;
    public final void rule__ForStatement__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7604:1: ( rule__ForStatement__Group_1_1__2__Impl rule__ForStatement__Group_1_1__3 )
            // InternalMyBashParser.g:7605:2: rule__ForStatement__Group_1_1__2__Impl rule__ForStatement__Group_1_1__3
            {
            pushFollow(FOLLOW_21);
            rule__ForStatement__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__2"


    // $ANTLR start "rule__ForStatement__Group_1_1__2__Impl"
    // InternalMyBashParser.g:7612:1: rule__ForStatement__Group_1_1__2__Impl : ( In ) ;
    public final void rule__ForStatement__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7616:1: ( ( In ) )
            // InternalMyBashParser.g:7617:1: ( In )
            {
            // InternalMyBashParser.g:7617:1: ( In )
            // InternalMyBashParser.g:7618:2: In
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getInKeyword_1_1_2()); 
            }
            match(input,In,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getInKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__2__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_1__3"
    // InternalMyBashParser.g:7627:1: rule__ForStatement__Group_1_1__3 : rule__ForStatement__Group_1_1__3__Impl rule__ForStatement__Group_1_1__4 ;
    public final void rule__ForStatement__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7631:1: ( rule__ForStatement__Group_1_1__3__Impl rule__ForStatement__Group_1_1__4 )
            // InternalMyBashParser.g:7632:2: rule__ForStatement__Group_1_1__3__Impl rule__ForStatement__Group_1_1__4
            {
            pushFollow(FOLLOW_52);
            rule__ForStatement__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__3"


    // $ANTLR start "rule__ForStatement__Group_1_1__3__Impl"
    // InternalMyBashParser.g:7639:1: rule__ForStatement__Group_1_1__3__Impl : ( ( ( rule__ForStatement__WordsAssignment_1_1_3 ) ) ( ( rule__ForStatement__WordsAssignment_1_1_3 )* ) ) ;
    public final void rule__ForStatement__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7643:1: ( ( ( ( rule__ForStatement__WordsAssignment_1_1_3 ) ) ( ( rule__ForStatement__WordsAssignment_1_1_3 )* ) ) )
            // InternalMyBashParser.g:7644:1: ( ( ( rule__ForStatement__WordsAssignment_1_1_3 ) ) ( ( rule__ForStatement__WordsAssignment_1_1_3 )* ) )
            {
            // InternalMyBashParser.g:7644:1: ( ( ( rule__ForStatement__WordsAssignment_1_1_3 ) ) ( ( rule__ForStatement__WordsAssignment_1_1_3 )* ) )
            // InternalMyBashParser.g:7645:2: ( ( rule__ForStatement__WordsAssignment_1_1_3 ) ) ( ( rule__ForStatement__WordsAssignment_1_1_3 )* )
            {
            // InternalMyBashParser.g:7645:2: ( ( rule__ForStatement__WordsAssignment_1_1_3 ) )
            // InternalMyBashParser.g:7646:3: ( rule__ForStatement__WordsAssignment_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getWordsAssignment_1_1_3()); 
            }
            // InternalMyBashParser.g:7647:3: ( rule__ForStatement__WordsAssignment_1_1_3 )
            // InternalMyBashParser.g:7647:4: rule__ForStatement__WordsAssignment_1_1_3
            {
            pushFollow(FOLLOW_53);
            rule__ForStatement__WordsAssignment_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getWordsAssignment_1_1_3()); 
            }

            }

            // InternalMyBashParser.g:7650:2: ( ( rule__ForStatement__WordsAssignment_1_1_3 )* )
            // InternalMyBashParser.g:7651:3: ( rule__ForStatement__WordsAssignment_1_1_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getWordsAssignment_1_1_3()); 
            }
            // InternalMyBashParser.g:7652:3: ( rule__ForStatement__WordsAssignment_1_1_3 )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==DollarSignLeftParenthesisLeftParenthesis||LA85_0==DollarSignLeftCurlyBracket||LA85_0==LessThanSignLeftParenthesis||LA85_0==GreaterThanSignLeftParenthesis||LA85_0==QuotationMark||LA85_0==Apostrophe||(LA85_0>=RULE_S_WORD_PART && LA85_0<=RULE_WORD_PART)||LA85_0==RULE_VARIABLE||LA85_0==RULE_CS_START) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalMyBashParser.g:7652:4: rule__ForStatement__WordsAssignment_1_1_3
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__ForStatement__WordsAssignment_1_1_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getWordsAssignment_1_1_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__3__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_1__4"
    // InternalMyBashParser.g:7661:1: rule__ForStatement__Group_1_1__4 : rule__ForStatement__Group_1_1__4__Impl rule__ForStatement__Group_1_1__5 ;
    public final void rule__ForStatement__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7665:1: ( rule__ForStatement__Group_1_1__4__Impl rule__ForStatement__Group_1_1__5 )
            // InternalMyBashParser.g:7666:2: rule__ForStatement__Group_1_1__4__Impl rule__ForStatement__Group_1_1__5
            {
            pushFollow(FOLLOW_5);
            rule__ForStatement__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__4"


    // $ANTLR start "rule__ForStatement__Group_1_1__4__Impl"
    // InternalMyBashParser.g:7673:1: rule__ForStatement__Group_1_1__4__Impl : ( ruleListTerminator ) ;
    public final void rule__ForStatement__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7677:1: ( ( ruleListTerminator ) )
            // InternalMyBashParser.g:7678:1: ( ruleListTerminator )
            {
            // InternalMyBashParser.g:7678:1: ( ruleListTerminator )
            // InternalMyBashParser.g:7679:2: ruleListTerminator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getListTerminatorParserRuleCall_1_1_4()); 
            }
            pushFollow(FOLLOW_2);
            ruleListTerminator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getListTerminatorParserRuleCall_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__4__Impl"


    // $ANTLR start "rule__ForStatement__Group_1_1__5"
    // InternalMyBashParser.g:7688:1: rule__ForStatement__Group_1_1__5 : rule__ForStatement__Group_1_1__5__Impl ;
    public final void rule__ForStatement__Group_1_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7692:1: ( rule__ForStatement__Group_1_1__5__Impl )
            // InternalMyBashParser.g:7693:2: rule__ForStatement__Group_1_1__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForStatement__Group_1_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__5"


    // $ANTLR start "rule__ForStatement__Group_1_1__5__Impl"
    // InternalMyBashParser.g:7699:1: rule__ForStatement__Group_1_1__5__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__ForStatement__Group_1_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7703:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:7704:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:7704:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:7705:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getMaybeNewLineParserRuleCall_1_1_5()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getMaybeNewLineParserRuleCall_1_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__Group_1_1__5__Impl"


    // $ANTLR start "rule__WhileStatement__Group__0"
    // InternalMyBashParser.g:7715:1: rule__WhileStatement__Group__0 : rule__WhileStatement__Group__0__Impl rule__WhileStatement__Group__1 ;
    public final void rule__WhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7719:1: ( rule__WhileStatement__Group__0__Impl rule__WhileStatement__Group__1 )
            // InternalMyBashParser.g:7720:2: rule__WhileStatement__Group__0__Impl rule__WhileStatement__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__WhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__0"


    // $ANTLR start "rule__WhileStatement__Group__0__Impl"
    // InternalMyBashParser.g:7727:1: rule__WhileStatement__Group__0__Impl : ( While ) ;
    public final void rule__WhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7731:1: ( ( While ) )
            // InternalMyBashParser.g:7732:1: ( While )
            {
            // InternalMyBashParser.g:7732:1: ( While )
            // InternalMyBashParser.g:7733:2: While
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); 
            }
            match(input,While,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__0__Impl"


    // $ANTLR start "rule__WhileStatement__Group__1"
    // InternalMyBashParser.g:7742:1: rule__WhileStatement__Group__1 : rule__WhileStatement__Group__1__Impl rule__WhileStatement__Group__2 ;
    public final void rule__WhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7746:1: ( rule__WhileStatement__Group__1__Impl rule__WhileStatement__Group__2 )
            // InternalMyBashParser.g:7747:2: rule__WhileStatement__Group__1__Impl rule__WhileStatement__Group__2
            {
            pushFollow(FOLLOW_47);
            rule__WhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__1"


    // $ANTLR start "rule__WhileStatement__Group__1__Impl"
    // InternalMyBashParser.g:7754:1: rule__WhileStatement__Group__1__Impl : ( ( rule__WhileStatement__CAssignment_1 ) ) ;
    public final void rule__WhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7758:1: ( ( ( rule__WhileStatement__CAssignment_1 ) ) )
            // InternalMyBashParser.g:7759:1: ( ( rule__WhileStatement__CAssignment_1 ) )
            {
            // InternalMyBashParser.g:7759:1: ( ( rule__WhileStatement__CAssignment_1 ) )
            // InternalMyBashParser.g:7760:2: ( rule__WhileStatement__CAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getCAssignment_1()); 
            }
            // InternalMyBashParser.g:7761:2: ( rule__WhileStatement__CAssignment_1 )
            // InternalMyBashParser.g:7761:3: rule__WhileStatement__CAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WhileStatement__CAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getCAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__1__Impl"


    // $ANTLR start "rule__WhileStatement__Group__2"
    // InternalMyBashParser.g:7769:1: rule__WhileStatement__Group__2 : rule__WhileStatement__Group__2__Impl rule__WhileStatement__Group__3 ;
    public final void rule__WhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7773:1: ( rule__WhileStatement__Group__2__Impl rule__WhileStatement__Group__3 )
            // InternalMyBashParser.g:7774:2: rule__WhileStatement__Group__2__Impl rule__WhileStatement__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__WhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__2"


    // $ANTLR start "rule__WhileStatement__Group__2__Impl"
    // InternalMyBashParser.g:7781:1: rule__WhileStatement__Group__2__Impl : ( Do ) ;
    public final void rule__WhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7785:1: ( ( Do ) )
            // InternalMyBashParser.g:7786:1: ( Do )
            {
            // InternalMyBashParser.g:7786:1: ( Do )
            // InternalMyBashParser.g:7787:2: Do
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getDoKeyword_2()); 
            }
            match(input,Do,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getDoKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__2__Impl"


    // $ANTLR start "rule__WhileStatement__Group__3"
    // InternalMyBashParser.g:7796:1: rule__WhileStatement__Group__3 : rule__WhileStatement__Group__3__Impl rule__WhileStatement__Group__4 ;
    public final void rule__WhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7800:1: ( rule__WhileStatement__Group__3__Impl rule__WhileStatement__Group__4 )
            // InternalMyBashParser.g:7801:2: rule__WhileStatement__Group__3__Impl rule__WhileStatement__Group__4
            {
            pushFollow(FOLLOW_48);
            rule__WhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__3"


    // $ANTLR start "rule__WhileStatement__Group__3__Impl"
    // InternalMyBashParser.g:7808:1: rule__WhileStatement__Group__3__Impl : ( ( rule__WhileStatement__DAssignment_3 ) ) ;
    public final void rule__WhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7812:1: ( ( ( rule__WhileStatement__DAssignment_3 ) ) )
            // InternalMyBashParser.g:7813:1: ( ( rule__WhileStatement__DAssignment_3 ) )
            {
            // InternalMyBashParser.g:7813:1: ( ( rule__WhileStatement__DAssignment_3 ) )
            // InternalMyBashParser.g:7814:2: ( rule__WhileStatement__DAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getDAssignment_3()); 
            }
            // InternalMyBashParser.g:7815:2: ( rule__WhileStatement__DAssignment_3 )
            // InternalMyBashParser.g:7815:3: rule__WhileStatement__DAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WhileStatement__DAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getDAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__3__Impl"


    // $ANTLR start "rule__WhileStatement__Group__4"
    // InternalMyBashParser.g:7823:1: rule__WhileStatement__Group__4 : rule__WhileStatement__Group__4__Impl ;
    public final void rule__WhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7827:1: ( rule__WhileStatement__Group__4__Impl )
            // InternalMyBashParser.g:7828:2: rule__WhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__4"


    // $ANTLR start "rule__WhileStatement__Group__4__Impl"
    // InternalMyBashParser.g:7834:1: rule__WhileStatement__Group__4__Impl : ( Done ) ;
    public final void rule__WhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7838:1: ( ( Done ) )
            // InternalMyBashParser.g:7839:1: ( Done )
            {
            // InternalMyBashParser.g:7839:1: ( Done )
            // InternalMyBashParser.g:7840:2: Done
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getDoneKeyword_4()); 
            }
            match(input,Done,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getDoneKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__4__Impl"


    // $ANTLR start "rule__Redirection__Group__0"
    // InternalMyBashParser.g:7850:1: rule__Redirection__Group__0 : rule__Redirection__Group__0__Impl rule__Redirection__Group__1 ;
    public final void rule__Redirection__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7854:1: ( rule__Redirection__Group__0__Impl rule__Redirection__Group__1 )
            // InternalMyBashParser.g:7855:2: rule__Redirection__Group__0__Impl rule__Redirection__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Redirection__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Redirection__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group__0"


    // $ANTLR start "rule__Redirection__Group__0__Impl"
    // InternalMyBashParser.g:7862:1: rule__Redirection__Group__0__Impl : ( () ) ;
    public final void rule__Redirection__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7866:1: ( ( () ) )
            // InternalMyBashParser.g:7867:1: ( () )
            {
            // InternalMyBashParser.g:7867:1: ( () )
            // InternalMyBashParser.g:7868:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getRedirectionAction_0()); 
            }
            // InternalMyBashParser.g:7869:2: ()
            // InternalMyBashParser.g:7869:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getRedirectionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group__0__Impl"


    // $ANTLR start "rule__Redirection__Group__1"
    // InternalMyBashParser.g:7877:1: rule__Redirection__Group__1 : rule__Redirection__Group__1__Impl ;
    public final void rule__Redirection__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7881:1: ( rule__Redirection__Group__1__Impl )
            // InternalMyBashParser.g:7882:2: rule__Redirection__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group__1"


    // $ANTLR start "rule__Redirection__Group__1__Impl"
    // InternalMyBashParser.g:7888:1: rule__Redirection__Group__1__Impl : ( ( rule__Redirection__Alternatives_1 ) ) ;
    public final void rule__Redirection__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7892:1: ( ( ( rule__Redirection__Alternatives_1 ) ) )
            // InternalMyBashParser.g:7893:1: ( ( rule__Redirection__Alternatives_1 ) )
            {
            // InternalMyBashParser.g:7893:1: ( ( rule__Redirection__Alternatives_1 ) )
            // InternalMyBashParser.g:7894:2: ( rule__Redirection__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getAlternatives_1()); 
            }
            // InternalMyBashParser.g:7895:2: ( rule__Redirection__Alternatives_1 )
            // InternalMyBashParser.g:7895:3: rule__Redirection__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group__1__Impl"


    // $ANTLR start "rule__Redirection__Group_1_0__0"
    // InternalMyBashParser.g:7904:1: rule__Redirection__Group_1_0__0 : rule__Redirection__Group_1_0__0__Impl rule__Redirection__Group_1_0__1 ;
    public final void rule__Redirection__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7908:1: ( rule__Redirection__Group_1_0__0__Impl rule__Redirection__Group_1_0__1 )
            // InternalMyBashParser.g:7909:2: rule__Redirection__Group_1_0__0__Impl rule__Redirection__Group_1_0__1
            {
            pushFollow(FOLLOW_54);
            rule__Redirection__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Redirection__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_0__0"


    // $ANTLR start "rule__Redirection__Group_1_0__0__Impl"
    // InternalMyBashParser.g:7916:1: rule__Redirection__Group_1_0__0__Impl : ( ( RULE_I_NUMBER )? ) ;
    public final void rule__Redirection__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7920:1: ( ( ( RULE_I_NUMBER )? ) )
            // InternalMyBashParser.g:7921:1: ( ( RULE_I_NUMBER )? )
            {
            // InternalMyBashParser.g:7921:1: ( ( RULE_I_NUMBER )? )
            // InternalMyBashParser.g:7922:2: ( RULE_I_NUMBER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getI_NUMBERTerminalRuleCall_1_0_0()); 
            }
            // InternalMyBashParser.g:7923:2: ( RULE_I_NUMBER )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_I_NUMBER) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalMyBashParser.g:7923:3: RULE_I_NUMBER
                    {
                    match(input,RULE_I_NUMBER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getI_NUMBERTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_0__0__Impl"


    // $ANTLR start "rule__Redirection__Group_1_0__1"
    // InternalMyBashParser.g:7931:1: rule__Redirection__Group_1_0__1 : rule__Redirection__Group_1_0__1__Impl rule__Redirection__Group_1_0__2 ;
    public final void rule__Redirection__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7935:1: ( rule__Redirection__Group_1_0__1__Impl rule__Redirection__Group_1_0__2 )
            // InternalMyBashParser.g:7936:2: rule__Redirection__Group_1_0__1__Impl rule__Redirection__Group_1_0__2
            {
            pushFollow(FOLLOW_55);
            rule__Redirection__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Redirection__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_0__1"


    // $ANTLR start "rule__Redirection__Group_1_0__1__Impl"
    // InternalMyBashParser.g:7943:1: rule__Redirection__Group_1_0__1__Impl : ( ( rule__Redirection__OpAssignment_1_0_1 ) ) ;
    public final void rule__Redirection__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7947:1: ( ( ( rule__Redirection__OpAssignment_1_0_1 ) ) )
            // InternalMyBashParser.g:7948:1: ( ( rule__Redirection__OpAssignment_1_0_1 ) )
            {
            // InternalMyBashParser.g:7948:1: ( ( rule__Redirection__OpAssignment_1_0_1 ) )
            // InternalMyBashParser.g:7949:2: ( rule__Redirection__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalMyBashParser.g:7950:2: ( rule__Redirection__OpAssignment_1_0_1 )
            // InternalMyBashParser.g:7950:3: rule__Redirection__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_0__1__Impl"


    // $ANTLR start "rule__Redirection__Group_1_0__2"
    // InternalMyBashParser.g:7958:1: rule__Redirection__Group_1_0__2 : rule__Redirection__Group_1_0__2__Impl ;
    public final void rule__Redirection__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7962:1: ( rule__Redirection__Group_1_0__2__Impl )
            // InternalMyBashParser.g:7963:2: rule__Redirection__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_0__2"


    // $ANTLR start "rule__Redirection__Group_1_0__2__Impl"
    // InternalMyBashParser.g:7969:1: rule__Redirection__Group_1_0__2__Impl : ( ( rule__Redirection__Alternatives_1_0_2 ) ) ;
    public final void rule__Redirection__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7973:1: ( ( ( rule__Redirection__Alternatives_1_0_2 ) ) )
            // InternalMyBashParser.g:7974:1: ( ( rule__Redirection__Alternatives_1_0_2 ) )
            {
            // InternalMyBashParser.g:7974:1: ( ( rule__Redirection__Alternatives_1_0_2 ) )
            // InternalMyBashParser.g:7975:2: ( rule__Redirection__Alternatives_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getAlternatives_1_0_2()); 
            }
            // InternalMyBashParser.g:7976:2: ( rule__Redirection__Alternatives_1_0_2 )
            // InternalMyBashParser.g:7976:3: rule__Redirection__Alternatives_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__Alternatives_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getAlternatives_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_0__2__Impl"


    // $ANTLR start "rule__Redirection__Group_1_1__0"
    // InternalMyBashParser.g:7985:1: rule__Redirection__Group_1_1__0 : rule__Redirection__Group_1_1__0__Impl rule__Redirection__Group_1_1__1 ;
    public final void rule__Redirection__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:7989:1: ( rule__Redirection__Group_1_1__0__Impl rule__Redirection__Group_1_1__1 )
            // InternalMyBashParser.g:7990:2: rule__Redirection__Group_1_1__0__Impl rule__Redirection__Group_1_1__1
            {
            pushFollow(FOLLOW_56);
            rule__Redirection__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Redirection__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_1__0"


    // $ANTLR start "rule__Redirection__Group_1_1__0__Impl"
    // InternalMyBashParser.g:7997:1: rule__Redirection__Group_1_1__0__Impl : ( ( rule__Redirection__OpAssignment_1_1_0 ) ) ;
    public final void rule__Redirection__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8001:1: ( ( ( rule__Redirection__OpAssignment_1_1_0 ) ) )
            // InternalMyBashParser.g:8002:1: ( ( rule__Redirection__OpAssignment_1_1_0 ) )
            {
            // InternalMyBashParser.g:8002:1: ( ( rule__Redirection__OpAssignment_1_1_0 ) )
            // InternalMyBashParser.g:8003:2: ( rule__Redirection__OpAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getOpAssignment_1_1_0()); 
            }
            // InternalMyBashParser.g:8004:2: ( rule__Redirection__OpAssignment_1_1_0 )
            // InternalMyBashParser.g:8004:3: rule__Redirection__OpAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__OpAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getOpAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_1__0__Impl"


    // $ANTLR start "rule__Redirection__Group_1_1__1"
    // InternalMyBashParser.g:8012:1: rule__Redirection__Group_1_1__1 : rule__Redirection__Group_1_1__1__Impl ;
    public final void rule__Redirection__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8016:1: ( rule__Redirection__Group_1_1__1__Impl )
            // InternalMyBashParser.g:8017:2: rule__Redirection__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_1__1"


    // $ANTLR start "rule__Redirection__Group_1_1__1__Impl"
    // InternalMyBashParser.g:8023:1: rule__Redirection__Group_1_1__1__Impl : ( RULE_HERE_DOC_WORD ) ;
    public final void rule__Redirection__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8027:1: ( ( RULE_HERE_DOC_WORD ) )
            // InternalMyBashParser.g:8028:1: ( RULE_HERE_DOC_WORD )
            {
            // InternalMyBashParser.g:8028:1: ( RULE_HERE_DOC_WORD )
            // InternalMyBashParser.g:8029:2: RULE_HERE_DOC_WORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getHERE_DOC_WORDTerminalRuleCall_1_1_1()); 
            }
            match(input,RULE_HERE_DOC_WORD,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getHERE_DOC_WORDTerminalRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__Group_1_1__1__Impl"


    // $ANTLR start "rule__Array__Group__0"
    // InternalMyBashParser.g:8039:1: rule__Array__Group__0 : rule__Array__Group__0__Impl rule__Array__Group__1 ;
    public final void rule__Array__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8043:1: ( rule__Array__Group__0__Impl rule__Array__Group__1 )
            // InternalMyBashParser.g:8044:2: rule__Array__Group__0__Impl rule__Array__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__Array__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__0"


    // $ANTLR start "rule__Array__Group__0__Impl"
    // InternalMyBashParser.g:8051:1: rule__Array__Group__0__Impl : ( ruleArrayStart ) ;
    public final void rule__Array__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8055:1: ( ( ruleArrayStart ) )
            // InternalMyBashParser.g:8056:1: ( ruleArrayStart )
            {
            // InternalMyBashParser.g:8056:1: ( ruleArrayStart )
            // InternalMyBashParser.g:8057:2: ruleArrayStart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getArrayStartParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getArrayStartParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__0__Impl"


    // $ANTLR start "rule__Array__Group__1"
    // InternalMyBashParser.g:8066:1: rule__Array__Group__1 : rule__Array__Group__1__Impl ;
    public final void rule__Array__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8070:1: ( rule__Array__Group__1__Impl )
            // InternalMyBashParser.g:8071:2: rule__Array__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Array__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__1"


    // $ANTLR start "rule__Array__Group__1__Impl"
    // InternalMyBashParser.g:8077:1: rule__Array__Group__1__Impl : ( ruleArrayEnd ) ;
    public final void rule__Array__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8081:1: ( ( ruleArrayEnd ) )
            // InternalMyBashParser.g:8082:1: ( ruleArrayEnd )
            {
            // InternalMyBashParser.g:8082:1: ( ruleArrayEnd )
            // InternalMyBashParser.g:8083:2: ruleArrayEnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayAccess().getArrayEndParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayAccess().getArrayEndParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array__Group__1__Impl"


    // $ANTLR start "rule__ArrayStart__Group__0"
    // InternalMyBashParser.g:8093:1: rule__ArrayStart__Group__0 : rule__ArrayStart__Group__0__Impl rule__ArrayStart__Group__1 ;
    public final void rule__ArrayStart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8097:1: ( rule__ArrayStart__Group__0__Impl rule__ArrayStart__Group__1 )
            // InternalMyBashParser.g:8098:2: rule__ArrayStart__Group__0__Impl rule__ArrayStart__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__ArrayStart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayStart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__0"


    // $ANTLR start "rule__ArrayStart__Group__0__Impl"
    // InternalMyBashParser.g:8105:1: rule__ArrayStart__Group__0__Impl : ( () ) ;
    public final void rule__ArrayStart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8109:1: ( ( () ) )
            // InternalMyBashParser.g:8110:1: ( () )
            {
            // InternalMyBashParser.g:8110:1: ( () )
            // InternalMyBashParser.g:8111:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getArrayAction_0()); 
            }
            // InternalMyBashParser.g:8112:2: ()
            // InternalMyBashParser.g:8112:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getArrayAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__0__Impl"


    // $ANTLR start "rule__ArrayStart__Group__1"
    // InternalMyBashParser.g:8120:1: rule__ArrayStart__Group__1 : rule__ArrayStart__Group__1__Impl rule__ArrayStart__Group__2 ;
    public final void rule__ArrayStart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8124:1: ( rule__ArrayStart__Group__1__Impl rule__ArrayStart__Group__2 )
            // InternalMyBashParser.g:8125:2: rule__ArrayStart__Group__1__Impl rule__ArrayStart__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__ArrayStart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayStart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__1"


    // $ANTLR start "rule__ArrayStart__Group__1__Impl"
    // InternalMyBashParser.g:8132:1: rule__ArrayStart__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayStart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8136:1: ( ( LeftParenthesis ) )
            // InternalMyBashParser.g:8137:1: ( LeftParenthesis )
            {
            // InternalMyBashParser.g:8137:1: ( LeftParenthesis )
            // InternalMyBashParser.g:8138:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__1__Impl"


    // $ANTLR start "rule__ArrayStart__Group__2"
    // InternalMyBashParser.g:8147:1: rule__ArrayStart__Group__2 : rule__ArrayStart__Group__2__Impl rule__ArrayStart__Group__3 ;
    public final void rule__ArrayStart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8151:1: ( rule__ArrayStart__Group__2__Impl rule__ArrayStart__Group__3 )
            // InternalMyBashParser.g:8152:2: rule__ArrayStart__Group__2__Impl rule__ArrayStart__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__ArrayStart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayStart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__2"


    // $ANTLR start "rule__ArrayStart__Group__2__Impl"
    // InternalMyBashParser.g:8159:1: rule__ArrayStart__Group__2__Impl : ( ( rule__ArrayStart__Group_2__0 )* ) ;
    public final void rule__ArrayStart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8163:1: ( ( ( rule__ArrayStart__Group_2__0 )* ) )
            // InternalMyBashParser.g:8164:1: ( ( rule__ArrayStart__Group_2__0 )* )
            {
            // InternalMyBashParser.g:8164:1: ( ( rule__ArrayStart__Group_2__0 )* )
            // InternalMyBashParser.g:8165:2: ( rule__ArrayStart__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getGroup_2()); 
            }
            // InternalMyBashParser.g:8166:2: ( rule__ArrayStart__Group_2__0 )*
            loop87:
            do {
                int alt87=2;
                alt87 = dfa87.predict(input);
                switch (alt87) {
            	case 1 :
            	    // InternalMyBashParser.g:8166:3: rule__ArrayStart__Group_2__0
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__ArrayStart__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__2__Impl"


    // $ANTLR start "rule__ArrayStart__Group__3"
    // InternalMyBashParser.g:8174:1: rule__ArrayStart__Group__3 : rule__ArrayStart__Group__3__Impl ;
    public final void rule__ArrayStart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8178:1: ( rule__ArrayStart__Group__3__Impl )
            // InternalMyBashParser.g:8179:2: rule__ArrayStart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayStart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__3"


    // $ANTLR start "rule__ArrayStart__Group__3__Impl"
    // InternalMyBashParser.g:8185:1: rule__ArrayStart__Group__3__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__ArrayStart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8189:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:8190:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:8190:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:8191:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getMaybeNewLineParserRuleCall_3()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getMaybeNewLineParserRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group__3__Impl"


    // $ANTLR start "rule__ArrayStart__Group_2__0"
    // InternalMyBashParser.g:8201:1: rule__ArrayStart__Group_2__0 : rule__ArrayStart__Group_2__0__Impl rule__ArrayStart__Group_2__1 ;
    public final void rule__ArrayStart__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8205:1: ( rule__ArrayStart__Group_2__0__Impl rule__ArrayStart__Group_2__1 )
            // InternalMyBashParser.g:8206:2: rule__ArrayStart__Group_2__0__Impl rule__ArrayStart__Group_2__1
            {
            pushFollow(FOLLOW_21);
            rule__ArrayStart__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayStart__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group_2__0"


    // $ANTLR start "rule__ArrayStart__Group_2__0__Impl"
    // InternalMyBashParser.g:8213:1: rule__ArrayStart__Group_2__0__Impl : ( ruleMaybeNewLine ) ;
    public final void rule__ArrayStart__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8217:1: ( ( ruleMaybeNewLine ) )
            // InternalMyBashParser.g:8218:1: ( ruleMaybeNewLine )
            {
            // InternalMyBashParser.g:8218:1: ( ruleMaybeNewLine )
            // InternalMyBashParser.g:8219:2: ruleMaybeNewLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getMaybeNewLineParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMaybeNewLine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getMaybeNewLineParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayStart__Group_2__1"
    // InternalMyBashParser.g:8228:1: rule__ArrayStart__Group_2__1 : rule__ArrayStart__Group_2__1__Impl ;
    public final void rule__ArrayStart__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8232:1: ( rule__ArrayStart__Group_2__1__Impl )
            // InternalMyBashParser.g:8233:2: rule__ArrayStart__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayStart__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group_2__1"


    // $ANTLR start "rule__ArrayStart__Group_2__1__Impl"
    // InternalMyBashParser.g:8239:1: rule__ArrayStart__Group_2__1__Impl : ( ( rule__ArrayStart__WordsAssignment_2_1 ) ) ;
    public final void rule__ArrayStart__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8243:1: ( ( ( rule__ArrayStart__WordsAssignment_2_1 ) ) )
            // InternalMyBashParser.g:8244:1: ( ( rule__ArrayStart__WordsAssignment_2_1 ) )
            {
            // InternalMyBashParser.g:8244:1: ( ( rule__ArrayStart__WordsAssignment_2_1 ) )
            // InternalMyBashParser.g:8245:2: ( rule__ArrayStart__WordsAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getWordsAssignment_2_1()); 
            }
            // InternalMyBashParser.g:8246:2: ( rule__ArrayStart__WordsAssignment_2_1 )
            // InternalMyBashParser.g:8246:3: rule__ArrayStart__WordsAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayStart__WordsAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getWordsAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__Group_2__1__Impl"


    // $ANTLR start "rule__LiteralWord__Group__0"
    // InternalMyBashParser.g:8255:1: rule__LiteralWord__Group__0 : rule__LiteralWord__Group__0__Impl rule__LiteralWord__Group__1 ;
    public final void rule__LiteralWord__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8259:1: ( rule__LiteralWord__Group__0__Impl rule__LiteralWord__Group__1 )
            // InternalMyBashParser.g:8260:2: rule__LiteralWord__Group__0__Impl rule__LiteralWord__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__LiteralWord__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralWord__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWord__Group__0"


    // $ANTLR start "rule__LiteralWord__Group__0__Impl"
    // InternalMyBashParser.g:8267:1: rule__LiteralWord__Group__0__Impl : ( () ) ;
    public final void rule__LiteralWord__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8271:1: ( ( () ) )
            // InternalMyBashParser.g:8272:1: ( () )
            {
            // InternalMyBashParser.g:8272:1: ( () )
            // InternalMyBashParser.g:8273:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordAccess().getLiteralAction_0()); 
            }
            // InternalMyBashParser.g:8274:2: ()
            // InternalMyBashParser.g:8274:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordAccess().getLiteralAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWord__Group__0__Impl"


    // $ANTLR start "rule__LiteralWord__Group__1"
    // InternalMyBashParser.g:8282:1: rule__LiteralWord__Group__1 : rule__LiteralWord__Group__1__Impl ;
    public final void rule__LiteralWord__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8286:1: ( rule__LiteralWord__Group__1__Impl )
            // InternalMyBashParser.g:8287:2: rule__LiteralWord__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWord__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWord__Group__1"


    // $ANTLR start "rule__LiteralWord__Group__1__Impl"
    // InternalMyBashParser.g:8293:1: rule__LiteralWord__Group__1__Impl : ( ( rule__LiteralWord__ValuesAssignment_1 ) ) ;
    public final void rule__LiteralWord__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8297:1: ( ( ( rule__LiteralWord__ValuesAssignment_1 ) ) )
            // InternalMyBashParser.g:8298:1: ( ( rule__LiteralWord__ValuesAssignment_1 ) )
            {
            // InternalMyBashParser.g:8298:1: ( ( rule__LiteralWord__ValuesAssignment_1 ) )
            // InternalMyBashParser.g:8299:2: ( rule__LiteralWord__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordAccess().getValuesAssignment_1()); 
            }
            // InternalMyBashParser.g:8300:2: ( rule__LiteralWord__ValuesAssignment_1 )
            // InternalMyBashParser.g:8300:3: rule__LiteralWord__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWord__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWord__Group__1__Impl"


    // $ANTLR start "rule__Assignment__Group__0"
    // InternalMyBashParser.g:8309:1: rule__Assignment__Group__0 : rule__Assignment__Group__0__Impl rule__Assignment__Group__1 ;
    public final void rule__Assignment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8313:1: ( rule__Assignment__Group__0__Impl rule__Assignment__Group__1 )
            // InternalMyBashParser.g:8314:2: rule__Assignment__Group__0__Impl rule__Assignment__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__Assignment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__0"


    // $ANTLR start "rule__Assignment__Group__0__Impl"
    // InternalMyBashParser.g:8321:1: rule__Assignment__Group__0__Impl : ( ( rule__Assignment__NameAssignment_0 ) ) ;
    public final void rule__Assignment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8325:1: ( ( ( rule__Assignment__NameAssignment_0 ) ) )
            // InternalMyBashParser.g:8326:1: ( ( rule__Assignment__NameAssignment_0 ) )
            {
            // InternalMyBashParser.g:8326:1: ( ( rule__Assignment__NameAssignment_0 ) )
            // InternalMyBashParser.g:8327:2: ( rule__Assignment__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getNameAssignment_0()); 
            }
            // InternalMyBashParser.g:8328:2: ( rule__Assignment__NameAssignment_0 )
            // InternalMyBashParser.g:8328:3: rule__Assignment__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__0__Impl"


    // $ANTLR start "rule__Assignment__Group__1"
    // InternalMyBashParser.g:8336:1: rule__Assignment__Group__1 : rule__Assignment__Group__1__Impl rule__Assignment__Group__2 ;
    public final void rule__Assignment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8340:1: ( rule__Assignment__Group__1__Impl rule__Assignment__Group__2 )
            // InternalMyBashParser.g:8341:2: rule__Assignment__Group__1__Impl rule__Assignment__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__Assignment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__1"


    // $ANTLR start "rule__Assignment__Group__1__Impl"
    // InternalMyBashParser.g:8348:1: rule__Assignment__Group__1__Impl : ( ( rule__Assignment__IndexAssignment_1 )? ) ;
    public final void rule__Assignment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8352:1: ( ( ( rule__Assignment__IndexAssignment_1 )? ) )
            // InternalMyBashParser.g:8353:1: ( ( rule__Assignment__IndexAssignment_1 )? )
            {
            // InternalMyBashParser.g:8353:1: ( ( rule__Assignment__IndexAssignment_1 )? )
            // InternalMyBashParser.g:8354:2: ( rule__Assignment__IndexAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getIndexAssignment_1()); 
            }
            // InternalMyBashParser.g:8355:2: ( rule__Assignment__IndexAssignment_1 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==LeftSquareBracket) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalMyBashParser.g:8355:3: rule__Assignment__IndexAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Assignment__IndexAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__1__Impl"


    // $ANTLR start "rule__Assignment__Group__2"
    // InternalMyBashParser.g:8363:1: rule__Assignment__Group__2 : rule__Assignment__Group__2__Impl rule__Assignment__Group__3 ;
    public final void rule__Assignment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8367:1: ( rule__Assignment__Group__2__Impl rule__Assignment__Group__3 )
            // InternalMyBashParser.g:8368:2: rule__Assignment__Group__2__Impl rule__Assignment__Group__3
            {
            pushFollow(FOLLOW_38);
            rule__Assignment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__2"


    // $ANTLR start "rule__Assignment__Group__2__Impl"
    // InternalMyBashParser.g:8375:1: rule__Assignment__Group__2__Impl : ( EqualsSign ) ;
    public final void rule__Assignment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8379:1: ( ( EqualsSign ) )
            // InternalMyBashParser.g:8380:1: ( EqualsSign )
            {
            // InternalMyBashParser.g:8380:1: ( EqualsSign )
            // InternalMyBashParser.g:8381:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__2__Impl"


    // $ANTLR start "rule__Assignment__Group__3"
    // InternalMyBashParser.g:8390:1: rule__Assignment__Group__3 : rule__Assignment__Group__3__Impl ;
    public final void rule__Assignment__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8394:1: ( rule__Assignment__Group__3__Impl )
            // InternalMyBashParser.g:8395:2: rule__Assignment__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__3"


    // $ANTLR start "rule__Assignment__Group__3__Impl"
    // InternalMyBashParser.g:8401:1: rule__Assignment__Group__3__Impl : ( ( rule__Assignment__ValueAssignment_3 )? ) ;
    public final void rule__Assignment__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8405:1: ( ( ( rule__Assignment__ValueAssignment_3 )? ) )
            // InternalMyBashParser.g:8406:1: ( ( rule__Assignment__ValueAssignment_3 )? )
            {
            // InternalMyBashParser.g:8406:1: ( ( rule__Assignment__ValueAssignment_3 )? )
            // InternalMyBashParser.g:8407:2: ( rule__Assignment__ValueAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getValueAssignment_3()); 
            }
            // InternalMyBashParser.g:8408:2: ( rule__Assignment__ValueAssignment_3 )?
            int alt89=2;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    // InternalMyBashParser.g:8408:3: rule__Assignment__ValueAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Assignment__ValueAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__3__Impl"


    // $ANTLR start "rule__LAssignment__Group__0"
    // InternalMyBashParser.g:8417:1: rule__LAssignment__Group__0 : rule__LAssignment__Group__0__Impl rule__LAssignment__Group__1 ;
    public final void rule__LAssignment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8421:1: ( rule__LAssignment__Group__0__Impl rule__LAssignment__Group__1 )
            // InternalMyBashParser.g:8422:2: rule__LAssignment__Group__0__Impl rule__LAssignment__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__LAssignment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LAssignment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group__0"


    // $ANTLR start "rule__LAssignment__Group__0__Impl"
    // InternalMyBashParser.g:8429:1: rule__LAssignment__Group__0__Impl : ( ( rule__LAssignment__NameAssignment_0 ) ) ;
    public final void rule__LAssignment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8433:1: ( ( ( rule__LAssignment__NameAssignment_0 ) ) )
            // InternalMyBashParser.g:8434:1: ( ( rule__LAssignment__NameAssignment_0 ) )
            {
            // InternalMyBashParser.g:8434:1: ( ( rule__LAssignment__NameAssignment_0 ) )
            // InternalMyBashParser.g:8435:2: ( rule__LAssignment__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getNameAssignment_0()); 
            }
            // InternalMyBashParser.g:8436:2: ( rule__LAssignment__NameAssignment_0 )
            // InternalMyBashParser.g:8436:3: rule__LAssignment__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__LAssignment__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group__0__Impl"


    // $ANTLR start "rule__LAssignment__Group__1"
    // InternalMyBashParser.g:8444:1: rule__LAssignment__Group__1 : rule__LAssignment__Group__1__Impl rule__LAssignment__Group__2 ;
    public final void rule__LAssignment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8448:1: ( rule__LAssignment__Group__1__Impl rule__LAssignment__Group__2 )
            // InternalMyBashParser.g:8449:2: rule__LAssignment__Group__1__Impl rule__LAssignment__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__LAssignment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LAssignment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group__1"


    // $ANTLR start "rule__LAssignment__Group__1__Impl"
    // InternalMyBashParser.g:8456:1: rule__LAssignment__Group__1__Impl : ( ( rule__LAssignment__IndexAssignment_1 )? ) ;
    public final void rule__LAssignment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8460:1: ( ( ( rule__LAssignment__IndexAssignment_1 )? ) )
            // InternalMyBashParser.g:8461:1: ( ( rule__LAssignment__IndexAssignment_1 )? )
            {
            // InternalMyBashParser.g:8461:1: ( ( rule__LAssignment__IndexAssignment_1 )? )
            // InternalMyBashParser.g:8462:2: ( rule__LAssignment__IndexAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getIndexAssignment_1()); 
            }
            // InternalMyBashParser.g:8463:2: ( rule__LAssignment__IndexAssignment_1 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==LeftSquareBracket) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalMyBashParser.g:8463:3: rule__LAssignment__IndexAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LAssignment__IndexAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group__1__Impl"


    // $ANTLR start "rule__LAssignment__Group__2"
    // InternalMyBashParser.g:8471:1: rule__LAssignment__Group__2 : rule__LAssignment__Group__2__Impl ;
    public final void rule__LAssignment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8475:1: ( rule__LAssignment__Group__2__Impl )
            // InternalMyBashParser.g:8476:2: rule__LAssignment__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LAssignment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group__2"


    // $ANTLR start "rule__LAssignment__Group__2__Impl"
    // InternalMyBashParser.g:8482:1: rule__LAssignment__Group__2__Impl : ( ( rule__LAssignment__Group_2__0 )? ) ;
    public final void rule__LAssignment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8486:1: ( ( ( rule__LAssignment__Group_2__0 )? ) )
            // InternalMyBashParser.g:8487:1: ( ( rule__LAssignment__Group_2__0 )? )
            {
            // InternalMyBashParser.g:8487:1: ( ( rule__LAssignment__Group_2__0 )? )
            // InternalMyBashParser.g:8488:2: ( rule__LAssignment__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getGroup_2()); 
            }
            // InternalMyBashParser.g:8489:2: ( rule__LAssignment__Group_2__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==EqualsSign) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalMyBashParser.g:8489:3: rule__LAssignment__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LAssignment__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group__2__Impl"


    // $ANTLR start "rule__LAssignment__Group_2__0"
    // InternalMyBashParser.g:8498:1: rule__LAssignment__Group_2__0 : rule__LAssignment__Group_2__0__Impl rule__LAssignment__Group_2__1 ;
    public final void rule__LAssignment__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8502:1: ( rule__LAssignment__Group_2__0__Impl rule__LAssignment__Group_2__1 )
            // InternalMyBashParser.g:8503:2: rule__LAssignment__Group_2__0__Impl rule__LAssignment__Group_2__1
            {
            pushFollow(FOLLOW_38);
            rule__LAssignment__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LAssignment__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group_2__0"


    // $ANTLR start "rule__LAssignment__Group_2__0__Impl"
    // InternalMyBashParser.g:8510:1: rule__LAssignment__Group_2__0__Impl : ( EqualsSign ) ;
    public final void rule__LAssignment__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8514:1: ( ( EqualsSign ) )
            // InternalMyBashParser.g:8515:1: ( EqualsSign )
            {
            // InternalMyBashParser.g:8515:1: ( EqualsSign )
            // InternalMyBashParser.g:8516:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getEqualsSignKeyword_2_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getEqualsSignKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group_2__0__Impl"


    // $ANTLR start "rule__LAssignment__Group_2__1"
    // InternalMyBashParser.g:8525:1: rule__LAssignment__Group_2__1 : rule__LAssignment__Group_2__1__Impl ;
    public final void rule__LAssignment__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8529:1: ( rule__LAssignment__Group_2__1__Impl )
            // InternalMyBashParser.g:8530:2: rule__LAssignment__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LAssignment__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group_2__1"


    // $ANTLR start "rule__LAssignment__Group_2__1__Impl"
    // InternalMyBashParser.g:8536:1: rule__LAssignment__Group_2__1__Impl : ( ( rule__LAssignment__ValueAssignment_2_1 ) ) ;
    public final void rule__LAssignment__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8540:1: ( ( ( rule__LAssignment__ValueAssignment_2_1 ) ) )
            // InternalMyBashParser.g:8541:1: ( ( rule__LAssignment__ValueAssignment_2_1 ) )
            {
            // InternalMyBashParser.g:8541:1: ( ( rule__LAssignment__ValueAssignment_2_1 ) )
            // InternalMyBashParser.g:8542:2: ( rule__LAssignment__ValueAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getValueAssignment_2_1()); 
            }
            // InternalMyBashParser.g:8543:2: ( rule__LAssignment__ValueAssignment_2_1 )
            // InternalMyBashParser.g:8543:3: rule__LAssignment__ValueAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LAssignment__ValueAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getValueAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__Group_2__1__Impl"


    // $ANTLR start "rule__DQString__Group__0"
    // InternalMyBashParser.g:8552:1: rule__DQString__Group__0 : rule__DQString__Group__0__Impl rule__DQString__Group__1 ;
    public final void rule__DQString__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8556:1: ( rule__DQString__Group__0__Impl rule__DQString__Group__1 )
            // InternalMyBashParser.g:8557:2: rule__DQString__Group__0__Impl rule__DQString__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__DQString__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DQString__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__0"


    // $ANTLR start "rule__DQString__Group__0__Impl"
    // InternalMyBashParser.g:8564:1: rule__DQString__Group__0__Impl : ( () ) ;
    public final void rule__DQString__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8568:1: ( ( () ) )
            // InternalMyBashParser.g:8569:1: ( () )
            {
            // InternalMyBashParser.g:8569:1: ( () )
            // InternalMyBashParser.g:8570:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDQStringAccess().getDQStringAction_0()); 
            }
            // InternalMyBashParser.g:8571:2: ()
            // InternalMyBashParser.g:8571:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDQStringAccess().getDQStringAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__0__Impl"


    // $ANTLR start "rule__DQString__Group__1"
    // InternalMyBashParser.g:8579:1: rule__DQString__Group__1 : rule__DQString__Group__1__Impl rule__DQString__Group__2 ;
    public final void rule__DQString__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8583:1: ( rule__DQString__Group__1__Impl rule__DQString__Group__2 )
            // InternalMyBashParser.g:8584:2: rule__DQString__Group__1__Impl rule__DQString__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__DQString__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DQString__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__1"


    // $ANTLR start "rule__DQString__Group__1__Impl"
    // InternalMyBashParser.g:8591:1: rule__DQString__Group__1__Impl : ( QuotationMark ) ;
    public final void rule__DQString__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8595:1: ( ( QuotationMark ) )
            // InternalMyBashParser.g:8596:1: ( QuotationMark )
            {
            // InternalMyBashParser.g:8596:1: ( QuotationMark )
            // InternalMyBashParser.g:8597:2: QuotationMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDQStringAccess().getQuotationMarkKeyword_1()); 
            }
            match(input,QuotationMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDQStringAccess().getQuotationMarkKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__1__Impl"


    // $ANTLR start "rule__DQString__Group__2"
    // InternalMyBashParser.g:8606:1: rule__DQString__Group__2 : rule__DQString__Group__2__Impl rule__DQString__Group__3 ;
    public final void rule__DQString__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8610:1: ( rule__DQString__Group__2__Impl rule__DQString__Group__3 )
            // InternalMyBashParser.g:8611:2: rule__DQString__Group__2__Impl rule__DQString__Group__3
            {
            pushFollow(FOLLOW_59);
            rule__DQString__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DQString__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__2"


    // $ANTLR start "rule__DQString__Group__2__Impl"
    // InternalMyBashParser.g:8618:1: rule__DQString__Group__2__Impl : ( ( rule__DQString__ElementsAssignment_2 )* ) ;
    public final void rule__DQString__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8622:1: ( ( ( rule__DQString__ElementsAssignment_2 )* ) )
            // InternalMyBashParser.g:8623:1: ( ( rule__DQString__ElementsAssignment_2 )* )
            {
            // InternalMyBashParser.g:8623:1: ( ( rule__DQString__ElementsAssignment_2 )* )
            // InternalMyBashParser.g:8624:2: ( rule__DQString__ElementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDQStringAccess().getElementsAssignment_2()); 
            }
            // InternalMyBashParser.g:8625:2: ( rule__DQString__ElementsAssignment_2 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==DollarSignLeftParenthesisLeftParenthesis||LA92_0==DollarSignLeftCurlyBracket||LA92_0==LessThanSignLeftParenthesis||LA92_0==GreaterThanSignLeftParenthesis||LA92_0==RULE_WORD_PART||LA92_0==RULE_VARIABLE||LA92_0==RULE_CS_START) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalMyBashParser.g:8625:3: rule__DQString__ElementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__DQString__ElementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDQStringAccess().getElementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__2__Impl"


    // $ANTLR start "rule__DQString__Group__3"
    // InternalMyBashParser.g:8633:1: rule__DQString__Group__3 : rule__DQString__Group__3__Impl ;
    public final void rule__DQString__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8637:1: ( rule__DQString__Group__3__Impl )
            // InternalMyBashParser.g:8638:2: rule__DQString__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DQString__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__3"


    // $ANTLR start "rule__DQString__Group__3__Impl"
    // InternalMyBashParser.g:8644:1: rule__DQString__Group__3__Impl : ( QuotationMark ) ;
    public final void rule__DQString__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8648:1: ( ( QuotationMark ) )
            // InternalMyBashParser.g:8649:1: ( QuotationMark )
            {
            // InternalMyBashParser.g:8649:1: ( QuotationMark )
            // InternalMyBashParser.g:8650:2: QuotationMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDQStringAccess().getQuotationMarkKeyword_3()); 
            }
            match(input,QuotationMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDQStringAccess().getQuotationMarkKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__Group__3__Impl"


    // $ANTLR start "rule__LiteralStringPart__Group__0"
    // InternalMyBashParser.g:8660:1: rule__LiteralStringPart__Group__0 : rule__LiteralStringPart__Group__0__Impl rule__LiteralStringPart__Group__1 ;
    public final void rule__LiteralStringPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8664:1: ( rule__LiteralStringPart__Group__0__Impl rule__LiteralStringPart__Group__1 )
            // InternalMyBashParser.g:8665:2: rule__LiteralStringPart__Group__0__Impl rule__LiteralStringPart__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__LiteralStringPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralStringPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralStringPart__Group__0"


    // $ANTLR start "rule__LiteralStringPart__Group__0__Impl"
    // InternalMyBashParser.g:8672:1: rule__LiteralStringPart__Group__0__Impl : ( () ) ;
    public final void rule__LiteralStringPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8676:1: ( ( () ) )
            // InternalMyBashParser.g:8677:1: ( () )
            {
            // InternalMyBashParser.g:8677:1: ( () )
            // InternalMyBashParser.g:8678:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralStringPartAccess().getLiteralAction_0()); 
            }
            // InternalMyBashParser.g:8679:2: ()
            // InternalMyBashParser.g:8679:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralStringPartAccess().getLiteralAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralStringPart__Group__0__Impl"


    // $ANTLR start "rule__LiteralStringPart__Group__1"
    // InternalMyBashParser.g:8687:1: rule__LiteralStringPart__Group__1 : rule__LiteralStringPart__Group__1__Impl ;
    public final void rule__LiteralStringPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8691:1: ( rule__LiteralStringPart__Group__1__Impl )
            // InternalMyBashParser.g:8692:2: rule__LiteralStringPart__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralStringPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralStringPart__Group__1"


    // $ANTLR start "rule__LiteralStringPart__Group__1__Impl"
    // InternalMyBashParser.g:8698:1: rule__LiteralStringPart__Group__1__Impl : ( ( ( rule__LiteralStringPart__ValuesAssignment_1 ) ) ( ( rule__LiteralStringPart__ValuesAssignment_1 )* ) ) ;
    public final void rule__LiteralStringPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8702:1: ( ( ( ( rule__LiteralStringPart__ValuesAssignment_1 ) ) ( ( rule__LiteralStringPart__ValuesAssignment_1 )* ) ) )
            // InternalMyBashParser.g:8703:1: ( ( ( rule__LiteralStringPart__ValuesAssignment_1 ) ) ( ( rule__LiteralStringPart__ValuesAssignment_1 )* ) )
            {
            // InternalMyBashParser.g:8703:1: ( ( ( rule__LiteralStringPart__ValuesAssignment_1 ) ) ( ( rule__LiteralStringPart__ValuesAssignment_1 )* ) )
            // InternalMyBashParser.g:8704:2: ( ( rule__LiteralStringPart__ValuesAssignment_1 ) ) ( ( rule__LiteralStringPart__ValuesAssignment_1 )* )
            {
            // InternalMyBashParser.g:8704:2: ( ( rule__LiteralStringPart__ValuesAssignment_1 ) )
            // InternalMyBashParser.g:8705:3: ( rule__LiteralStringPart__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralStringPartAccess().getValuesAssignment_1()); 
            }
            // InternalMyBashParser.g:8706:3: ( rule__LiteralStringPart__ValuesAssignment_1 )
            // InternalMyBashParser.g:8706:4: rule__LiteralStringPart__ValuesAssignment_1
            {
            pushFollow(FOLLOW_61);
            rule__LiteralStringPart__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralStringPartAccess().getValuesAssignment_1()); 
            }

            }

            // InternalMyBashParser.g:8709:2: ( ( rule__LiteralStringPart__ValuesAssignment_1 )* )
            // InternalMyBashParser.g:8710:3: ( rule__LiteralStringPart__ValuesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralStringPartAccess().getValuesAssignment_1()); 
            }
            // InternalMyBashParser.g:8711:3: ( rule__LiteralStringPart__ValuesAssignment_1 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==RULE_WORD_PART) ) {
                    int LA93_2 = input.LA(2);

                    if ( (synpred151_InternalMyBashParser()) ) {
                        alt93=1;
                    }


                }


                switch (alt93) {
            	case 1 :
            	    // InternalMyBashParser.g:8711:4: rule__LiteralStringPart__ValuesAssignment_1
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__LiteralStringPart__ValuesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralStringPartAccess().getValuesAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralStringPart__Group__1__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group__0"
    // InternalMyBashParser.g:8721:1: rule__LiteralWordPart__Group__0 : rule__LiteralWordPart__Group__0__Impl rule__LiteralWordPart__Group__1 ;
    public final void rule__LiteralWordPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8725:1: ( rule__LiteralWordPart__Group__0__Impl rule__LiteralWordPart__Group__1 )
            // InternalMyBashParser.g:8726:2: rule__LiteralWordPart__Group__0__Impl rule__LiteralWordPart__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__LiteralWordPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group__0"


    // $ANTLR start "rule__LiteralWordPart__Group__0__Impl"
    // InternalMyBashParser.g:8733:1: rule__LiteralWordPart__Group__0__Impl : ( () ) ;
    public final void rule__LiteralWordPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8737:1: ( ( () ) )
            // InternalMyBashParser.g:8738:1: ( () )
            {
            // InternalMyBashParser.g:8738:1: ( () )
            // InternalMyBashParser.g:8739:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getLiteralAction_0()); 
            }
            // InternalMyBashParser.g:8740:2: ()
            // InternalMyBashParser.g:8740:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getLiteralAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group__0__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group__1"
    // InternalMyBashParser.g:8748:1: rule__LiteralWordPart__Group__1 : rule__LiteralWordPart__Group__1__Impl ;
    public final void rule__LiteralWordPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8752:1: ( rule__LiteralWordPart__Group__1__Impl )
            // InternalMyBashParser.g:8753:2: rule__LiteralWordPart__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group__1"


    // $ANTLR start "rule__LiteralWordPart__Group__1__Impl"
    // InternalMyBashParser.g:8759:1: rule__LiteralWordPart__Group__1__Impl : ( ( ( rule__LiteralWordPart__Group_1__0 ) ) ( ( rule__LiteralWordPart__Group_1__0 )* ) ) ;
    public final void rule__LiteralWordPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8763:1: ( ( ( ( rule__LiteralWordPart__Group_1__0 ) ) ( ( rule__LiteralWordPart__Group_1__0 )* ) ) )
            // InternalMyBashParser.g:8764:1: ( ( ( rule__LiteralWordPart__Group_1__0 ) ) ( ( rule__LiteralWordPart__Group_1__0 )* ) )
            {
            // InternalMyBashParser.g:8764:1: ( ( ( rule__LiteralWordPart__Group_1__0 ) ) ( ( rule__LiteralWordPart__Group_1__0 )* ) )
            // InternalMyBashParser.g:8765:2: ( ( rule__LiteralWordPart__Group_1__0 ) ) ( ( rule__LiteralWordPart__Group_1__0 )* )
            {
            // InternalMyBashParser.g:8765:2: ( ( rule__LiteralWordPart__Group_1__0 ) )
            // InternalMyBashParser.g:8766:3: ( rule__LiteralWordPart__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:8767:3: ( rule__LiteralWordPart__Group_1__0 )
            // InternalMyBashParser.g:8767:4: rule__LiteralWordPart__Group_1__0
            {
            pushFollow(FOLLOW_63);
            rule__LiteralWordPart__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getGroup_1()); 
            }

            }

            // InternalMyBashParser.g:8770:2: ( ( rule__LiteralWordPart__Group_1__0 )* )
            // InternalMyBashParser.g:8771:3: ( rule__LiteralWordPart__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:8772:3: ( rule__LiteralWordPart__Group_1__0 )*
            loop94:
            do {
                int alt94=2;
                alt94 = dfa94.predict(input);
                switch (alt94) {
            	case 1 :
            	    // InternalMyBashParser.g:8772:4: rule__LiteralWordPart__Group_1__0
            	    {
            	    pushFollow(FOLLOW_63);
            	    rule__LiteralWordPart__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group__1__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group_1__0"
    // InternalMyBashParser.g:8782:1: rule__LiteralWordPart__Group_1__0 : rule__LiteralWordPart__Group_1__0__Impl ;
    public final void rule__LiteralWordPart__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8786:1: ( rule__LiteralWordPart__Group_1__0__Impl )
            // InternalMyBashParser.g:8787:2: rule__LiteralWordPart__Group_1__0__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1__0"


    // $ANTLR start "rule__LiteralWordPart__Group_1__0__Impl"
    // InternalMyBashParser.g:8793:1: rule__LiteralWordPart__Group_1__0__Impl : ( ( rule__LiteralWordPart__Alternatives_1_0 ) ) ;
    public final void rule__LiteralWordPart__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8797:1: ( ( ( rule__LiteralWordPart__Alternatives_1_0 ) ) )
            // InternalMyBashParser.g:8798:1: ( ( rule__LiteralWordPart__Alternatives_1_0 ) )
            {
            // InternalMyBashParser.g:8798:1: ( ( rule__LiteralWordPart__Alternatives_1_0 ) )
            // InternalMyBashParser.g:8799:2: ( rule__LiteralWordPart__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getAlternatives_1_0()); 
            }
            // InternalMyBashParser.g:8800:2: ( rule__LiteralWordPart__Alternatives_1_0 )
            // InternalMyBashParser.g:8800:3: rule__LiteralWordPart__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_1__0"
    // InternalMyBashParser.g:8809:1: rule__LiteralWordPart__Group_1_0_1__0 : rule__LiteralWordPart__Group_1_0_1__0__Impl rule__LiteralWordPart__Group_1_0_1__1 ;
    public final void rule__LiteralWordPart__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8813:1: ( rule__LiteralWordPart__Group_1_0_1__0__Impl rule__LiteralWordPart__Group_1_0_1__1 )
            // InternalMyBashParser.g:8814:2: rule__LiteralWordPart__Group_1_0_1__0__Impl rule__LiteralWordPart__Group_1_0_1__1
            {
            pushFollow(FOLLOW_64);
            rule__LiteralWordPart__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_1__0"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_1__0__Impl"
    // InternalMyBashParser.g:8821:1: rule__LiteralWordPart__Group_1_0_1__0__Impl : ( Apostrophe ) ;
    public final void rule__LiteralWordPart__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8825:1: ( ( Apostrophe ) )
            // InternalMyBashParser.g:8826:1: ( Apostrophe )
            {
            // InternalMyBashParser.g:8826:1: ( Apostrophe )
            // InternalMyBashParser.g:8827:2: Apostrophe
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()); 
            }
            match(input,Apostrophe,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_1__1"
    // InternalMyBashParser.g:8836:1: rule__LiteralWordPart__Group_1_0_1__1 : rule__LiteralWordPart__Group_1_0_1__1__Impl rule__LiteralWordPart__Group_1_0_1__2 ;
    public final void rule__LiteralWordPart__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8840:1: ( rule__LiteralWordPart__Group_1_0_1__1__Impl rule__LiteralWordPart__Group_1_0_1__2 )
            // InternalMyBashParser.g:8841:2: rule__LiteralWordPart__Group_1_0_1__1__Impl rule__LiteralWordPart__Group_1_0_1__2
            {
            pushFollow(FOLLOW_64);
            rule__LiteralWordPart__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group_1_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_1__1"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_1__1__Impl"
    // InternalMyBashParser.g:8848:1: rule__LiteralWordPart__Group_1_0_1__1__Impl : ( ( rule__LiteralWordPart__ValuesAssignment_1_0_1_1 )? ) ;
    public final void rule__LiteralWordPart__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8852:1: ( ( ( rule__LiteralWordPart__ValuesAssignment_1_0_1_1 )? ) )
            // InternalMyBashParser.g:8853:1: ( ( rule__LiteralWordPart__ValuesAssignment_1_0_1_1 )? )
            {
            // InternalMyBashParser.g:8853:1: ( ( rule__LiteralWordPart__ValuesAssignment_1_0_1_1 )? )
            // InternalMyBashParser.g:8854:2: ( rule__LiteralWordPart__ValuesAssignment_1_0_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getValuesAssignment_1_0_1_1()); 
            }
            // InternalMyBashParser.g:8855:2: ( rule__LiteralWordPart__ValuesAssignment_1_0_1_1 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_WORD_PART) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalMyBashParser.g:8855:3: rule__LiteralWordPart__ValuesAssignment_1_0_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralWordPart__ValuesAssignment_1_0_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getValuesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_1__2"
    // InternalMyBashParser.g:8863:1: rule__LiteralWordPart__Group_1_0_1__2 : rule__LiteralWordPart__Group_1_0_1__2__Impl ;
    public final void rule__LiteralWordPart__Group_1_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8867:1: ( rule__LiteralWordPart__Group_1_0_1__2__Impl )
            // InternalMyBashParser.g:8868:2: rule__LiteralWordPart__Group_1_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group_1_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_1__2"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_1__2__Impl"
    // InternalMyBashParser.g:8874:1: rule__LiteralWordPart__Group_1_0_1__2__Impl : ( Apostrophe ) ;
    public final void rule__LiteralWordPart__Group_1_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8878:1: ( ( Apostrophe ) )
            // InternalMyBashParser.g:8879:1: ( Apostrophe )
            {
            // InternalMyBashParser.g:8879:1: ( Apostrophe )
            // InternalMyBashParser.g:8880:2: Apostrophe
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2()); 
            }
            match(input,Apostrophe,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_1__2__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_2__0"
    // InternalMyBashParser.g:8890:1: rule__LiteralWordPart__Group_1_0_2__0 : rule__LiteralWordPart__Group_1_0_2__0__Impl rule__LiteralWordPart__Group_1_0_2__1 ;
    public final void rule__LiteralWordPart__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8894:1: ( rule__LiteralWordPart__Group_1_0_2__0__Impl rule__LiteralWordPart__Group_1_0_2__1 )
            // InternalMyBashParser.g:8895:2: rule__LiteralWordPart__Group_1_0_2__0__Impl rule__LiteralWordPart__Group_1_0_2__1
            {
            pushFollow(FOLLOW_65);
            rule__LiteralWordPart__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_2__0"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_2__0__Impl"
    // InternalMyBashParser.g:8902:1: rule__LiteralWordPart__Group_1_0_2__0__Impl : ( QuotationMark ) ;
    public final void rule__LiteralWordPart__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8906:1: ( ( QuotationMark ) )
            // InternalMyBashParser.g:8907:1: ( QuotationMark )
            {
            // InternalMyBashParser.g:8907:1: ( QuotationMark )
            // InternalMyBashParser.g:8908:2: QuotationMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()); 
            }
            match(input,QuotationMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_2__1"
    // InternalMyBashParser.g:8917:1: rule__LiteralWordPart__Group_1_0_2__1 : rule__LiteralWordPart__Group_1_0_2__1__Impl rule__LiteralWordPart__Group_1_0_2__2 ;
    public final void rule__LiteralWordPart__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8921:1: ( rule__LiteralWordPart__Group_1_0_2__1__Impl rule__LiteralWordPart__Group_1_0_2__2 )
            // InternalMyBashParser.g:8922:2: rule__LiteralWordPart__Group_1_0_2__1__Impl rule__LiteralWordPart__Group_1_0_2__2
            {
            pushFollow(FOLLOW_65);
            rule__LiteralWordPart__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_2__1"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_2__1__Impl"
    // InternalMyBashParser.g:8929:1: rule__LiteralWordPart__Group_1_0_2__1__Impl : ( ( rule__LiteralWordPart__ValuesAssignment_1_0_2_1 )* ) ;
    public final void rule__LiteralWordPart__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8933:1: ( ( ( rule__LiteralWordPart__ValuesAssignment_1_0_2_1 )* ) )
            // InternalMyBashParser.g:8934:1: ( ( rule__LiteralWordPart__ValuesAssignment_1_0_2_1 )* )
            {
            // InternalMyBashParser.g:8934:1: ( ( rule__LiteralWordPart__ValuesAssignment_1_0_2_1 )* )
            // InternalMyBashParser.g:8935:2: ( rule__LiteralWordPart__ValuesAssignment_1_0_2_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getValuesAssignment_1_0_2_1()); 
            }
            // InternalMyBashParser.g:8936:2: ( rule__LiteralWordPart__ValuesAssignment_1_0_2_1 )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==RULE_WORD_PART) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalMyBashParser.g:8936:3: rule__LiteralWordPart__ValuesAssignment_1_0_2_1
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__LiteralWordPart__ValuesAssignment_1_0_2_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getValuesAssignment_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_2__2"
    // InternalMyBashParser.g:8944:1: rule__LiteralWordPart__Group_1_0_2__2 : rule__LiteralWordPart__Group_1_0_2__2__Impl ;
    public final void rule__LiteralWordPart__Group_1_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8948:1: ( rule__LiteralWordPart__Group_1_0_2__2__Impl )
            // InternalMyBashParser.g:8949:2: rule__LiteralWordPart__Group_1_0_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralWordPart__Group_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_2__2"


    // $ANTLR start "rule__LiteralWordPart__Group_1_0_2__2__Impl"
    // InternalMyBashParser.g:8955:1: rule__LiteralWordPart__Group_1_0_2__2__Impl : ( QuotationMark ) ;
    public final void rule__LiteralWordPart__Group_1_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8959:1: ( ( QuotationMark ) )
            // InternalMyBashParser.g:8960:1: ( QuotationMark )
            {
            // InternalMyBashParser.g:8960:1: ( QuotationMark )
            // InternalMyBashParser.g:8961:2: QuotationMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2()); 
            }
            match(input,QuotationMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__Group_1_0_2__2__Impl"


    // $ANTLR start "rule__CondOrAnd__Group__0"
    // InternalMyBashParser.g:8971:1: rule__CondOrAnd__Group__0 : rule__CondOrAnd__Group__0__Impl rule__CondOrAnd__Group__1 ;
    public final void rule__CondOrAnd__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8975:1: ( rule__CondOrAnd__Group__0__Impl rule__CondOrAnd__Group__1 )
            // InternalMyBashParser.g:8976:2: rule__CondOrAnd__Group__0__Impl rule__CondOrAnd__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__CondOrAnd__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group__0"


    // $ANTLR start "rule__CondOrAnd__Group__0__Impl"
    // InternalMyBashParser.g:8983:1: rule__CondOrAnd__Group__0__Impl : ( ruleCondExp ) ;
    public final void rule__CondOrAnd__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:8987:1: ( ( ruleCondExp ) )
            // InternalMyBashParser.g:8988:1: ( ruleCondExp )
            {
            // InternalMyBashParser.g:8988:1: ( ruleCondExp )
            // InternalMyBashParser.g:8989:2: ruleCondExp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndAccess().getCondExpParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCondExp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndAccess().getCondExpParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group__0__Impl"


    // $ANTLR start "rule__CondOrAnd__Group__1"
    // InternalMyBashParser.g:8998:1: rule__CondOrAnd__Group__1 : rule__CondOrAnd__Group__1__Impl ;
    public final void rule__CondOrAnd__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9002:1: ( rule__CondOrAnd__Group__1__Impl )
            // InternalMyBashParser.g:9003:2: rule__CondOrAnd__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group__1"


    // $ANTLR start "rule__CondOrAnd__Group__1__Impl"
    // InternalMyBashParser.g:9009:1: rule__CondOrAnd__Group__1__Impl : ( ( rule__CondOrAnd__Group_1__0 )* ) ;
    public final void rule__CondOrAnd__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9013:1: ( ( ( rule__CondOrAnd__Group_1__0 )* ) )
            // InternalMyBashParser.g:9014:1: ( ( rule__CondOrAnd__Group_1__0 )* )
            {
            // InternalMyBashParser.g:9014:1: ( ( rule__CondOrAnd__Group_1__0 )* )
            // InternalMyBashParser.g:9015:2: ( rule__CondOrAnd__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:9016:2: ( rule__CondOrAnd__Group_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==AmpersandAmpersand||LA97_0==VerticalLineVerticalLine) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalMyBashParser.g:9016:3: rule__CondOrAnd__Group_1__0
            	    {
            	    pushFollow(FOLLOW_67);
            	    rule__CondOrAnd__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group__1__Impl"


    // $ANTLR start "rule__CondOrAnd__Group_1__0"
    // InternalMyBashParser.g:9025:1: rule__CondOrAnd__Group_1__0 : rule__CondOrAnd__Group_1__0__Impl rule__CondOrAnd__Group_1__1 ;
    public final void rule__CondOrAnd__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9029:1: ( rule__CondOrAnd__Group_1__0__Impl rule__CondOrAnd__Group_1__1 )
            // InternalMyBashParser.g:9030:2: rule__CondOrAnd__Group_1__0__Impl rule__CondOrAnd__Group_1__1
            {
            pushFollow(FOLLOW_66);
            rule__CondOrAnd__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group_1__0"


    // $ANTLR start "rule__CondOrAnd__Group_1__0__Impl"
    // InternalMyBashParser.g:9037:1: rule__CondOrAnd__Group_1__0__Impl : ( () ) ;
    public final void rule__CondOrAnd__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9041:1: ( ( () ) )
            // InternalMyBashParser.g:9042:1: ( () )
            {
            // InternalMyBashParser.g:9042:1: ( () )
            // InternalMyBashParser.g:9043:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndAccess().getCondUnaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:9044:2: ()
            // InternalMyBashParser.g:9044:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndAccess().getCondUnaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group_1__0__Impl"


    // $ANTLR start "rule__CondOrAnd__Group_1__1"
    // InternalMyBashParser.g:9052:1: rule__CondOrAnd__Group_1__1 : rule__CondOrAnd__Group_1__1__Impl rule__CondOrAnd__Group_1__2 ;
    public final void rule__CondOrAnd__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9056:1: ( rule__CondOrAnd__Group_1__1__Impl rule__CondOrAnd__Group_1__2 )
            // InternalMyBashParser.g:9057:2: rule__CondOrAnd__Group_1__1__Impl rule__CondOrAnd__Group_1__2
            {
            pushFollow(FOLLOW_29);
            rule__CondOrAnd__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group_1__1"


    // $ANTLR start "rule__CondOrAnd__Group_1__1__Impl"
    // InternalMyBashParser.g:9064:1: rule__CondOrAnd__Group_1__1__Impl : ( ( rule__CondOrAnd__Alternatives_1_1 ) ) ;
    public final void rule__CondOrAnd__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9068:1: ( ( ( rule__CondOrAnd__Alternatives_1_1 ) ) )
            // InternalMyBashParser.g:9069:1: ( ( rule__CondOrAnd__Alternatives_1_1 ) )
            {
            // InternalMyBashParser.g:9069:1: ( ( rule__CondOrAnd__Alternatives_1_1 ) )
            // InternalMyBashParser.g:9070:2: ( rule__CondOrAnd__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndAccess().getAlternatives_1_1()); 
            }
            // InternalMyBashParser.g:9071:2: ( rule__CondOrAnd__Alternatives_1_1 )
            // InternalMyBashParser.g:9071:3: rule__CondOrAnd__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group_1__1__Impl"


    // $ANTLR start "rule__CondOrAnd__Group_1__2"
    // InternalMyBashParser.g:9079:1: rule__CondOrAnd__Group_1__2 : rule__CondOrAnd__Group_1__2__Impl ;
    public final void rule__CondOrAnd__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9083:1: ( rule__CondOrAnd__Group_1__2__Impl )
            // InternalMyBashParser.g:9084:2: rule__CondOrAnd__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group_1__2"


    // $ANTLR start "rule__CondOrAnd__Group_1__2__Impl"
    // InternalMyBashParser.g:9090:1: rule__CondOrAnd__Group_1__2__Impl : ( ( rule__CondOrAnd__RightAssignment_1_2 ) ) ;
    public final void rule__CondOrAnd__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9094:1: ( ( ( rule__CondOrAnd__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:9095:1: ( ( rule__CondOrAnd__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:9095:1: ( ( rule__CondOrAnd__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:9096:2: ( rule__CondOrAnd__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:9097:2: ( rule__CondOrAnd__RightAssignment_1_2 )
            // InternalMyBashParser.g:9097:3: rule__CondOrAnd__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__CondOrAnd__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__Group_1__2__Impl"


    // $ANTLR start "rule__CondExp__Group_0__0"
    // InternalMyBashParser.g:9106:1: rule__CondExp__Group_0__0 : rule__CondExp__Group_0__0__Impl rule__CondExp__Group_0__1 ;
    public final void rule__CondExp__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9110:1: ( rule__CondExp__Group_0__0__Impl rule__CondExp__Group_0__1 )
            // InternalMyBashParser.g:9111:2: rule__CondExp__Group_0__0__Impl rule__CondExp__Group_0__1
            {
            pushFollow(FOLLOW_68);
            rule__CondExp__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_0__0"


    // $ANTLR start "rule__CondExp__Group_0__0__Impl"
    // InternalMyBashParser.g:9118:1: rule__CondExp__Group_0__0__Impl : ( () ) ;
    public final void rule__CondExp__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9122:1: ( ( () ) )
            // InternalMyBashParser.g:9123:1: ( () )
            {
            // InternalMyBashParser.g:9123:1: ( () )
            // InternalMyBashParser.g:9124:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getCondUnaryExpressionAction_0_0()); 
            }
            // InternalMyBashParser.g:9125:2: ()
            // InternalMyBashParser.g:9125:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getCondUnaryExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_0__0__Impl"


    // $ANTLR start "rule__CondExp__Group_0__1"
    // InternalMyBashParser.g:9133:1: rule__CondExp__Group_0__1 : rule__CondExp__Group_0__1__Impl rule__CondExp__Group_0__2 ;
    public final void rule__CondExp__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9137:1: ( rule__CondExp__Group_0__1__Impl rule__CondExp__Group_0__2 )
            // InternalMyBashParser.g:9138:2: rule__CondExp__Group_0__1__Impl rule__CondExp__Group_0__2
            {
            pushFollow(FOLLOW_21);
            rule__CondExp__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_0__1"


    // $ANTLR start "rule__CondExp__Group_0__1__Impl"
    // InternalMyBashParser.g:9145:1: rule__CondExp__Group_0__1__Impl : ( ( rule__CondExp__OpAssignment_0_1 ) ) ;
    public final void rule__CondExp__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9149:1: ( ( ( rule__CondExp__OpAssignment_0_1 ) ) )
            // InternalMyBashParser.g:9150:1: ( ( rule__CondExp__OpAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:9150:1: ( ( rule__CondExp__OpAssignment_0_1 ) )
            // InternalMyBashParser.g:9151:2: ( rule__CondExp__OpAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOpAssignment_0_1()); 
            }
            // InternalMyBashParser.g:9152:2: ( rule__CondExp__OpAssignment_0_1 )
            // InternalMyBashParser.g:9152:3: rule__CondExp__OpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__OpAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOpAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_0__1__Impl"


    // $ANTLR start "rule__CondExp__Group_0__2"
    // InternalMyBashParser.g:9160:1: rule__CondExp__Group_0__2 : rule__CondExp__Group_0__2__Impl ;
    public final void rule__CondExp__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9164:1: ( rule__CondExp__Group_0__2__Impl )
            // InternalMyBashParser.g:9165:2: rule__CondExp__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_0__2"


    // $ANTLR start "rule__CondExp__Group_0__2__Impl"
    // InternalMyBashParser.g:9171:1: rule__CondExp__Group_0__2__Impl : ( ( rule__CondExp__OperandAssignment_0_2 ) ) ;
    public final void rule__CondExp__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9175:1: ( ( ( rule__CondExp__OperandAssignment_0_2 ) ) )
            // InternalMyBashParser.g:9176:1: ( ( rule__CondExp__OperandAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:9176:1: ( ( rule__CondExp__OperandAssignment_0_2 ) )
            // InternalMyBashParser.g:9177:2: ( rule__CondExp__OperandAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOperandAssignment_0_2()); 
            }
            // InternalMyBashParser.g:9178:2: ( rule__CondExp__OperandAssignment_0_2 )
            // InternalMyBashParser.g:9178:3: rule__CondExp__OperandAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__OperandAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOperandAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_0__2__Impl"


    // $ANTLR start "rule__CondExp__Group_1__0"
    // InternalMyBashParser.g:9187:1: rule__CondExp__Group_1__0 : rule__CondExp__Group_1__0__Impl rule__CondExp__Group_1__1 ;
    public final void rule__CondExp__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9191:1: ( rule__CondExp__Group_1__0__Impl rule__CondExp__Group_1__1 )
            // InternalMyBashParser.g:9192:2: rule__CondExp__Group_1__0__Impl rule__CondExp__Group_1__1
            {
            pushFollow(FOLLOW_69);
            rule__CondExp__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1__0"


    // $ANTLR start "rule__CondExp__Group_1__0__Impl"
    // InternalMyBashParser.g:9199:1: rule__CondExp__Group_1__0__Impl : ( ruleCondConst ) ;
    public final void rule__CondExp__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9203:1: ( ( ruleCondConst ) )
            // InternalMyBashParser.g:9204:1: ( ruleCondConst )
            {
            // InternalMyBashParser.g:9204:1: ( ruleCondConst )
            // InternalMyBashParser.g:9205:2: ruleCondConst
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getCondConstParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCondConst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getCondConstParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1__0__Impl"


    // $ANTLR start "rule__CondExp__Group_1__1"
    // InternalMyBashParser.g:9214:1: rule__CondExp__Group_1__1 : rule__CondExp__Group_1__1__Impl ;
    public final void rule__CondExp__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9218:1: ( rule__CondExp__Group_1__1__Impl )
            // InternalMyBashParser.g:9219:2: rule__CondExp__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1__1"


    // $ANTLR start "rule__CondExp__Group_1__1__Impl"
    // InternalMyBashParser.g:9225:1: rule__CondExp__Group_1__1__Impl : ( ( rule__CondExp__Group_1_1__0 )? ) ;
    public final void rule__CondExp__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9229:1: ( ( ( rule__CondExp__Group_1_1__0 )? ) )
            // InternalMyBashParser.g:9230:1: ( ( rule__CondExp__Group_1_1__0 )? )
            {
            // InternalMyBashParser.g:9230:1: ( ( rule__CondExp__Group_1_1__0 )? )
            // InternalMyBashParser.g:9231:2: ( rule__CondExp__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getGroup_1_1()); 
            }
            // InternalMyBashParser.g:9232:2: ( rule__CondExp__Group_1_1__0 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==EqualsSignTilde||LA98_0==RULE_C_B_OP) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalMyBashParser.g:9232:3: rule__CondExp__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CondExp__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1__1__Impl"


    // $ANTLR start "rule__CondExp__Group_1_1__0"
    // InternalMyBashParser.g:9241:1: rule__CondExp__Group_1_1__0 : rule__CondExp__Group_1_1__0__Impl rule__CondExp__Group_1_1__1 ;
    public final void rule__CondExp__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9245:1: ( rule__CondExp__Group_1_1__0__Impl rule__CondExp__Group_1_1__1 )
            // InternalMyBashParser.g:9246:2: rule__CondExp__Group_1_1__0__Impl rule__CondExp__Group_1_1__1
            {
            pushFollow(FOLLOW_69);
            rule__CondExp__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1__0"


    // $ANTLR start "rule__CondExp__Group_1_1__0__Impl"
    // InternalMyBashParser.g:9253:1: rule__CondExp__Group_1_1__0__Impl : ( () ) ;
    public final void rule__CondExp__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9257:1: ( ( () ) )
            // InternalMyBashParser.g:9258:1: ( () )
            {
            // InternalMyBashParser.g:9258:1: ( () )
            // InternalMyBashParser.g:9259:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getCondBinaryExpressionLeftAction_1_1_0()); 
            }
            // InternalMyBashParser.g:9260:2: ()
            // InternalMyBashParser.g:9260:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getCondBinaryExpressionLeftAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1__0__Impl"


    // $ANTLR start "rule__CondExp__Group_1_1__1"
    // InternalMyBashParser.g:9268:1: rule__CondExp__Group_1_1__1 : rule__CondExp__Group_1_1__1__Impl ;
    public final void rule__CondExp__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9272:1: ( rule__CondExp__Group_1_1__1__Impl )
            // InternalMyBashParser.g:9273:2: rule__CondExp__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1__1"


    // $ANTLR start "rule__CondExp__Group_1_1__1__Impl"
    // InternalMyBashParser.g:9279:1: rule__CondExp__Group_1_1__1__Impl : ( ( rule__CondExp__Alternatives_1_1_1 ) ) ;
    public final void rule__CondExp__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9283:1: ( ( ( rule__CondExp__Alternatives_1_1_1 ) ) )
            // InternalMyBashParser.g:9284:1: ( ( rule__CondExp__Alternatives_1_1_1 ) )
            {
            // InternalMyBashParser.g:9284:1: ( ( rule__CondExp__Alternatives_1_1_1 ) )
            // InternalMyBashParser.g:9285:2: ( rule__CondExp__Alternatives_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getAlternatives_1_1_1()); 
            }
            // InternalMyBashParser.g:9286:2: ( rule__CondExp__Alternatives_1_1_1 )
            // InternalMyBashParser.g:9286:3: rule__CondExp__Alternatives_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Alternatives_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getAlternatives_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1__1__Impl"


    // $ANTLR start "rule__CondExp__Group_1_1_1_0__0"
    // InternalMyBashParser.g:9295:1: rule__CondExp__Group_1_1_1_0__0 : rule__CondExp__Group_1_1_1_0__0__Impl rule__CondExp__Group_1_1_1_0__1 ;
    public final void rule__CondExp__Group_1_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9299:1: ( rule__CondExp__Group_1_1_1_0__0__Impl rule__CondExp__Group_1_1_1_0__1 )
            // InternalMyBashParser.g:9300:2: rule__CondExp__Group_1_1_1_0__0__Impl rule__CondExp__Group_1_1_1_0__1
            {
            pushFollow(FOLLOW_21);
            rule__CondExp__Group_1_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_0__0"


    // $ANTLR start "rule__CondExp__Group_1_1_1_0__0__Impl"
    // InternalMyBashParser.g:9307:1: rule__CondExp__Group_1_1_1_0__0__Impl : ( ( rule__CondExp__OpAssignment_1_1_1_0_0 ) ) ;
    public final void rule__CondExp__Group_1_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9311:1: ( ( ( rule__CondExp__OpAssignment_1_1_1_0_0 ) ) )
            // InternalMyBashParser.g:9312:1: ( ( rule__CondExp__OpAssignment_1_1_1_0_0 ) )
            {
            // InternalMyBashParser.g:9312:1: ( ( rule__CondExp__OpAssignment_1_1_1_0_0 ) )
            // InternalMyBashParser.g:9313:2: ( rule__CondExp__OpAssignment_1_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOpAssignment_1_1_1_0_0()); 
            }
            // InternalMyBashParser.g:9314:2: ( rule__CondExp__OpAssignment_1_1_1_0_0 )
            // InternalMyBashParser.g:9314:3: rule__CondExp__OpAssignment_1_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__OpAssignment_1_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOpAssignment_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_0__0__Impl"


    // $ANTLR start "rule__CondExp__Group_1_1_1_0__1"
    // InternalMyBashParser.g:9322:1: rule__CondExp__Group_1_1_1_0__1 : rule__CondExp__Group_1_1_1_0__1__Impl ;
    public final void rule__CondExp__Group_1_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9326:1: ( rule__CondExp__Group_1_1_1_0__1__Impl )
            // InternalMyBashParser.g:9327:2: rule__CondExp__Group_1_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_0__1"


    // $ANTLR start "rule__CondExp__Group_1_1_1_0__1__Impl"
    // InternalMyBashParser.g:9333:1: rule__CondExp__Group_1_1_1_0__1__Impl : ( ( rule__CondExp__RightAssignment_1_1_1_0_1 ) ) ;
    public final void rule__CondExp__Group_1_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9337:1: ( ( ( rule__CondExp__RightAssignment_1_1_1_0_1 ) ) )
            // InternalMyBashParser.g:9338:1: ( ( rule__CondExp__RightAssignment_1_1_1_0_1 ) )
            {
            // InternalMyBashParser.g:9338:1: ( ( rule__CondExp__RightAssignment_1_1_1_0_1 ) )
            // InternalMyBashParser.g:9339:2: ( rule__CondExp__RightAssignment_1_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getRightAssignment_1_1_1_0_1()); 
            }
            // InternalMyBashParser.g:9340:2: ( rule__CondExp__RightAssignment_1_1_1_0_1 )
            // InternalMyBashParser.g:9340:3: rule__CondExp__RightAssignment_1_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__RightAssignment_1_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getRightAssignment_1_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_0__1__Impl"


    // $ANTLR start "rule__CondExp__Group_1_1_1_1__0"
    // InternalMyBashParser.g:9349:1: rule__CondExp__Group_1_1_1_1__0 : rule__CondExp__Group_1_1_1_1__0__Impl rule__CondExp__Group_1_1_1_1__1 ;
    public final void rule__CondExp__Group_1_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9353:1: ( rule__CondExp__Group_1_1_1_1__0__Impl rule__CondExp__Group_1_1_1_1__1 )
            // InternalMyBashParser.g:9354:2: rule__CondExp__Group_1_1_1_1__0__Impl rule__CondExp__Group_1_1_1_1__1
            {
            pushFollow(FOLLOW_38);
            rule__CondExp__Group_1_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_1__0"


    // $ANTLR start "rule__CondExp__Group_1_1_1_1__0__Impl"
    // InternalMyBashParser.g:9361:1: rule__CondExp__Group_1_1_1_1__0__Impl : ( ( rule__CondExp__OpAssignment_1_1_1_1_0 ) ) ;
    public final void rule__CondExp__Group_1_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9365:1: ( ( ( rule__CondExp__OpAssignment_1_1_1_1_0 ) ) )
            // InternalMyBashParser.g:9366:1: ( ( rule__CondExp__OpAssignment_1_1_1_1_0 ) )
            {
            // InternalMyBashParser.g:9366:1: ( ( rule__CondExp__OpAssignment_1_1_1_1_0 ) )
            // InternalMyBashParser.g:9367:2: ( rule__CondExp__OpAssignment_1_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOpAssignment_1_1_1_1_0()); 
            }
            // InternalMyBashParser.g:9368:2: ( rule__CondExp__OpAssignment_1_1_1_1_0 )
            // InternalMyBashParser.g:9368:3: rule__CondExp__OpAssignment_1_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__OpAssignment_1_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOpAssignment_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_1__0__Impl"


    // $ANTLR start "rule__CondExp__Group_1_1_1_1__1"
    // InternalMyBashParser.g:9376:1: rule__CondExp__Group_1_1_1_1__1 : rule__CondExp__Group_1_1_1_1__1__Impl ;
    public final void rule__CondExp__Group_1_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9380:1: ( rule__CondExp__Group_1_1_1_1__1__Impl )
            // InternalMyBashParser.g:9381:2: rule__CondExp__Group_1_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_1_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_1__1"


    // $ANTLR start "rule__CondExp__Group_1_1_1_1__1__Impl"
    // InternalMyBashParser.g:9387:1: rule__CondExp__Group_1_1_1_1__1__Impl : ( ( rule__CondExp__RightAssignment_1_1_1_1_1 ) ) ;
    public final void rule__CondExp__Group_1_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9391:1: ( ( ( rule__CondExp__RightAssignment_1_1_1_1_1 ) ) )
            // InternalMyBashParser.g:9392:1: ( ( rule__CondExp__RightAssignment_1_1_1_1_1 ) )
            {
            // InternalMyBashParser.g:9392:1: ( ( rule__CondExp__RightAssignment_1_1_1_1_1 ) )
            // InternalMyBashParser.g:9393:2: ( rule__CondExp__RightAssignment_1_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getRightAssignment_1_1_1_1_1()); 
            }
            // InternalMyBashParser.g:9394:2: ( rule__CondExp__RightAssignment_1_1_1_1_1 )
            // InternalMyBashParser.g:9394:3: rule__CondExp__RightAssignment_1_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__RightAssignment_1_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getRightAssignment_1_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_1_1_1_1__1__Impl"


    // $ANTLR start "rule__CondExp__Group_2__0"
    // InternalMyBashParser.g:9403:1: rule__CondExp__Group_2__0 : rule__CondExp__Group_2__0__Impl rule__CondExp__Group_2__1 ;
    public final void rule__CondExp__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9407:1: ( rule__CondExp__Group_2__0__Impl rule__CondExp__Group_2__1 )
            // InternalMyBashParser.g:9408:2: rule__CondExp__Group_2__0__Impl rule__CondExp__Group_2__1
            {
            pushFollow(FOLLOW_29);
            rule__CondExp__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_2__0"


    // $ANTLR start "rule__CondExp__Group_2__0__Impl"
    // InternalMyBashParser.g:9415:1: rule__CondExp__Group_2__0__Impl : ( LeftParenthesis ) ;
    public final void rule__CondExp__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9419:1: ( ( LeftParenthesis ) )
            // InternalMyBashParser.g:9420:1: ( LeftParenthesis )
            {
            // InternalMyBashParser.g:9420:1: ( LeftParenthesis )
            // InternalMyBashParser.g:9421:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getLeftParenthesisKeyword_2_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_2__0__Impl"


    // $ANTLR start "rule__CondExp__Group_2__1"
    // InternalMyBashParser.g:9430:1: rule__CondExp__Group_2__1 : rule__CondExp__Group_2__1__Impl rule__CondExp__Group_2__2 ;
    public final void rule__CondExp__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9434:1: ( rule__CondExp__Group_2__1__Impl rule__CondExp__Group_2__2 )
            // InternalMyBashParser.g:9435:2: rule__CondExp__Group_2__1__Impl rule__CondExp__Group_2__2
            {
            pushFollow(FOLLOW_19);
            rule__CondExp__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_2__1"


    // $ANTLR start "rule__CondExp__Group_2__1__Impl"
    // InternalMyBashParser.g:9442:1: rule__CondExp__Group_2__1__Impl : ( ruleCondOrAnd ) ;
    public final void rule__CondExp__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9446:1: ( ( ruleCondOrAnd ) )
            // InternalMyBashParser.g:9447:1: ( ruleCondOrAnd )
            {
            // InternalMyBashParser.g:9447:1: ( ruleCondOrAnd )
            // InternalMyBashParser.g:9448:2: ruleCondOrAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getCondOrAndParserRuleCall_2_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleCondOrAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getCondOrAndParserRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_2__1__Impl"


    // $ANTLR start "rule__CondExp__Group_2__2"
    // InternalMyBashParser.g:9457:1: rule__CondExp__Group_2__2 : rule__CondExp__Group_2__2__Impl ;
    public final void rule__CondExp__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9461:1: ( rule__CondExp__Group_2__2__Impl )
            // InternalMyBashParser.g:9462:2: rule__CondExp__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CondExp__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_2__2"


    // $ANTLR start "rule__CondExp__Group_2__2__Impl"
    // InternalMyBashParser.g:9468:1: rule__CondExp__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__CondExp__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9472:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:9473:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:9473:1: ( RightParenthesis )
            // InternalMyBashParser.g:9474:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__Group_2__2__Impl"


    // $ANTLR start "rule__RegularExpression__Group__0"
    // InternalMyBashParser.g:9484:1: rule__RegularExpression__Group__0 : rule__RegularExpression__Group__0__Impl rule__RegularExpression__Group__1 ;
    public final void rule__RegularExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9488:1: ( rule__RegularExpression__Group__0__Impl rule__RegularExpression__Group__1 )
            // InternalMyBashParser.g:9489:2: rule__RegularExpression__Group__0__Impl rule__RegularExpression__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__RegularExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RegularExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group__0"


    // $ANTLR start "rule__RegularExpression__Group__0__Impl"
    // InternalMyBashParser.g:9496:1: rule__RegularExpression__Group__0__Impl : ( ruleRegularElements ) ;
    public final void rule__RegularExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9500:1: ( ( ruleRegularElements ) )
            // InternalMyBashParser.g:9501:1: ( ruleRegularElements )
            {
            // InternalMyBashParser.g:9501:1: ( ruleRegularElements )
            // InternalMyBashParser.g:9502:2: ruleRegularElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getRegularElementsParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRegularElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getRegularElementsParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group__0__Impl"


    // $ANTLR start "rule__RegularExpression__Group__1"
    // InternalMyBashParser.g:9511:1: rule__RegularExpression__Group__1 : rule__RegularExpression__Group__1__Impl ;
    public final void rule__RegularExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9515:1: ( rule__RegularExpression__Group__1__Impl )
            // InternalMyBashParser.g:9516:2: rule__RegularExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RegularExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group__1"


    // $ANTLR start "rule__RegularExpression__Group__1__Impl"
    // InternalMyBashParser.g:9522:1: rule__RegularExpression__Group__1__Impl : ( ( rule__RegularExpression__Group_1__0 )* ) ;
    public final void rule__RegularExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9526:1: ( ( ( rule__RegularExpression__Group_1__0 )* ) )
            // InternalMyBashParser.g:9527:1: ( ( rule__RegularExpression__Group_1__0 )* )
            {
            // InternalMyBashParser.g:9527:1: ( ( rule__RegularExpression__Group_1__0 )* )
            // InternalMyBashParser.g:9528:2: ( rule__RegularExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:9529:2: ( rule__RegularExpression__Group_1__0 )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==VerticalLine) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalMyBashParser.g:9529:3: rule__RegularExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__RegularExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group__1__Impl"


    // $ANTLR start "rule__RegularExpression__Group_1__0"
    // InternalMyBashParser.g:9538:1: rule__RegularExpression__Group_1__0 : rule__RegularExpression__Group_1__0__Impl rule__RegularExpression__Group_1__1 ;
    public final void rule__RegularExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9542:1: ( rule__RegularExpression__Group_1__0__Impl rule__RegularExpression__Group_1__1 )
            // InternalMyBashParser.g:9543:2: rule__RegularExpression__Group_1__0__Impl rule__RegularExpression__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__RegularExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RegularExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group_1__0"


    // $ANTLR start "rule__RegularExpression__Group_1__0__Impl"
    // InternalMyBashParser.g:9550:1: rule__RegularExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__RegularExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9554:1: ( ( () ) )
            // InternalMyBashParser.g:9555:1: ( () )
            {
            // InternalMyBashParser.g:9555:1: ( () )
            // InternalMyBashParser.g:9556:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getRegularExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:9557:2: ()
            // InternalMyBashParser.g:9557:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getRegularExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group_1__0__Impl"


    // $ANTLR start "rule__RegularExpression__Group_1__1"
    // InternalMyBashParser.g:9565:1: rule__RegularExpression__Group_1__1 : rule__RegularExpression__Group_1__1__Impl rule__RegularExpression__Group_1__2 ;
    public final void rule__RegularExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9569:1: ( rule__RegularExpression__Group_1__1__Impl rule__RegularExpression__Group_1__2 )
            // InternalMyBashParser.g:9570:2: rule__RegularExpression__Group_1__1__Impl rule__RegularExpression__Group_1__2
            {
            pushFollow(FOLLOW_38);
            rule__RegularExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RegularExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group_1__1"


    // $ANTLR start "rule__RegularExpression__Group_1__1__Impl"
    // InternalMyBashParser.g:9577:1: rule__RegularExpression__Group_1__1__Impl : ( ( rule__RegularExpression__OpAssignment_1_1 ) ) ;
    public final void rule__RegularExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9581:1: ( ( ( rule__RegularExpression__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:9582:1: ( ( rule__RegularExpression__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:9582:1: ( ( rule__RegularExpression__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:9583:2: ( rule__RegularExpression__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:9584:2: ( rule__RegularExpression__OpAssignment_1_1 )
            // InternalMyBashParser.g:9584:3: rule__RegularExpression__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RegularExpression__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group_1__1__Impl"


    // $ANTLR start "rule__RegularExpression__Group_1__2"
    // InternalMyBashParser.g:9592:1: rule__RegularExpression__Group_1__2 : rule__RegularExpression__Group_1__2__Impl ;
    public final void rule__RegularExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9596:1: ( rule__RegularExpression__Group_1__2__Impl )
            // InternalMyBashParser.g:9597:2: rule__RegularExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RegularExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group_1__2"


    // $ANTLR start "rule__RegularExpression__Group_1__2__Impl"
    // InternalMyBashParser.g:9603:1: rule__RegularExpression__Group_1__2__Impl : ( ( rule__RegularExpression__RightAssignment_1_2 ) ) ;
    public final void rule__RegularExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9607:1: ( ( ( rule__RegularExpression__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:9608:1: ( ( rule__RegularExpression__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:9608:1: ( ( rule__RegularExpression__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:9609:2: ( rule__RegularExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:9610:2: ( rule__RegularExpression__RightAssignment_1_2 )
            // InternalMyBashParser.g:9610:3: rule__RegularExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__RegularExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__Group_1__2__Impl"


    // $ANTLR start "rule__RegularElements__Group__0"
    // InternalMyBashParser.g:9619:1: rule__RegularElements__Group__0 : rule__RegularElements__Group__0__Impl rule__RegularElements__Group__1 ;
    public final void rule__RegularElements__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9623:1: ( rule__RegularElements__Group__0__Impl rule__RegularElements__Group__1 )
            // InternalMyBashParser.g:9624:2: rule__RegularElements__Group__0__Impl rule__RegularElements__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__RegularElements__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RegularElements__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group__0"


    // $ANTLR start "rule__RegularElements__Group__0__Impl"
    // InternalMyBashParser.g:9631:1: rule__RegularElements__Group__0__Impl : ( () ) ;
    public final void rule__RegularElements__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9635:1: ( ( () ) )
            // InternalMyBashParser.g:9636:1: ( () )
            {
            // InternalMyBashParser.g:9636:1: ( () )
            // InternalMyBashParser.g:9637:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getRegularConstAction_0()); 
            }
            // InternalMyBashParser.g:9638:2: ()
            // InternalMyBashParser.g:9638:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getRegularConstAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group__0__Impl"


    // $ANTLR start "rule__RegularElements__Group__1"
    // InternalMyBashParser.g:9646:1: rule__RegularElements__Group__1 : rule__RegularElements__Group__1__Impl ;
    public final void rule__RegularElements__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9650:1: ( rule__RegularElements__Group__1__Impl )
            // InternalMyBashParser.g:9651:2: rule__RegularElements__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RegularElements__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group__1"


    // $ANTLR start "rule__RegularElements__Group__1__Impl"
    // InternalMyBashParser.g:9657:1: rule__RegularElements__Group__1__Impl : ( ( ( rule__RegularElements__Alternatives_1 ) ) ( ( rule__RegularElements__Alternatives_1 )* ) ) ;
    public final void rule__RegularElements__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9661:1: ( ( ( ( rule__RegularElements__Alternatives_1 ) ) ( ( rule__RegularElements__Alternatives_1 )* ) ) )
            // InternalMyBashParser.g:9662:1: ( ( ( rule__RegularElements__Alternatives_1 ) ) ( ( rule__RegularElements__Alternatives_1 )* ) )
            {
            // InternalMyBashParser.g:9662:1: ( ( ( rule__RegularElements__Alternatives_1 ) ) ( ( rule__RegularElements__Alternatives_1 )* ) )
            // InternalMyBashParser.g:9663:2: ( ( rule__RegularElements__Alternatives_1 ) ) ( ( rule__RegularElements__Alternatives_1 )* )
            {
            // InternalMyBashParser.g:9663:2: ( ( rule__RegularElements__Alternatives_1 ) )
            // InternalMyBashParser.g:9664:3: ( rule__RegularElements__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getAlternatives_1()); 
            }
            // InternalMyBashParser.g:9665:3: ( rule__RegularElements__Alternatives_1 )
            // InternalMyBashParser.g:9665:4: rule__RegularElements__Alternatives_1
            {
            pushFollow(FOLLOW_70);
            rule__RegularElements__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getAlternatives_1()); 
            }

            }

            // InternalMyBashParser.g:9668:2: ( ( rule__RegularElements__Alternatives_1 )* )
            // InternalMyBashParser.g:9669:3: ( rule__RegularElements__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getAlternatives_1()); 
            }
            // InternalMyBashParser.g:9670:3: ( rule__RegularElements__Alternatives_1 )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==DollarSignLeftParenthesisLeftParenthesis||LA100_0==DollarSignLeftCurlyBracket||LA100_0==LessThanSignLeftParenthesis||LA100_0==GreaterThanSignLeftParenthesis||LA100_0==QuotationMark||(LA100_0>=Apostrophe && LA100_0<=LeftParenthesis)||(LA100_0>=RULE_S_WORD_PART && LA100_0<=RULE_WORD_PART)||LA100_0==RULE_VARIABLE||LA100_0==RULE_CS_START) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalMyBashParser.g:9670:4: rule__RegularElements__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_70);
            	    rule__RegularElements__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getAlternatives_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group__1__Impl"


    // $ANTLR start "rule__RegularElements__Group_1_0__0"
    // InternalMyBashParser.g:9680:1: rule__RegularElements__Group_1_0__0 : rule__RegularElements__Group_1_0__0__Impl rule__RegularElements__Group_1_0__1 ;
    public final void rule__RegularElements__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9684:1: ( rule__RegularElements__Group_1_0__0__Impl rule__RegularElements__Group_1_0__1 )
            // InternalMyBashParser.g:9685:2: rule__RegularElements__Group_1_0__0__Impl rule__RegularElements__Group_1_0__1
            {
            pushFollow(FOLLOW_71);
            rule__RegularElements__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RegularElements__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group_1_0__0"


    // $ANTLR start "rule__RegularElements__Group_1_0__0__Impl"
    // InternalMyBashParser.g:9692:1: rule__RegularElements__Group_1_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__RegularElements__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9696:1: ( ( LeftParenthesis ) )
            // InternalMyBashParser.g:9697:1: ( LeftParenthesis )
            {
            // InternalMyBashParser.g:9697:1: ( LeftParenthesis )
            // InternalMyBashParser.g:9698:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getLeftParenthesisKeyword_1_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getLeftParenthesisKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group_1_0__0__Impl"


    // $ANTLR start "rule__RegularElements__Group_1_0__1"
    // InternalMyBashParser.g:9707:1: rule__RegularElements__Group_1_0__1 : rule__RegularElements__Group_1_0__1__Impl rule__RegularElements__Group_1_0__2 ;
    public final void rule__RegularElements__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9711:1: ( rule__RegularElements__Group_1_0__1__Impl rule__RegularElements__Group_1_0__2 )
            // InternalMyBashParser.g:9712:2: rule__RegularElements__Group_1_0__1__Impl rule__RegularElements__Group_1_0__2
            {
            pushFollow(FOLLOW_71);
            rule__RegularElements__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RegularElements__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group_1_0__1"


    // $ANTLR start "rule__RegularElements__Group_1_0__1__Impl"
    // InternalMyBashParser.g:9719:1: rule__RegularElements__Group_1_0__1__Impl : ( ( rule__RegularElements__PartsAssignment_1_0_1 )? ) ;
    public final void rule__RegularElements__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9723:1: ( ( ( rule__RegularElements__PartsAssignment_1_0_1 )? ) )
            // InternalMyBashParser.g:9724:1: ( ( rule__RegularElements__PartsAssignment_1_0_1 )? )
            {
            // InternalMyBashParser.g:9724:1: ( ( rule__RegularElements__PartsAssignment_1_0_1 )? )
            // InternalMyBashParser.g:9725:2: ( rule__RegularElements__PartsAssignment_1_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getPartsAssignment_1_0_1()); 
            }
            // InternalMyBashParser.g:9726:2: ( rule__RegularElements__PartsAssignment_1_0_1 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==DollarSignLeftParenthesisLeftParenthesis||LA101_0==DollarSignLeftCurlyBracket||LA101_0==LessThanSignLeftParenthesis||LA101_0==GreaterThanSignLeftParenthesis||LA101_0==QuotationMark||LA101_0==Apostrophe||(LA101_0>=RULE_S_WORD_PART && LA101_0<=RULE_WORD_PART)||LA101_0==RULE_VARIABLE||LA101_0==RULE_CS_START) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalMyBashParser.g:9726:3: rule__RegularElements__PartsAssignment_1_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RegularElements__PartsAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getPartsAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group_1_0__1__Impl"


    // $ANTLR start "rule__RegularElements__Group_1_0__2"
    // InternalMyBashParser.g:9734:1: rule__RegularElements__Group_1_0__2 : rule__RegularElements__Group_1_0__2__Impl ;
    public final void rule__RegularElements__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9738:1: ( rule__RegularElements__Group_1_0__2__Impl )
            // InternalMyBashParser.g:9739:2: rule__RegularElements__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RegularElements__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group_1_0__2"


    // $ANTLR start "rule__RegularElements__Group_1_0__2__Impl"
    // InternalMyBashParser.g:9745:1: rule__RegularElements__Group_1_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__RegularElements__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9749:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:9750:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:9750:1: ( RightParenthesis )
            // InternalMyBashParser.g:9751:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getRightParenthesisKeyword_1_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getRightParenthesisKeyword_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__Group_1_0__2__Impl"


    // $ANTLR start "rule__ArithmeticExpansion__Group__0"
    // InternalMyBashParser.g:9761:1: rule__ArithmeticExpansion__Group__0 : rule__ArithmeticExpansion__Group__0__Impl rule__ArithmeticExpansion__Group__1 ;
    public final void rule__ArithmeticExpansion__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9765:1: ( rule__ArithmeticExpansion__Group__0__Impl rule__ArithmeticExpansion__Group__1 )
            // InternalMyBashParser.g:9766:2: rule__ArithmeticExpansion__Group__0__Impl rule__ArithmeticExpansion__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__ArithmeticExpansion__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArithmeticExpansion__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansion__Group__0"


    // $ANTLR start "rule__ArithmeticExpansion__Group__0__Impl"
    // InternalMyBashParser.g:9773:1: rule__ArithmeticExpansion__Group__0__Impl : ( ruleArithmeticExpansionStart ) ;
    public final void rule__ArithmeticExpansion__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9777:1: ( ( ruleArithmeticExpansionStart ) )
            // InternalMyBashParser.g:9778:1: ( ruleArithmeticExpansionStart )
            {
            // InternalMyBashParser.g:9778:1: ( ruleArithmeticExpansionStart )
            // InternalMyBashParser.g:9779:2: ruleArithmeticExpansionStart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionAccess().getArithmeticExpansionStartParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArithmeticExpansionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionAccess().getArithmeticExpansionStartParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansion__Group__0__Impl"


    // $ANTLR start "rule__ArithmeticExpansion__Group__1"
    // InternalMyBashParser.g:9788:1: rule__ArithmeticExpansion__Group__1 : rule__ArithmeticExpansion__Group__1__Impl ;
    public final void rule__ArithmeticExpansion__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9792:1: ( rule__ArithmeticExpansion__Group__1__Impl )
            // InternalMyBashParser.g:9793:2: rule__ArithmeticExpansion__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticExpansion__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansion__Group__1"


    // $ANTLR start "rule__ArithmeticExpansion__Group__1__Impl"
    // InternalMyBashParser.g:9799:1: rule__ArithmeticExpansion__Group__1__Impl : ( ruleArithmeticExpansionEnd ) ;
    public final void rule__ArithmeticExpansion__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9803:1: ( ( ruleArithmeticExpansionEnd ) )
            // InternalMyBashParser.g:9804:1: ( ruleArithmeticExpansionEnd )
            {
            // InternalMyBashParser.g:9804:1: ( ruleArithmeticExpansionEnd )
            // InternalMyBashParser.g:9805:2: ruleArithmeticExpansionEnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionAccess().getArithmeticExpansionEndParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleArithmeticExpansionEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionAccess().getArithmeticExpansionEndParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansion__Group__1__Impl"


    // $ANTLR start "rule__IndexEvaluation__Group__0"
    // InternalMyBashParser.g:9815:1: rule__IndexEvaluation__Group__0 : rule__IndexEvaluation__Group__0__Impl rule__IndexEvaluation__Group__1 ;
    public final void rule__IndexEvaluation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9819:1: ( rule__IndexEvaluation__Group__0__Impl rule__IndexEvaluation__Group__1 )
            // InternalMyBashParser.g:9820:2: rule__IndexEvaluation__Group__0__Impl rule__IndexEvaluation__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__IndexEvaluation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IndexEvaluation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluation__Group__0"


    // $ANTLR start "rule__IndexEvaluation__Group__0__Impl"
    // InternalMyBashParser.g:9827:1: rule__IndexEvaluation__Group__0__Impl : ( ruleIndexEvaluationStart ) ;
    public final void rule__IndexEvaluation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9831:1: ( ( ruleIndexEvaluationStart ) )
            // InternalMyBashParser.g:9832:1: ( ruleIndexEvaluationStart )
            {
            // InternalMyBashParser.g:9832:1: ( ruleIndexEvaluationStart )
            // InternalMyBashParser.g:9833:2: ruleIndexEvaluationStart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationAccess().getIndexEvaluationStartParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIndexEvaluationStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationAccess().getIndexEvaluationStartParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluation__Group__0__Impl"


    // $ANTLR start "rule__IndexEvaluation__Group__1"
    // InternalMyBashParser.g:9842:1: rule__IndexEvaluation__Group__1 : rule__IndexEvaluation__Group__1__Impl ;
    public final void rule__IndexEvaluation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9846:1: ( rule__IndexEvaluation__Group__1__Impl )
            // InternalMyBashParser.g:9847:2: rule__IndexEvaluation__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IndexEvaluation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluation__Group__1"


    // $ANTLR start "rule__IndexEvaluation__Group__1__Impl"
    // InternalMyBashParser.g:9853:1: rule__IndexEvaluation__Group__1__Impl : ( ( rule__IndexEvaluation__EndAssignment_1 ) ) ;
    public final void rule__IndexEvaluation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9857:1: ( ( ( rule__IndexEvaluation__EndAssignment_1 ) ) )
            // InternalMyBashParser.g:9858:1: ( ( rule__IndexEvaluation__EndAssignment_1 ) )
            {
            // InternalMyBashParser.g:9858:1: ( ( rule__IndexEvaluation__EndAssignment_1 ) )
            // InternalMyBashParser.g:9859:2: ( rule__IndexEvaluation__EndAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationAccess().getEndAssignment_1()); 
            }
            // InternalMyBashParser.g:9860:2: ( rule__IndexEvaluation__EndAssignment_1 )
            // InternalMyBashParser.g:9860:3: rule__IndexEvaluation__EndAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IndexEvaluation__EndAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationAccess().getEndAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluation__Group__1__Impl"


    // $ANTLR start "rule__IndexEvaluationStart__Group__0"
    // InternalMyBashParser.g:9869:1: rule__IndexEvaluationStart__Group__0 : rule__IndexEvaluationStart__Group__0__Impl rule__IndexEvaluationStart__Group__1 ;
    public final void rule__IndexEvaluationStart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9873:1: ( rule__IndexEvaluationStart__Group__0__Impl rule__IndexEvaluationStart__Group__1 )
            // InternalMyBashParser.g:9874:2: rule__IndexEvaluationStart__Group__0__Impl rule__IndexEvaluationStart__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__IndexEvaluationStart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IndexEvaluationStart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluationStart__Group__0"


    // $ANTLR start "rule__IndexEvaluationStart__Group__0__Impl"
    // InternalMyBashParser.g:9881:1: rule__IndexEvaluationStart__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__IndexEvaluationStart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9885:1: ( ( LeftSquareBracket ) )
            // InternalMyBashParser.g:9886:1: ( LeftSquareBracket )
            {
            // InternalMyBashParser.g:9886:1: ( LeftSquareBracket )
            // InternalMyBashParser.g:9887:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationStartAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationStartAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluationStart__Group__0__Impl"


    // $ANTLR start "rule__IndexEvaluationStart__Group__1"
    // InternalMyBashParser.g:9896:1: rule__IndexEvaluationStart__Group__1 : rule__IndexEvaluationStart__Group__1__Impl ;
    public final void rule__IndexEvaluationStart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9900:1: ( rule__IndexEvaluationStart__Group__1__Impl )
            // InternalMyBashParser.g:9901:2: rule__IndexEvaluationStart__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IndexEvaluationStart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluationStart__Group__1"


    // $ANTLR start "rule__IndexEvaluationStart__Group__1__Impl"
    // InternalMyBashParser.g:9907:1: rule__IndexEvaluationStart__Group__1__Impl : ( ( rule__IndexEvaluationStart__ExpressionAssignment_1 ) ) ;
    public final void rule__IndexEvaluationStart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9911:1: ( ( ( rule__IndexEvaluationStart__ExpressionAssignment_1 ) ) )
            // InternalMyBashParser.g:9912:1: ( ( rule__IndexEvaluationStart__ExpressionAssignment_1 ) )
            {
            // InternalMyBashParser.g:9912:1: ( ( rule__IndexEvaluationStart__ExpressionAssignment_1 ) )
            // InternalMyBashParser.g:9913:2: ( rule__IndexEvaluationStart__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationStartAccess().getExpressionAssignment_1()); 
            }
            // InternalMyBashParser.g:9914:2: ( rule__IndexEvaluationStart__ExpressionAssignment_1 )
            // InternalMyBashParser.g:9914:3: rule__IndexEvaluationStart__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IndexEvaluationStart__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationStartAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluationStart__Group__1__Impl"


    // $ANTLR start "rule__ArithmeticExpansionStart__Group__0"
    // InternalMyBashParser.g:9923:1: rule__ArithmeticExpansionStart__Group__0 : rule__ArithmeticExpansionStart__Group__0__Impl rule__ArithmeticExpansionStart__Group__1 ;
    public final void rule__ArithmeticExpansionStart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9927:1: ( rule__ArithmeticExpansionStart__Group__0__Impl rule__ArithmeticExpansionStart__Group__1 )
            // InternalMyBashParser.g:9928:2: rule__ArithmeticExpansionStart__Group__0__Impl rule__ArithmeticExpansionStart__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__ArithmeticExpansionStart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArithmeticExpansionStart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansionStart__Group__0"


    // $ANTLR start "rule__ArithmeticExpansionStart__Group__0__Impl"
    // InternalMyBashParser.g:9935:1: rule__ArithmeticExpansionStart__Group__0__Impl : ( DollarSignLeftParenthesisLeftParenthesis ) ;
    public final void rule__ArithmeticExpansionStart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9939:1: ( ( DollarSignLeftParenthesisLeftParenthesis ) )
            // InternalMyBashParser.g:9940:1: ( DollarSignLeftParenthesisLeftParenthesis )
            {
            // InternalMyBashParser.g:9940:1: ( DollarSignLeftParenthesisLeftParenthesis )
            // InternalMyBashParser.g:9941:2: DollarSignLeftParenthesisLeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionStartAccess().getDollarSignLeftParenthesisLeftParenthesisKeyword_0()); 
            }
            match(input,DollarSignLeftParenthesisLeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionStartAccess().getDollarSignLeftParenthesisLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansionStart__Group__0__Impl"


    // $ANTLR start "rule__ArithmeticExpansionStart__Group__1"
    // InternalMyBashParser.g:9950:1: rule__ArithmeticExpansionStart__Group__1 : rule__ArithmeticExpansionStart__Group__1__Impl ;
    public final void rule__ArithmeticExpansionStart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9954:1: ( rule__ArithmeticExpansionStart__Group__1__Impl )
            // InternalMyBashParser.g:9955:2: rule__ArithmeticExpansionStart__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticExpansionStart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansionStart__Group__1"


    // $ANTLR start "rule__ArithmeticExpansionStart__Group__1__Impl"
    // InternalMyBashParser.g:9961:1: rule__ArithmeticExpansionStart__Group__1__Impl : ( ( rule__ArithmeticExpansionStart__ExpressionAssignment_1 ) ) ;
    public final void rule__ArithmeticExpansionStart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9965:1: ( ( ( rule__ArithmeticExpansionStart__ExpressionAssignment_1 ) ) )
            // InternalMyBashParser.g:9966:1: ( ( rule__ArithmeticExpansionStart__ExpressionAssignment_1 ) )
            {
            // InternalMyBashParser.g:9966:1: ( ( rule__ArithmeticExpansionStart__ExpressionAssignment_1 ) )
            // InternalMyBashParser.g:9967:2: ( rule__ArithmeticExpansionStart__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionStartAccess().getExpressionAssignment_1()); 
            }
            // InternalMyBashParser.g:9968:2: ( rule__ArithmeticExpansionStart__ExpressionAssignment_1 )
            // InternalMyBashParser.g:9968:3: rule__ArithmeticExpansionStart__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArithmeticExpansionStart__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionStartAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansionStart__Group__1__Impl"


    // $ANTLR start "rule__ParameterExpansion__Group_0__0"
    // InternalMyBashParser.g:9977:1: rule__ParameterExpansion__Group_0__0 : rule__ParameterExpansion__Group_0__0__Impl rule__ParameterExpansion__Group_0__1 ;
    public final void rule__ParameterExpansion__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9981:1: ( rule__ParameterExpansion__Group_0__0__Impl rule__ParameterExpansion__Group_0__1 )
            // InternalMyBashParser.g:9982:2: rule__ParameterExpansion__Group_0__0__Impl rule__ParameterExpansion__Group_0__1
            {
            pushFollow(FOLLOW_28);
            rule__ParameterExpansion__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansion__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_0__0"


    // $ANTLR start "rule__ParameterExpansion__Group_0__0__Impl"
    // InternalMyBashParser.g:9989:1: rule__ParameterExpansion__Group_0__0__Impl : ( ruleParameterExpansionStart ) ;
    public final void rule__ParameterExpansion__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:9993:1: ( ( ruleParameterExpansionStart ) )
            // InternalMyBashParser.g:9994:1: ( ruleParameterExpansionStart )
            {
            // InternalMyBashParser.g:9994:1: ( ruleParameterExpansionStart )
            // InternalMyBashParser.g:9995:2: ruleParameterExpansionStart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getParameterExpansionStartParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterExpansionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getParameterExpansionStartParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_0__0__Impl"


    // $ANTLR start "rule__ParameterExpansion__Group_0__1"
    // InternalMyBashParser.g:10004:1: rule__ParameterExpansion__Group_0__1 : rule__ParameterExpansion__Group_0__1__Impl ;
    public final void rule__ParameterExpansion__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10008:1: ( rule__ParameterExpansion__Group_0__1__Impl )
            // InternalMyBashParser.g:10009:2: rule__ParameterExpansion__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansion__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_0__1"


    // $ANTLR start "rule__ParameterExpansion__Group_0__1__Impl"
    // InternalMyBashParser.g:10015:1: rule__ParameterExpansion__Group_0__1__Impl : ( ( rule__ParameterExpansion__EndAssignment_0_1 ) ) ;
    public final void rule__ParameterExpansion__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10019:1: ( ( ( rule__ParameterExpansion__EndAssignment_0_1 ) ) )
            // InternalMyBashParser.g:10020:1: ( ( rule__ParameterExpansion__EndAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:10020:1: ( ( rule__ParameterExpansion__EndAssignment_0_1 ) )
            // InternalMyBashParser.g:10021:2: ( rule__ParameterExpansion__EndAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getEndAssignment_0_1()); 
            }
            // InternalMyBashParser.g:10022:2: ( rule__ParameterExpansion__EndAssignment_0_1 )
            // InternalMyBashParser.g:10022:3: rule__ParameterExpansion__EndAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansion__EndAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getEndAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_0__1__Impl"


    // $ANTLR start "rule__ParameterExpansion__Group_1__0"
    // InternalMyBashParser.g:10031:1: rule__ParameterExpansion__Group_1__0 : rule__ParameterExpansion__Group_1__0__Impl rule__ParameterExpansion__Group_1__1 ;
    public final void rule__ParameterExpansion__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10035:1: ( rule__ParameterExpansion__Group_1__0__Impl rule__ParameterExpansion__Group_1__1 )
            // InternalMyBashParser.g:10036:2: rule__ParameterExpansion__Group_1__0__Impl rule__ParameterExpansion__Group_1__1
            {
            pushFollow(FOLLOW_73);
            rule__ParameterExpansion__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansion__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_1__0"


    // $ANTLR start "rule__ParameterExpansion__Group_1__0__Impl"
    // InternalMyBashParser.g:10043:1: rule__ParameterExpansion__Group_1__0__Impl : ( () ) ;
    public final void rule__ParameterExpansion__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10047:1: ( ( () ) )
            // InternalMyBashParser.g:10048:1: ( () )
            {
            // InternalMyBashParser.g:10048:1: ( () )
            // InternalMyBashParser.g:10049:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getParameterExpansionAction_1_0()); 
            }
            // InternalMyBashParser.g:10050:2: ()
            // InternalMyBashParser.g:10050:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getParameterExpansionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterExpansion__Group_1__1"
    // InternalMyBashParser.g:10058:1: rule__ParameterExpansion__Group_1__1 : rule__ParameterExpansion__Group_1__1__Impl ;
    public final void rule__ParameterExpansion__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10062:1: ( rule__ParameterExpansion__Group_1__1__Impl )
            // InternalMyBashParser.g:10063:2: rule__ParameterExpansion__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansion__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_1__1"


    // $ANTLR start "rule__ParameterExpansion__Group_1__1__Impl"
    // InternalMyBashParser.g:10069:1: rule__ParameterExpansion__Group_1__1__Impl : ( ( rule__ParameterExpansion__RefAssignment_1_1 ) ) ;
    public final void rule__ParameterExpansion__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10073:1: ( ( ( rule__ParameterExpansion__RefAssignment_1_1 ) ) )
            // InternalMyBashParser.g:10074:1: ( ( rule__ParameterExpansion__RefAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:10074:1: ( ( rule__ParameterExpansion__RefAssignment_1_1 ) )
            // InternalMyBashParser.g:10075:2: ( rule__ParameterExpansion__RefAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getRefAssignment_1_1()); 
            }
            // InternalMyBashParser.g:10076:2: ( rule__ParameterExpansion__RefAssignment_1_1 )
            // InternalMyBashParser.g:10076:3: rule__ParameterExpansion__RefAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansion__RefAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getRefAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group__0"
    // InternalMyBashParser.g:10085:1: rule__ParameterExpansionStart__Group__0 : rule__ParameterExpansionStart__Group__0__Impl rule__ParameterExpansionStart__Group__1 ;
    public final void rule__ParameterExpansionStart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10089:1: ( rule__ParameterExpansionStart__Group__0__Impl rule__ParameterExpansionStart__Group__1 )
            // InternalMyBashParser.g:10090:2: rule__ParameterExpansionStart__Group__0__Impl rule__ParameterExpansionStart__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__ParameterExpansionStart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__0"


    // $ANTLR start "rule__ParameterExpansionStart__Group__0__Impl"
    // InternalMyBashParser.g:10097:1: rule__ParameterExpansionStart__Group__0__Impl : ( () ) ;
    public final void rule__ParameterExpansionStart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10101:1: ( ( () ) )
            // InternalMyBashParser.g:10102:1: ( () )
            {
            // InternalMyBashParser.g:10102:1: ( () )
            // InternalMyBashParser.g:10103:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getParameterExpansionAction_0()); 
            }
            // InternalMyBashParser.g:10104:2: ()
            // InternalMyBashParser.g:10104:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getParameterExpansionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__0__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group__1"
    // InternalMyBashParser.g:10112:1: rule__ParameterExpansionStart__Group__1 : rule__ParameterExpansionStart__Group__1__Impl rule__ParameterExpansionStart__Group__2 ;
    public final void rule__ParameterExpansionStart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10116:1: ( rule__ParameterExpansionStart__Group__1__Impl rule__ParameterExpansionStart__Group__2 )
            // InternalMyBashParser.g:10117:2: rule__ParameterExpansionStart__Group__1__Impl rule__ParameterExpansionStart__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__ParameterExpansionStart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__1"


    // $ANTLR start "rule__ParameterExpansionStart__Group__1__Impl"
    // InternalMyBashParser.g:10124:1: rule__ParameterExpansionStart__Group__1__Impl : ( DollarSignLeftCurlyBracket ) ;
    public final void rule__ParameterExpansionStart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10128:1: ( ( DollarSignLeftCurlyBracket ) )
            // InternalMyBashParser.g:10129:1: ( DollarSignLeftCurlyBracket )
            {
            // InternalMyBashParser.g:10129:1: ( DollarSignLeftCurlyBracket )
            // InternalMyBashParser.g:10130:2: DollarSignLeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getDollarSignLeftCurlyBracketKeyword_1()); 
            }
            match(input,DollarSignLeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getDollarSignLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__1__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group__2"
    // InternalMyBashParser.g:10139:1: rule__ParameterExpansionStart__Group__2 : rule__ParameterExpansionStart__Group__2__Impl rule__ParameterExpansionStart__Group__3 ;
    public final void rule__ParameterExpansionStart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10143:1: ( rule__ParameterExpansionStart__Group__2__Impl rule__ParameterExpansionStart__Group__3 )
            // InternalMyBashParser.g:10144:2: rule__ParameterExpansionStart__Group__2__Impl rule__ParameterExpansionStart__Group__3
            {
            pushFollow(FOLLOW_75);
            rule__ParameterExpansionStart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__2"


    // $ANTLR start "rule__ParameterExpansionStart__Group__2__Impl"
    // InternalMyBashParser.g:10151:1: rule__ParameterExpansionStart__Group__2__Impl : ( ( rule__ParameterExpansionStart__HashAssignment_2 )? ) ;
    public final void rule__ParameterExpansionStart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10155:1: ( ( ( rule__ParameterExpansionStart__HashAssignment_2 )? ) )
            // InternalMyBashParser.g:10156:1: ( ( rule__ParameterExpansionStart__HashAssignment_2 )? )
            {
            // InternalMyBashParser.g:10156:1: ( ( rule__ParameterExpansionStart__HashAssignment_2 )? )
            // InternalMyBashParser.g:10157:2: ( rule__ParameterExpansionStart__HashAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getHashAssignment_2()); 
            }
            // InternalMyBashParser.g:10158:2: ( rule__ParameterExpansionStart__HashAssignment_2 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==NumberSign) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalMyBashParser.g:10158:3: rule__ParameterExpansionStart__HashAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__HashAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getHashAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__2__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group__3"
    // InternalMyBashParser.g:10166:1: rule__ParameterExpansionStart__Group__3 : rule__ParameterExpansionStart__Group__3__Impl rule__ParameterExpansionStart__Group__4 ;
    public final void rule__ParameterExpansionStart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10170:1: ( rule__ParameterExpansionStart__Group__3__Impl rule__ParameterExpansionStart__Group__4 )
            // InternalMyBashParser.g:10171:2: rule__ParameterExpansionStart__Group__3__Impl rule__ParameterExpansionStart__Group__4
            {
            pushFollow(FOLLOW_76);
            rule__ParameterExpansionStart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__3"


    // $ANTLR start "rule__ParameterExpansionStart__Group__3__Impl"
    // InternalMyBashParser.g:10178:1: rule__ParameterExpansionStart__Group__3__Impl : ( ( rule__ParameterExpansionStart__Alternatives_3 ) ) ;
    public final void rule__ParameterExpansionStart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10182:1: ( ( ( rule__ParameterExpansionStart__Alternatives_3 ) ) )
            // InternalMyBashParser.g:10183:1: ( ( rule__ParameterExpansionStart__Alternatives_3 ) )
            {
            // InternalMyBashParser.g:10183:1: ( ( rule__ParameterExpansionStart__Alternatives_3 ) )
            // InternalMyBashParser.g:10184:2: ( rule__ParameterExpansionStart__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getAlternatives_3()); 
            }
            // InternalMyBashParser.g:10185:2: ( rule__ParameterExpansionStart__Alternatives_3 )
            // InternalMyBashParser.g:10185:3: rule__ParameterExpansionStart__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__3__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group__4"
    // InternalMyBashParser.g:10193:1: rule__ParameterExpansionStart__Group__4 : rule__ParameterExpansionStart__Group__4__Impl rule__ParameterExpansionStart__Group__5 ;
    public final void rule__ParameterExpansionStart__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10197:1: ( rule__ParameterExpansionStart__Group__4__Impl rule__ParameterExpansionStart__Group__5 )
            // InternalMyBashParser.g:10198:2: rule__ParameterExpansionStart__Group__4__Impl rule__ParameterExpansionStart__Group__5
            {
            pushFollow(FOLLOW_76);
            rule__ParameterExpansionStart__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__4"


    // $ANTLR start "rule__ParameterExpansionStart__Group__4__Impl"
    // InternalMyBashParser.g:10205:1: rule__ParameterExpansionStart__Group__4__Impl : ( ( rule__ParameterExpansionStart__Group_4__0 )? ) ;
    public final void rule__ParameterExpansionStart__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10209:1: ( ( ( rule__ParameterExpansionStart__Group_4__0 )? ) )
            // InternalMyBashParser.g:10210:1: ( ( rule__ParameterExpansionStart__Group_4__0 )? )
            {
            // InternalMyBashParser.g:10210:1: ( ( rule__ParameterExpansionStart__Group_4__0 )? )
            // InternalMyBashParser.g:10211:2: ( rule__ParameterExpansionStart__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getGroup_4()); 
            }
            // InternalMyBashParser.g:10212:2: ( rule__ParameterExpansionStart__Group_4__0 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==LeftSquareBracket) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalMyBashParser.g:10212:3: rule__ParameterExpansionStart__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__4__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group__5"
    // InternalMyBashParser.g:10220:1: rule__ParameterExpansionStart__Group__5 : rule__ParameterExpansionStart__Group__5__Impl ;
    public final void rule__ParameterExpansionStart__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10224:1: ( rule__ParameterExpansionStart__Group__5__Impl )
            // InternalMyBashParser.g:10225:2: rule__ParameterExpansionStart__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__5"


    // $ANTLR start "rule__ParameterExpansionStart__Group__5__Impl"
    // InternalMyBashParser.g:10231:1: rule__ParameterExpansionStart__Group__5__Impl : ( ( rule__ParameterExpansionStart__ReplacerAssignment_5 )? ) ;
    public final void rule__ParameterExpansionStart__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10235:1: ( ( ( rule__ParameterExpansionStart__ReplacerAssignment_5 )? ) )
            // InternalMyBashParser.g:10236:1: ( ( rule__ParameterExpansionStart__ReplacerAssignment_5 )? )
            {
            // InternalMyBashParser.g:10236:1: ( ( rule__ParameterExpansionStart__ReplacerAssignment_5 )? )
            // InternalMyBashParser.g:10237:2: ( rule__ParameterExpansionStart__ReplacerAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getReplacerAssignment_5()); 
            }
            // InternalMyBashParser.g:10238:2: ( rule__ParameterExpansionStart__ReplacerAssignment_5 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==NumberSignNumberSign||LA104_0==PercentSignPercentSign||LA104_0==CommaComma||LA104_0==SolidusSolidus||(LA104_0>=ColonPlusSign && LA104_0<=ColonQuestionMark)||LA104_0==CircumflexAccentCircumflexAccent||(LA104_0>=NumberSign && LA104_0<=PercentSign)||(LA104_0>=PlusSign && LA104_0<=Colon)||LA104_0==EqualsSign||LA104_0==QuestionMark||LA104_0==CircumflexAccent) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalMyBashParser.g:10238:3: rule__ParameterExpansionStart__ReplacerAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterExpansionStart__ReplacerAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getReplacerAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group__5__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group_4__0"
    // InternalMyBashParser.g:10247:1: rule__ParameterExpansionStart__Group_4__0 : rule__ParameterExpansionStart__Group_4__0__Impl rule__ParameterExpansionStart__Group_4__1 ;
    public final void rule__ParameterExpansionStart__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10251:1: ( rule__ParameterExpansionStart__Group_4__0__Impl rule__ParameterExpansionStart__Group_4__1 )
            // InternalMyBashParser.g:10252:2: rule__ParameterExpansionStart__Group_4__0__Impl rule__ParameterExpansionStart__Group_4__1
            {
            pushFollow(FOLLOW_77);
            rule__ParameterExpansionStart__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group_4__0"


    // $ANTLR start "rule__ParameterExpansionStart__Group_4__0__Impl"
    // InternalMyBashParser.g:10259:1: rule__ParameterExpansionStart__Group_4__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ParameterExpansionStart__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10263:1: ( ( LeftSquareBracket ) )
            // InternalMyBashParser.g:10264:1: ( LeftSquareBracket )
            {
            // InternalMyBashParser.g:10264:1: ( LeftSquareBracket )
            // InternalMyBashParser.g:10265:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getLeftSquareBracketKeyword_4_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getLeftSquareBracketKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group_4__0__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group_4__1"
    // InternalMyBashParser.g:10274:1: rule__ParameterExpansionStart__Group_4__1 : rule__ParameterExpansionStart__Group_4__1__Impl rule__ParameterExpansionStart__Group_4__2 ;
    public final void rule__ParameterExpansionStart__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10278:1: ( rule__ParameterExpansionStart__Group_4__1__Impl rule__ParameterExpansionStart__Group_4__2 )
            // InternalMyBashParser.g:10279:2: rule__ParameterExpansionStart__Group_4__1__Impl rule__ParameterExpansionStart__Group_4__2
            {
            pushFollow(FOLLOW_72);
            rule__ParameterExpansionStart__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group_4__1"


    // $ANTLR start "rule__ParameterExpansionStart__Group_4__1__Impl"
    // InternalMyBashParser.g:10286:1: rule__ParameterExpansionStart__Group_4__1__Impl : ( ( rule__ParameterExpansionStart__Alternatives_4_1 ) ) ;
    public final void rule__ParameterExpansionStart__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10290:1: ( ( ( rule__ParameterExpansionStart__Alternatives_4_1 ) ) )
            // InternalMyBashParser.g:10291:1: ( ( rule__ParameterExpansionStart__Alternatives_4_1 ) )
            {
            // InternalMyBashParser.g:10291:1: ( ( rule__ParameterExpansionStart__Alternatives_4_1 ) )
            // InternalMyBashParser.g:10292:2: ( rule__ParameterExpansionStart__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getAlternatives_4_1()); 
            }
            // InternalMyBashParser.g:10293:2: ( rule__ParameterExpansionStart__Alternatives_4_1 )
            // InternalMyBashParser.g:10293:3: rule__ParameterExpansionStart__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group_4__1__Impl"


    // $ANTLR start "rule__ParameterExpansionStart__Group_4__2"
    // InternalMyBashParser.g:10301:1: rule__ParameterExpansionStart__Group_4__2 : rule__ParameterExpansionStart__Group_4__2__Impl ;
    public final void rule__ParameterExpansionStart__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10305:1: ( rule__ParameterExpansionStart__Group_4__2__Impl )
            // InternalMyBashParser.g:10306:2: rule__ParameterExpansionStart__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterExpansionStart__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group_4__2"


    // $ANTLR start "rule__ParameterExpansionStart__Group_4__2__Impl"
    // InternalMyBashParser.g:10312:1: rule__ParameterExpansionStart__Group_4__2__Impl : ( RightSquareBracket ) ;
    public final void rule__ParameterExpansionStart__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10316:1: ( ( RightSquareBracket ) )
            // InternalMyBashParser.g:10317:1: ( RightSquareBracket )
            {
            // InternalMyBashParser.g:10317:1: ( RightSquareBracket )
            // InternalMyBashParser.g:10318:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getRightSquareBracketKeyword_4_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getRightSquareBracketKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__Group_4__2__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_0__0"
    // InternalMyBashParser.g:10328:1: rule__ParameterProcessor__Group_0__0 : rule__ParameterProcessor__Group_0__0__Impl rule__ParameterProcessor__Group_0__1 ;
    public final void rule__ParameterProcessor__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10332:1: ( rule__ParameterProcessor__Group_0__0__Impl rule__ParameterProcessor__Group_0__1 )
            // InternalMyBashParser.g:10333:2: rule__ParameterProcessor__Group_0__0__Impl rule__ParameterProcessor__Group_0__1
            {
            pushFollow(FOLLOW_78);
            rule__ParameterProcessor__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_0__0"


    // $ANTLR start "rule__ParameterProcessor__Group_0__0__Impl"
    // InternalMyBashParser.g:10340:1: rule__ParameterProcessor__Group_0__0__Impl : ( () ) ;
    public final void rule__ParameterProcessor__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10344:1: ( ( () ) )
            // InternalMyBashParser.g:10345:1: ( () )
            {
            // InternalMyBashParser.g:10345:1: ( () )
            // InternalMyBashParser.g:10346:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getSingleProcessorAction_0_0()); 
            }
            // InternalMyBashParser.g:10347:2: ()
            // InternalMyBashParser.g:10347:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getSingleProcessorAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_0__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_0__1"
    // InternalMyBashParser.g:10355:1: rule__ParameterProcessor__Group_0__1 : rule__ParameterProcessor__Group_0__1__Impl rule__ParameterProcessor__Group_0__2 ;
    public final void rule__ParameterProcessor__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10359:1: ( rule__ParameterProcessor__Group_0__1__Impl rule__ParameterProcessor__Group_0__2 )
            // InternalMyBashParser.g:10360:2: rule__ParameterProcessor__Group_0__1__Impl rule__ParameterProcessor__Group_0__2
            {
            pushFollow(FOLLOW_21);
            rule__ParameterProcessor__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_0__1"


    // $ANTLR start "rule__ParameterProcessor__Group_0__1__Impl"
    // InternalMyBashParser.g:10367:1: rule__ParameterProcessor__Group_0__1__Impl : ( ( rule__ParameterProcessor__OpAssignment_0_1 ) ) ;
    public final void rule__ParameterProcessor__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10371:1: ( ( ( rule__ParameterProcessor__OpAssignment_0_1 ) ) )
            // InternalMyBashParser.g:10372:1: ( ( rule__ParameterProcessor__OpAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:10372:1: ( ( rule__ParameterProcessor__OpAssignment_0_1 ) )
            // InternalMyBashParser.g:10373:2: ( rule__ParameterProcessor__OpAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOpAssignment_0_1()); 
            }
            // InternalMyBashParser.g:10374:2: ( rule__ParameterProcessor__OpAssignment_0_1 )
            // InternalMyBashParser.g:10374:3: rule__ParameterProcessor__OpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__OpAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOpAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_0__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_0__2"
    // InternalMyBashParser.g:10382:1: rule__ParameterProcessor__Group_0__2 : rule__ParameterProcessor__Group_0__2__Impl ;
    public final void rule__ParameterProcessor__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10386:1: ( rule__ParameterProcessor__Group_0__2__Impl )
            // InternalMyBashParser.g:10387:2: rule__ParameterProcessor__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_0__2"


    // $ANTLR start "rule__ParameterProcessor__Group_0__2__Impl"
    // InternalMyBashParser.g:10393:1: rule__ParameterProcessor__Group_0__2__Impl : ( ( rule__ParameterProcessor__WordAssignment_0_2 )? ) ;
    public final void rule__ParameterProcessor__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10397:1: ( ( ( rule__ParameterProcessor__WordAssignment_0_2 )? ) )
            // InternalMyBashParser.g:10398:1: ( ( rule__ParameterProcessor__WordAssignment_0_2 )? )
            {
            // InternalMyBashParser.g:10398:1: ( ( rule__ParameterProcessor__WordAssignment_0_2 )? )
            // InternalMyBashParser.g:10399:2: ( rule__ParameterProcessor__WordAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getWordAssignment_0_2()); 
            }
            // InternalMyBashParser.g:10400:2: ( rule__ParameterProcessor__WordAssignment_0_2 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==DollarSignLeftParenthesisLeftParenthesis||LA105_0==DollarSignLeftCurlyBracket||LA105_0==LessThanSignLeftParenthesis||LA105_0==GreaterThanSignLeftParenthesis||LA105_0==QuotationMark||LA105_0==Apostrophe||(LA105_0>=RULE_S_WORD_PART && LA105_0<=RULE_WORD_PART)||LA105_0==RULE_VARIABLE||LA105_0==RULE_CS_START) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalMyBashParser.g:10400:3: rule__ParameterProcessor__WordAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__WordAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getWordAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_0__2__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_1__0"
    // InternalMyBashParser.g:10409:1: rule__ParameterProcessor__Group_1__0 : rule__ParameterProcessor__Group_1__0__Impl rule__ParameterProcessor__Group_1__1 ;
    public final void rule__ParameterProcessor__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10413:1: ( rule__ParameterProcessor__Group_1__0__Impl rule__ParameterProcessor__Group_1__1 )
            // InternalMyBashParser.g:10414:2: rule__ParameterProcessor__Group_1__0__Impl rule__ParameterProcessor__Group_1__1
            {
            pushFollow(FOLLOW_79);
            rule__ParameterProcessor__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1__0"


    // $ANTLR start "rule__ParameterProcessor__Group_1__0__Impl"
    // InternalMyBashParser.g:10421:1: rule__ParameterProcessor__Group_1__0__Impl : ( () ) ;
    public final void rule__ParameterProcessor__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10425:1: ( ( () ) )
            // InternalMyBashParser.g:10426:1: ( () )
            {
            // InternalMyBashParser.g:10426:1: ( () )
            // InternalMyBashParser.g:10427:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getReplaceProcessorAction_1_0()); 
            }
            // InternalMyBashParser.g:10428:2: ()
            // InternalMyBashParser.g:10428:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getReplaceProcessorAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_1__1"
    // InternalMyBashParser.g:10436:1: rule__ParameterProcessor__Group_1__1 : rule__ParameterProcessor__Group_1__1__Impl rule__ParameterProcessor__Group_1__2 ;
    public final void rule__ParameterProcessor__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10440:1: ( rule__ParameterProcessor__Group_1__1__Impl rule__ParameterProcessor__Group_1__2 )
            // InternalMyBashParser.g:10441:2: rule__ParameterProcessor__Group_1__1__Impl rule__ParameterProcessor__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__ParameterProcessor__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1__1"


    // $ANTLR start "rule__ParameterProcessor__Group_1__1__Impl"
    // InternalMyBashParser.g:10448:1: rule__ParameterProcessor__Group_1__1__Impl : ( ( rule__ParameterProcessor__OpAssignment_1_1 ) ) ;
    public final void rule__ParameterProcessor__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10452:1: ( ( ( rule__ParameterProcessor__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:10453:1: ( ( rule__ParameterProcessor__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:10453:1: ( ( rule__ParameterProcessor__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:10454:2: ( rule__ParameterProcessor__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:10455:2: ( rule__ParameterProcessor__OpAssignment_1_1 )
            // InternalMyBashParser.g:10455:3: rule__ParameterProcessor__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_1__2"
    // InternalMyBashParser.g:10463:1: rule__ParameterProcessor__Group_1__2 : rule__ParameterProcessor__Group_1__2__Impl ;
    public final void rule__ParameterProcessor__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10467:1: ( rule__ParameterProcessor__Group_1__2__Impl )
            // InternalMyBashParser.g:10468:2: rule__ParameterProcessor__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1__2"


    // $ANTLR start "rule__ParameterProcessor__Group_1__2__Impl"
    // InternalMyBashParser.g:10474:1: rule__ParameterProcessor__Group_1__2__Impl : ( ( rule__ParameterProcessor__Group_1_2__0 )? ) ;
    public final void rule__ParameterProcessor__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10478:1: ( ( ( rule__ParameterProcessor__Group_1_2__0 )? ) )
            // InternalMyBashParser.g:10479:1: ( ( rule__ParameterProcessor__Group_1_2__0 )? )
            {
            // InternalMyBashParser.g:10479:1: ( ( rule__ParameterProcessor__Group_1_2__0 )? )
            // InternalMyBashParser.g:10480:2: ( rule__ParameterProcessor__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getGroup_1_2()); 
            }
            // InternalMyBashParser.g:10481:2: ( rule__ParameterProcessor__Group_1_2__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==DollarSignLeftParenthesisLeftParenthesis||LA106_0==DollarSignLeftCurlyBracket||LA106_0==LessThanSignLeftParenthesis||LA106_0==GreaterThanSignLeftParenthesis||LA106_0==QuotationMark||LA106_0==Apostrophe||(LA106_0>=RULE_S_WORD_PART && LA106_0<=RULE_WORD_PART)||LA106_0==RULE_VARIABLE||LA106_0==RULE_CS_START) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalMyBashParser.g:10481:3: rule__ParameterProcessor__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1__2__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2__0"
    // InternalMyBashParser.g:10490:1: rule__ParameterProcessor__Group_1_2__0 : rule__ParameterProcessor__Group_1_2__0__Impl rule__ParameterProcessor__Group_1_2__1 ;
    public final void rule__ParameterProcessor__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10494:1: ( rule__ParameterProcessor__Group_1_2__0__Impl rule__ParameterProcessor__Group_1_2__1 )
            // InternalMyBashParser.g:10495:2: rule__ParameterProcessor__Group_1_2__0__Impl rule__ParameterProcessor__Group_1_2__1
            {
            pushFollow(FOLLOW_80);
            rule__ParameterProcessor__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2__0"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2__0__Impl"
    // InternalMyBashParser.g:10502:1: rule__ParameterProcessor__Group_1_2__0__Impl : ( ( rule__ParameterProcessor__OriginalAssignment_1_2_0 ) ) ;
    public final void rule__ParameterProcessor__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10506:1: ( ( ( rule__ParameterProcessor__OriginalAssignment_1_2_0 ) ) )
            // InternalMyBashParser.g:10507:1: ( ( rule__ParameterProcessor__OriginalAssignment_1_2_0 ) )
            {
            // InternalMyBashParser.g:10507:1: ( ( rule__ParameterProcessor__OriginalAssignment_1_2_0 ) )
            // InternalMyBashParser.g:10508:2: ( rule__ParameterProcessor__OriginalAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOriginalAssignment_1_2_0()); 
            }
            // InternalMyBashParser.g:10509:2: ( rule__ParameterProcessor__OriginalAssignment_1_2_0 )
            // InternalMyBashParser.g:10509:3: rule__ParameterProcessor__OriginalAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__OriginalAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOriginalAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2__1"
    // InternalMyBashParser.g:10517:1: rule__ParameterProcessor__Group_1_2__1 : rule__ParameterProcessor__Group_1_2__1__Impl ;
    public final void rule__ParameterProcessor__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10521:1: ( rule__ParameterProcessor__Group_1_2__1__Impl )
            // InternalMyBashParser.g:10522:2: rule__ParameterProcessor__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2__1"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2__1__Impl"
    // InternalMyBashParser.g:10528:1: rule__ParameterProcessor__Group_1_2__1__Impl : ( ( rule__ParameterProcessor__Group_1_2_1__0 )? ) ;
    public final void rule__ParameterProcessor__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10532:1: ( ( ( rule__ParameterProcessor__Group_1_2_1__0 )? ) )
            // InternalMyBashParser.g:10533:1: ( ( rule__ParameterProcessor__Group_1_2_1__0 )? )
            {
            // InternalMyBashParser.g:10533:1: ( ( rule__ParameterProcessor__Group_1_2_1__0 )? )
            // InternalMyBashParser.g:10534:2: ( rule__ParameterProcessor__Group_1_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getGroup_1_2_1()); 
            }
            // InternalMyBashParser.g:10535:2: ( rule__ParameterProcessor__Group_1_2_1__0 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==Solidus) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalMyBashParser.g:10535:3: rule__ParameterProcessor__Group_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_1_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getGroup_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2_1__0"
    // InternalMyBashParser.g:10544:1: rule__ParameterProcessor__Group_1_2_1__0 : rule__ParameterProcessor__Group_1_2_1__0__Impl rule__ParameterProcessor__Group_1_2_1__1 ;
    public final void rule__ParameterProcessor__Group_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10548:1: ( rule__ParameterProcessor__Group_1_2_1__0__Impl rule__ParameterProcessor__Group_1_2_1__1 )
            // InternalMyBashParser.g:10549:2: rule__ParameterProcessor__Group_1_2_1__0__Impl rule__ParameterProcessor__Group_1_2_1__1
            {
            pushFollow(FOLLOW_21);
            rule__ParameterProcessor__Group_1_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_1_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2_1__0"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2_1__0__Impl"
    // InternalMyBashParser.g:10556:1: rule__ParameterProcessor__Group_1_2_1__0__Impl : ( Solidus ) ;
    public final void rule__ParameterProcessor__Group_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10560:1: ( ( Solidus ) )
            // InternalMyBashParser.g:10561:1: ( Solidus )
            {
            // InternalMyBashParser.g:10561:1: ( Solidus )
            // InternalMyBashParser.g:10562:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getSolidusKeyword_1_2_1_0()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getSolidusKeyword_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2_1__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2_1__1"
    // InternalMyBashParser.g:10571:1: rule__ParameterProcessor__Group_1_2_1__1 : rule__ParameterProcessor__Group_1_2_1__1__Impl ;
    public final void rule__ParameterProcessor__Group_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10575:1: ( rule__ParameterProcessor__Group_1_2_1__1__Impl )
            // InternalMyBashParser.g:10576:2: rule__ParameterProcessor__Group_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_1_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2_1__1"


    // $ANTLR start "rule__ParameterProcessor__Group_1_2_1__1__Impl"
    // InternalMyBashParser.g:10582:1: rule__ParameterProcessor__Group_1_2_1__1__Impl : ( ( rule__ParameterProcessor__ReplaceAssignment_1_2_1_1 )? ) ;
    public final void rule__ParameterProcessor__Group_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10586:1: ( ( ( rule__ParameterProcessor__ReplaceAssignment_1_2_1_1 )? ) )
            // InternalMyBashParser.g:10587:1: ( ( rule__ParameterProcessor__ReplaceAssignment_1_2_1_1 )? )
            {
            // InternalMyBashParser.g:10587:1: ( ( rule__ParameterProcessor__ReplaceAssignment_1_2_1_1 )? )
            // InternalMyBashParser.g:10588:2: ( rule__ParameterProcessor__ReplaceAssignment_1_2_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getReplaceAssignment_1_2_1_1()); 
            }
            // InternalMyBashParser.g:10589:2: ( rule__ParameterProcessor__ReplaceAssignment_1_2_1_1 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==DollarSignLeftParenthesisLeftParenthesis||LA108_0==DollarSignLeftCurlyBracket||LA108_0==LessThanSignLeftParenthesis||LA108_0==GreaterThanSignLeftParenthesis||LA108_0==QuotationMark||LA108_0==Apostrophe||(LA108_0>=RULE_S_WORD_PART && LA108_0<=RULE_WORD_PART)||LA108_0==RULE_VARIABLE||LA108_0==RULE_CS_START) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalMyBashParser.g:10589:3: rule__ParameterProcessor__ReplaceAssignment_1_2_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__ReplaceAssignment_1_2_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getReplaceAssignment_1_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_1_2_1__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_2__0"
    // InternalMyBashParser.g:10598:1: rule__ParameterProcessor__Group_2__0 : rule__ParameterProcessor__Group_2__0__Impl rule__ParameterProcessor__Group_2__1 ;
    public final void rule__ParameterProcessor__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10602:1: ( rule__ParameterProcessor__Group_2__0__Impl rule__ParameterProcessor__Group_2__1 )
            // InternalMyBashParser.g:10603:2: rule__ParameterProcessor__Group_2__0__Impl rule__ParameterProcessor__Group_2__1
            {
            pushFollow(FOLLOW_79);
            rule__ParameterProcessor__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__0"


    // $ANTLR start "rule__ParameterProcessor__Group_2__0__Impl"
    // InternalMyBashParser.g:10610:1: rule__ParameterProcessor__Group_2__0__Impl : ( () ) ;
    public final void rule__ParameterProcessor__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10614:1: ( ( () ) )
            // InternalMyBashParser.g:10615:1: ( () )
            {
            // InternalMyBashParser.g:10615:1: ( () )
            // InternalMyBashParser.g:10616:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getReplaceProcessorAction_2_0()); 
            }
            // InternalMyBashParser.g:10617:2: ()
            // InternalMyBashParser.g:10617:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getReplaceProcessorAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_2__1"
    // InternalMyBashParser.g:10625:1: rule__ParameterProcessor__Group_2__1 : rule__ParameterProcessor__Group_2__1__Impl rule__ParameterProcessor__Group_2__2 ;
    public final void rule__ParameterProcessor__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10629:1: ( rule__ParameterProcessor__Group_2__1__Impl rule__ParameterProcessor__Group_2__2 )
            // InternalMyBashParser.g:10630:2: rule__ParameterProcessor__Group_2__1__Impl rule__ParameterProcessor__Group_2__2
            {
            pushFollow(FOLLOW_80);
            rule__ParameterProcessor__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__1"


    // $ANTLR start "rule__ParameterProcessor__Group_2__1__Impl"
    // InternalMyBashParser.g:10637:1: rule__ParameterProcessor__Group_2__1__Impl : ( ( rule__ParameterProcessor__OpAssignment_2_1 ) ) ;
    public final void rule__ParameterProcessor__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10641:1: ( ( ( rule__ParameterProcessor__OpAssignment_2_1 ) ) )
            // InternalMyBashParser.g:10642:1: ( ( rule__ParameterProcessor__OpAssignment_2_1 ) )
            {
            // InternalMyBashParser.g:10642:1: ( ( rule__ParameterProcessor__OpAssignment_2_1 ) )
            // InternalMyBashParser.g:10643:2: ( rule__ParameterProcessor__OpAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOpAssignment_2_1()); 
            }
            // InternalMyBashParser.g:10644:2: ( rule__ParameterProcessor__OpAssignment_2_1 )
            // InternalMyBashParser.g:10644:3: rule__ParameterProcessor__OpAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__OpAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOpAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_2__2"
    // InternalMyBashParser.g:10652:1: rule__ParameterProcessor__Group_2__2 : rule__ParameterProcessor__Group_2__2__Impl rule__ParameterProcessor__Group_2__3 ;
    public final void rule__ParameterProcessor__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10656:1: ( rule__ParameterProcessor__Group_2__2__Impl rule__ParameterProcessor__Group_2__3 )
            // InternalMyBashParser.g:10657:2: rule__ParameterProcessor__Group_2__2__Impl rule__ParameterProcessor__Group_2__3
            {
            pushFollow(FOLLOW_21);
            rule__ParameterProcessor__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__2"


    // $ANTLR start "rule__ParameterProcessor__Group_2__2__Impl"
    // InternalMyBashParser.g:10664:1: rule__ParameterProcessor__Group_2__2__Impl : ( Solidus ) ;
    public final void rule__ParameterProcessor__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10668:1: ( ( Solidus ) )
            // InternalMyBashParser.g:10669:1: ( Solidus )
            {
            // InternalMyBashParser.g:10669:1: ( Solidus )
            // InternalMyBashParser.g:10670:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getSolidusKeyword_2_2()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getSolidusKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__2__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_2__3"
    // InternalMyBashParser.g:10679:1: rule__ParameterProcessor__Group_2__3 : rule__ParameterProcessor__Group_2__3__Impl ;
    public final void rule__ParameterProcessor__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10683:1: ( rule__ParameterProcessor__Group_2__3__Impl )
            // InternalMyBashParser.g:10684:2: rule__ParameterProcessor__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__3"


    // $ANTLR start "rule__ParameterProcessor__Group_2__3__Impl"
    // InternalMyBashParser.g:10690:1: rule__ParameterProcessor__Group_2__3__Impl : ( ( rule__ParameterProcessor__ReplaceAssignment_2_3 )? ) ;
    public final void rule__ParameterProcessor__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10694:1: ( ( ( rule__ParameterProcessor__ReplaceAssignment_2_3 )? ) )
            // InternalMyBashParser.g:10695:1: ( ( rule__ParameterProcessor__ReplaceAssignment_2_3 )? )
            {
            // InternalMyBashParser.g:10695:1: ( ( rule__ParameterProcessor__ReplaceAssignment_2_3 )? )
            // InternalMyBashParser.g:10696:2: ( rule__ParameterProcessor__ReplaceAssignment_2_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getReplaceAssignment_2_3()); 
            }
            // InternalMyBashParser.g:10697:2: ( rule__ParameterProcessor__ReplaceAssignment_2_3 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==DollarSignLeftParenthesisLeftParenthesis||LA109_0==DollarSignLeftCurlyBracket||LA109_0==LessThanSignLeftParenthesis||LA109_0==GreaterThanSignLeftParenthesis||LA109_0==QuotationMark||LA109_0==Apostrophe||(LA109_0>=RULE_S_WORD_PART && LA109_0<=RULE_WORD_PART)||LA109_0==RULE_VARIABLE||LA109_0==RULE_CS_START) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalMyBashParser.g:10697:3: rule__ParameterProcessor__ReplaceAssignment_2_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__ReplaceAssignment_2_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getReplaceAssignment_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_2__3__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_3__0"
    // InternalMyBashParser.g:10706:1: rule__ParameterProcessor__Group_3__0 : rule__ParameterProcessor__Group_3__0__Impl rule__ParameterProcessor__Group_3__1 ;
    public final void rule__ParameterProcessor__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10710:1: ( rule__ParameterProcessor__Group_3__0__Impl rule__ParameterProcessor__Group_3__1 )
            // InternalMyBashParser.g:10711:2: rule__ParameterProcessor__Group_3__0__Impl rule__ParameterProcessor__Group_3__1
            {
            pushFollow(FOLLOW_81);
            rule__ParameterProcessor__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3__0"


    // $ANTLR start "rule__ParameterProcessor__Group_3__0__Impl"
    // InternalMyBashParser.g:10718:1: rule__ParameterProcessor__Group_3__0__Impl : ( () ) ;
    public final void rule__ParameterProcessor__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10722:1: ( ( () ) )
            // InternalMyBashParser.g:10723:1: ( () )
            {
            // InternalMyBashParser.g:10723:1: ( () )
            // InternalMyBashParser.g:10724:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getSubStringProcessorAction_3_0()); 
            }
            // InternalMyBashParser.g:10725:2: ()
            // InternalMyBashParser.g:10725:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getSubStringProcessorAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_3__1"
    // InternalMyBashParser.g:10733:1: rule__ParameterProcessor__Group_3__1 : rule__ParameterProcessor__Group_3__1__Impl rule__ParameterProcessor__Group_3__2 ;
    public final void rule__ParameterProcessor__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10737:1: ( rule__ParameterProcessor__Group_3__1__Impl rule__ParameterProcessor__Group_3__2 )
            // InternalMyBashParser.g:10738:2: rule__ParameterProcessor__Group_3__1__Impl rule__ParameterProcessor__Group_3__2
            {
            pushFollow(FOLLOW_31);
            rule__ParameterProcessor__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3__1"


    // $ANTLR start "rule__ParameterProcessor__Group_3__1__Impl"
    // InternalMyBashParser.g:10745:1: rule__ParameterProcessor__Group_3__1__Impl : ( Colon ) ;
    public final void rule__ParameterProcessor__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10749:1: ( ( Colon ) )
            // InternalMyBashParser.g:10750:1: ( Colon )
            {
            // InternalMyBashParser.g:10750:1: ( Colon )
            // InternalMyBashParser.g:10751:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getColonKeyword_3_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getColonKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_3__2"
    // InternalMyBashParser.g:10760:1: rule__ParameterProcessor__Group_3__2 : rule__ParameterProcessor__Group_3__2__Impl ;
    public final void rule__ParameterProcessor__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10764:1: ( rule__ParameterProcessor__Group_3__2__Impl )
            // InternalMyBashParser.g:10765:2: rule__ParameterProcessor__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3__2"


    // $ANTLR start "rule__ParameterProcessor__Group_3__2__Impl"
    // InternalMyBashParser.g:10771:1: rule__ParameterProcessor__Group_3__2__Impl : ( ( rule__ParameterProcessor__Group_3_2__0 )? ) ;
    public final void rule__ParameterProcessor__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10775:1: ( ( ( rule__ParameterProcessor__Group_3_2__0 )? ) )
            // InternalMyBashParser.g:10776:1: ( ( rule__ParameterProcessor__Group_3_2__0 )? )
            {
            // InternalMyBashParser.g:10776:1: ( ( rule__ParameterProcessor__Group_3_2__0 )? )
            // InternalMyBashParser.g:10777:2: ( rule__ParameterProcessor__Group_3_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getGroup_3_2()); 
            }
            // InternalMyBashParser.g:10778:2: ( rule__ParameterProcessor__Group_3_2__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==DollarSignLeftParenthesisLeftParenthesis||LA110_0==DollarSignLeftCurlyBracket||LA110_0==PlusSignPlusSign||LA110_0==HyphenMinusHyphenMinus||LA110_0==LessThanSignLeftParenthesis||LA110_0==GreaterThanSignLeftParenthesis||LA110_0==ExclamationMark||LA110_0==LeftParenthesis||LA110_0==PlusSign||LA110_0==HyphenMinus||(LA110_0>=Tilde && LA110_0<=RULE_I_NUMBER)||LA110_0==RULE_NAME||(LA110_0>=RULE_VARIABLE && LA110_0<=RULE_A_PREFIX)||LA110_0==RULE_CS_START) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalMyBashParser.g:10778:3: rule__ParameterProcessor__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_3_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getGroup_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3__2__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2__0"
    // InternalMyBashParser.g:10787:1: rule__ParameterProcessor__Group_3_2__0 : rule__ParameterProcessor__Group_3_2__0__Impl rule__ParameterProcessor__Group_3_2__1 ;
    public final void rule__ParameterProcessor__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10791:1: ( rule__ParameterProcessor__Group_3_2__0__Impl rule__ParameterProcessor__Group_3_2__1 )
            // InternalMyBashParser.g:10792:2: rule__ParameterProcessor__Group_3_2__0__Impl rule__ParameterProcessor__Group_3_2__1
            {
            pushFollow(FOLLOW_81);
            rule__ParameterProcessor__Group_3_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_3_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2__0"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2__0__Impl"
    // InternalMyBashParser.g:10799:1: rule__ParameterProcessor__Group_3_2__0__Impl : ( ( rule__ParameterProcessor__StartAssignment_3_2_0 ) ) ;
    public final void rule__ParameterProcessor__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10803:1: ( ( ( rule__ParameterProcessor__StartAssignment_3_2_0 ) ) )
            // InternalMyBashParser.g:10804:1: ( ( rule__ParameterProcessor__StartAssignment_3_2_0 ) )
            {
            // InternalMyBashParser.g:10804:1: ( ( rule__ParameterProcessor__StartAssignment_3_2_0 ) )
            // InternalMyBashParser.g:10805:2: ( rule__ParameterProcessor__StartAssignment_3_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getStartAssignment_3_2_0()); 
            }
            // InternalMyBashParser.g:10806:2: ( rule__ParameterProcessor__StartAssignment_3_2_0 )
            // InternalMyBashParser.g:10806:3: rule__ParameterProcessor__StartAssignment_3_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__StartAssignment_3_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getStartAssignment_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2__1"
    // InternalMyBashParser.g:10814:1: rule__ParameterProcessor__Group_3_2__1 : rule__ParameterProcessor__Group_3_2__1__Impl ;
    public final void rule__ParameterProcessor__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10818:1: ( rule__ParameterProcessor__Group_3_2__1__Impl )
            // InternalMyBashParser.g:10819:2: rule__ParameterProcessor__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_3_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2__1"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2__1__Impl"
    // InternalMyBashParser.g:10825:1: rule__ParameterProcessor__Group_3_2__1__Impl : ( ( rule__ParameterProcessor__Group_3_2_1__0 )? ) ;
    public final void rule__ParameterProcessor__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10829:1: ( ( ( rule__ParameterProcessor__Group_3_2_1__0 )? ) )
            // InternalMyBashParser.g:10830:1: ( ( rule__ParameterProcessor__Group_3_2_1__0 )? )
            {
            // InternalMyBashParser.g:10830:1: ( ( rule__ParameterProcessor__Group_3_2_1__0 )? )
            // InternalMyBashParser.g:10831:2: ( rule__ParameterProcessor__Group_3_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getGroup_3_2_1()); 
            }
            // InternalMyBashParser.g:10832:2: ( rule__ParameterProcessor__Group_3_2_1__0 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==Colon) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalMyBashParser.g:10832:3: rule__ParameterProcessor__Group_3_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__Group_3_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getGroup_3_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2_1__0"
    // InternalMyBashParser.g:10841:1: rule__ParameterProcessor__Group_3_2_1__0 : rule__ParameterProcessor__Group_3_2_1__0__Impl rule__ParameterProcessor__Group_3_2_1__1 ;
    public final void rule__ParameterProcessor__Group_3_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10845:1: ( rule__ParameterProcessor__Group_3_2_1__0__Impl rule__ParameterProcessor__Group_3_2_1__1 )
            // InternalMyBashParser.g:10846:2: rule__ParameterProcessor__Group_3_2_1__0__Impl rule__ParameterProcessor__Group_3_2_1__1
            {
            pushFollow(FOLLOW_31);
            rule__ParameterProcessor__Group_3_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_3_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2_1__0"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2_1__0__Impl"
    // InternalMyBashParser.g:10853:1: rule__ParameterProcessor__Group_3_2_1__0__Impl : ( Colon ) ;
    public final void rule__ParameterProcessor__Group_3_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10857:1: ( ( Colon ) )
            // InternalMyBashParser.g:10858:1: ( Colon )
            {
            // InternalMyBashParser.g:10858:1: ( Colon )
            // InternalMyBashParser.g:10859:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getColonKeyword_3_2_1_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getColonKeyword_3_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2_1__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2_1__1"
    // InternalMyBashParser.g:10868:1: rule__ParameterProcessor__Group_3_2_1__1 : rule__ParameterProcessor__Group_3_2_1__1__Impl ;
    public final void rule__ParameterProcessor__Group_3_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10872:1: ( rule__ParameterProcessor__Group_3_2_1__1__Impl )
            // InternalMyBashParser.g:10873:2: rule__ParameterProcessor__Group_3_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_3_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2_1__1"


    // $ANTLR start "rule__ParameterProcessor__Group_3_2_1__1__Impl"
    // InternalMyBashParser.g:10879:1: rule__ParameterProcessor__Group_3_2_1__1__Impl : ( ( rule__ParameterProcessor__LengthAssignment_3_2_1_1 )? ) ;
    public final void rule__ParameterProcessor__Group_3_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10883:1: ( ( ( rule__ParameterProcessor__LengthAssignment_3_2_1_1 )? ) )
            // InternalMyBashParser.g:10884:1: ( ( rule__ParameterProcessor__LengthAssignment_3_2_1_1 )? )
            {
            // InternalMyBashParser.g:10884:1: ( ( rule__ParameterProcessor__LengthAssignment_3_2_1_1 )? )
            // InternalMyBashParser.g:10885:2: ( rule__ParameterProcessor__LengthAssignment_3_2_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getLengthAssignment_3_2_1_1()); 
            }
            // InternalMyBashParser.g:10886:2: ( rule__ParameterProcessor__LengthAssignment_3_2_1_1 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==DollarSignLeftParenthesisLeftParenthesis||LA112_0==DollarSignLeftCurlyBracket||LA112_0==PlusSignPlusSign||LA112_0==HyphenMinusHyphenMinus||LA112_0==LessThanSignLeftParenthesis||LA112_0==GreaterThanSignLeftParenthesis||LA112_0==ExclamationMark||LA112_0==LeftParenthesis||LA112_0==PlusSign||LA112_0==HyphenMinus||(LA112_0>=Tilde && LA112_0<=RULE_I_NUMBER)||LA112_0==RULE_NAME||(LA112_0>=RULE_VARIABLE && LA112_0<=RULE_A_PREFIX)||LA112_0==RULE_CS_START) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalMyBashParser.g:10886:3: rule__ParameterProcessor__LengthAssignment_3_2_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__LengthAssignment_3_2_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getLengthAssignment_3_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_3_2_1__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_4__0"
    // InternalMyBashParser.g:10895:1: rule__ParameterProcessor__Group_4__0 : rule__ParameterProcessor__Group_4__0__Impl rule__ParameterProcessor__Group_4__1 ;
    public final void rule__ParameterProcessor__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10899:1: ( rule__ParameterProcessor__Group_4__0__Impl rule__ParameterProcessor__Group_4__1 )
            // InternalMyBashParser.g:10900:2: rule__ParameterProcessor__Group_4__0__Impl rule__ParameterProcessor__Group_4__1
            {
            pushFollow(FOLLOW_82);
            rule__ParameterProcessor__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__0"


    // $ANTLR start "rule__ParameterProcessor__Group_4__0__Impl"
    // InternalMyBashParser.g:10907:1: rule__ParameterProcessor__Group_4__0__Impl : ( () ) ;
    public final void rule__ParameterProcessor__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10911:1: ( ( () ) )
            // InternalMyBashParser.g:10912:1: ( () )
            {
            // InternalMyBashParser.g:10912:1: ( () )
            // InternalMyBashParser.g:10913:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getSubStringProcessorAction_4_0()); 
            }
            // InternalMyBashParser.g:10914:2: ()
            // InternalMyBashParser.g:10914:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getSubStringProcessorAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__0__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_4__1"
    // InternalMyBashParser.g:10922:1: rule__ParameterProcessor__Group_4__1 : rule__ParameterProcessor__Group_4__1__Impl rule__ParameterProcessor__Group_4__2 ;
    public final void rule__ParameterProcessor__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10926:1: ( rule__ParameterProcessor__Group_4__1__Impl rule__ParameterProcessor__Group_4__2 )
            // InternalMyBashParser.g:10927:2: rule__ParameterProcessor__Group_4__1__Impl rule__ParameterProcessor__Group_4__2
            {
            pushFollow(FOLLOW_81);
            rule__ParameterProcessor__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__1"


    // $ANTLR start "rule__ParameterProcessor__Group_4__1__Impl"
    // InternalMyBashParser.g:10934:1: rule__ParameterProcessor__Group_4__1__Impl : ( Colon ) ;
    public final void rule__ParameterProcessor__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10938:1: ( ( Colon ) )
            // InternalMyBashParser.g:10939:1: ( Colon )
            {
            // InternalMyBashParser.g:10939:1: ( Colon )
            // InternalMyBashParser.g:10940:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getColonKeyword_4_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getColonKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__1__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_4__2"
    // InternalMyBashParser.g:10949:1: rule__ParameterProcessor__Group_4__2 : rule__ParameterProcessor__Group_4__2__Impl rule__ParameterProcessor__Group_4__3 ;
    public final void rule__ParameterProcessor__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10953:1: ( rule__ParameterProcessor__Group_4__2__Impl rule__ParameterProcessor__Group_4__3 )
            // InternalMyBashParser.g:10954:2: rule__ParameterProcessor__Group_4__2__Impl rule__ParameterProcessor__Group_4__3
            {
            pushFollow(FOLLOW_31);
            rule__ParameterProcessor__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__2"


    // $ANTLR start "rule__ParameterProcessor__Group_4__2__Impl"
    // InternalMyBashParser.g:10961:1: rule__ParameterProcessor__Group_4__2__Impl : ( Colon ) ;
    public final void rule__ParameterProcessor__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10965:1: ( ( Colon ) )
            // InternalMyBashParser.g:10966:1: ( Colon )
            {
            // InternalMyBashParser.g:10966:1: ( Colon )
            // InternalMyBashParser.g:10967:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getColonKeyword_4_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getColonKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__2__Impl"


    // $ANTLR start "rule__ParameterProcessor__Group_4__3"
    // InternalMyBashParser.g:10976:1: rule__ParameterProcessor__Group_4__3 : rule__ParameterProcessor__Group_4__3__Impl ;
    public final void rule__ParameterProcessor__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10980:1: ( rule__ParameterProcessor__Group_4__3__Impl )
            // InternalMyBashParser.g:10981:2: rule__ParameterProcessor__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__3"


    // $ANTLR start "rule__ParameterProcessor__Group_4__3__Impl"
    // InternalMyBashParser.g:10987:1: rule__ParameterProcessor__Group_4__3__Impl : ( ( rule__ParameterProcessor__LengthAssignment_4_3 )? ) ;
    public final void rule__ParameterProcessor__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:10991:1: ( ( ( rule__ParameterProcessor__LengthAssignment_4_3 )? ) )
            // InternalMyBashParser.g:10992:1: ( ( rule__ParameterProcessor__LengthAssignment_4_3 )? )
            {
            // InternalMyBashParser.g:10992:1: ( ( rule__ParameterProcessor__LengthAssignment_4_3 )? )
            // InternalMyBashParser.g:10993:2: ( rule__ParameterProcessor__LengthAssignment_4_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getLengthAssignment_4_3()); 
            }
            // InternalMyBashParser.g:10994:2: ( rule__ParameterProcessor__LengthAssignment_4_3 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==DollarSignLeftParenthesisLeftParenthesis||LA113_0==DollarSignLeftCurlyBracket||LA113_0==PlusSignPlusSign||LA113_0==HyphenMinusHyphenMinus||LA113_0==LessThanSignLeftParenthesis||LA113_0==GreaterThanSignLeftParenthesis||LA113_0==ExclamationMark||LA113_0==LeftParenthesis||LA113_0==PlusSign||LA113_0==HyphenMinus||(LA113_0>=Tilde && LA113_0<=RULE_I_NUMBER)||LA113_0==RULE_NAME||(LA113_0>=RULE_VARIABLE && LA113_0<=RULE_A_PREFIX)||LA113_0==RULE_CS_START) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalMyBashParser.g:10994:3: rule__ParameterProcessor__LengthAssignment_4_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterProcessor__LengthAssignment_4_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getLengthAssignment_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__Group_4__3__Impl"


    // $ANTLR start "rule__CommandSubstitution__Group__0"
    // InternalMyBashParser.g:11003:1: rule__CommandSubstitution__Group__0 : rule__CommandSubstitution__Group__0__Impl rule__CommandSubstitution__Group__1 ;
    public final void rule__CommandSubstitution__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11007:1: ( rule__CommandSubstitution__Group__0__Impl rule__CommandSubstitution__Group__1 )
            // InternalMyBashParser.g:11008:2: rule__CommandSubstitution__Group__0__Impl rule__CommandSubstitution__Group__1
            {
            pushFollow(FOLLOW_83);
            rule__CommandSubstitution__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CommandSubstitution__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitution__Group__0"


    // $ANTLR start "rule__CommandSubstitution__Group__0__Impl"
    // InternalMyBashParser.g:11015:1: rule__CommandSubstitution__Group__0__Impl : ( ruleCommandSubstitutionStart ) ;
    public final void rule__CommandSubstitution__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11019:1: ( ( ruleCommandSubstitutionStart ) )
            // InternalMyBashParser.g:11020:1: ( ruleCommandSubstitutionStart )
            {
            // InternalMyBashParser.g:11020:1: ( ruleCommandSubstitutionStart )
            // InternalMyBashParser.g:11021:2: ruleCommandSubstitutionStart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionAccess().getCommandSubstitutionStartParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCommandSubstitutionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionAccess().getCommandSubstitutionStartParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitution__Group__0__Impl"


    // $ANTLR start "rule__CommandSubstitution__Group__1"
    // InternalMyBashParser.g:11030:1: rule__CommandSubstitution__Group__1 : rule__CommandSubstitution__Group__1__Impl ;
    public final void rule__CommandSubstitution__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11034:1: ( rule__CommandSubstitution__Group__1__Impl )
            // InternalMyBashParser.g:11035:2: rule__CommandSubstitution__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CommandSubstitution__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitution__Group__1"


    // $ANTLR start "rule__CommandSubstitution__Group__1__Impl"
    // InternalMyBashParser.g:11041:1: rule__CommandSubstitution__Group__1__Impl : ( ( rule__CommandSubstitution__EndAssignment_1 ) ) ;
    public final void rule__CommandSubstitution__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11045:1: ( ( ( rule__CommandSubstitution__EndAssignment_1 ) ) )
            // InternalMyBashParser.g:11046:1: ( ( rule__CommandSubstitution__EndAssignment_1 ) )
            {
            // InternalMyBashParser.g:11046:1: ( ( rule__CommandSubstitution__EndAssignment_1 ) )
            // InternalMyBashParser.g:11047:2: ( rule__CommandSubstitution__EndAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionAccess().getEndAssignment_1()); 
            }
            // InternalMyBashParser.g:11048:2: ( rule__CommandSubstitution__EndAssignment_1 )
            // InternalMyBashParser.g:11048:3: rule__CommandSubstitution__EndAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CommandSubstitution__EndAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionAccess().getEndAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitution__Group__1__Impl"


    // $ANTLR start "rule__CommandSubstitutionStart__Group__0"
    // InternalMyBashParser.g:11057:1: rule__CommandSubstitutionStart__Group__0 : rule__CommandSubstitutionStart__Group__0__Impl rule__CommandSubstitutionStart__Group__1 ;
    public final void rule__CommandSubstitutionStart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11061:1: ( rule__CommandSubstitutionStart__Group__0__Impl rule__CommandSubstitutionStart__Group__1 )
            // InternalMyBashParser.g:11062:2: rule__CommandSubstitutionStart__Group__0__Impl rule__CommandSubstitutionStart__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__CommandSubstitutionStart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CommandSubstitutionStart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitutionStart__Group__0"


    // $ANTLR start "rule__CommandSubstitutionStart__Group__0__Impl"
    // InternalMyBashParser.g:11069:1: rule__CommandSubstitutionStart__Group__0__Impl : ( RULE_CS_START ) ;
    public final void rule__CommandSubstitutionStart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11073:1: ( ( RULE_CS_START ) )
            // InternalMyBashParser.g:11074:1: ( RULE_CS_START )
            {
            // InternalMyBashParser.g:11074:1: ( RULE_CS_START )
            // InternalMyBashParser.g:11075:2: RULE_CS_START
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionStartAccess().getCS_STARTTerminalRuleCall_0()); 
            }
            match(input,RULE_CS_START,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionStartAccess().getCS_STARTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitutionStart__Group__0__Impl"


    // $ANTLR start "rule__CommandSubstitutionStart__Group__1"
    // InternalMyBashParser.g:11084:1: rule__CommandSubstitutionStart__Group__1 : rule__CommandSubstitutionStart__Group__1__Impl ;
    public final void rule__CommandSubstitutionStart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11088:1: ( rule__CommandSubstitutionStart__Group__1__Impl )
            // InternalMyBashParser.g:11089:2: rule__CommandSubstitutionStart__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CommandSubstitutionStart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitutionStart__Group__1"


    // $ANTLR start "rule__CommandSubstitutionStart__Group__1__Impl"
    // InternalMyBashParser.g:11095:1: rule__CommandSubstitutionStart__Group__1__Impl : ( ( rule__CommandSubstitutionStart__CommandsAssignment_1 ) ) ;
    public final void rule__CommandSubstitutionStart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11099:1: ( ( ( rule__CommandSubstitutionStart__CommandsAssignment_1 ) ) )
            // InternalMyBashParser.g:11100:1: ( ( rule__CommandSubstitutionStart__CommandsAssignment_1 ) )
            {
            // InternalMyBashParser.g:11100:1: ( ( rule__CommandSubstitutionStart__CommandsAssignment_1 ) )
            // InternalMyBashParser.g:11101:2: ( rule__CommandSubstitutionStart__CommandsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionStartAccess().getCommandsAssignment_1()); 
            }
            // InternalMyBashParser.g:11102:2: ( rule__CommandSubstitutionStart__CommandsAssignment_1 )
            // InternalMyBashParser.g:11102:3: rule__CommandSubstitutionStart__CommandsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CommandSubstitutionStart__CommandsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionStartAccess().getCommandsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitutionStart__Group__1__Impl"


    // $ANTLR start "rule__ProcessSubstitution__Group__0"
    // InternalMyBashParser.g:11111:1: rule__ProcessSubstitution__Group__0 : rule__ProcessSubstitution__Group__0__Impl rule__ProcessSubstitution__Group__1 ;
    public final void rule__ProcessSubstitution__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11115:1: ( rule__ProcessSubstitution__Group__0__Impl rule__ProcessSubstitution__Group__1 )
            // InternalMyBashParser.g:11116:2: rule__ProcessSubstitution__Group__0__Impl rule__ProcessSubstitution__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__ProcessSubstitution__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitution__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitution__Group__0"


    // $ANTLR start "rule__ProcessSubstitution__Group__0__Impl"
    // InternalMyBashParser.g:11123:1: rule__ProcessSubstitution__Group__0__Impl : ( ruleProcessSubstitutionStart ) ;
    public final void rule__ProcessSubstitution__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11127:1: ( ( ruleProcessSubstitutionStart ) )
            // InternalMyBashParser.g:11128:1: ( ruleProcessSubstitutionStart )
            {
            // InternalMyBashParser.g:11128:1: ( ruleProcessSubstitutionStart )
            // InternalMyBashParser.g:11129:2: ruleProcessSubstitutionStart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionAccess().getProcessSubstitutionStartParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleProcessSubstitutionStart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionAccess().getProcessSubstitutionStartParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitution__Group__0__Impl"


    // $ANTLR start "rule__ProcessSubstitution__Group__1"
    // InternalMyBashParser.g:11138:1: rule__ProcessSubstitution__Group__1 : rule__ProcessSubstitution__Group__1__Impl ;
    public final void rule__ProcessSubstitution__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11142:1: ( rule__ProcessSubstitution__Group__1__Impl )
            // InternalMyBashParser.g:11143:2: rule__ProcessSubstitution__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitution__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitution__Group__1"


    // $ANTLR start "rule__ProcessSubstitution__Group__1__Impl"
    // InternalMyBashParser.g:11149:1: rule__ProcessSubstitution__Group__1__Impl : ( ( rule__ProcessSubstitution__EndAssignment_1 ) ) ;
    public final void rule__ProcessSubstitution__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11153:1: ( ( ( rule__ProcessSubstitution__EndAssignment_1 ) ) )
            // InternalMyBashParser.g:11154:1: ( ( rule__ProcessSubstitution__EndAssignment_1 ) )
            {
            // InternalMyBashParser.g:11154:1: ( ( rule__ProcessSubstitution__EndAssignment_1 ) )
            // InternalMyBashParser.g:11155:2: ( rule__ProcessSubstitution__EndAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionAccess().getEndAssignment_1()); 
            }
            // InternalMyBashParser.g:11156:2: ( rule__ProcessSubstitution__EndAssignment_1 )
            // InternalMyBashParser.g:11156:3: rule__ProcessSubstitution__EndAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitution__EndAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionAccess().getEndAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitution__Group__1__Impl"


    // $ANTLR start "rule__ProcessSubstitutionStart__Group__0"
    // InternalMyBashParser.g:11165:1: rule__ProcessSubstitutionStart__Group__0 : rule__ProcessSubstitutionStart__Group__0__Impl rule__ProcessSubstitutionStart__Group__1 ;
    public final void rule__ProcessSubstitutionStart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11169:1: ( rule__ProcessSubstitutionStart__Group__0__Impl rule__ProcessSubstitutionStart__Group__1 )
            // InternalMyBashParser.g:11170:2: rule__ProcessSubstitutionStart__Group__0__Impl rule__ProcessSubstitutionStart__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ProcessSubstitutionStart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitutionStart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitutionStart__Group__0"


    // $ANTLR start "rule__ProcessSubstitutionStart__Group__0__Impl"
    // InternalMyBashParser.g:11177:1: rule__ProcessSubstitutionStart__Group__0__Impl : ( ( rule__ProcessSubstitutionStart__OpAssignment_0 ) ) ;
    public final void rule__ProcessSubstitutionStart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11181:1: ( ( ( rule__ProcessSubstitutionStart__OpAssignment_0 ) ) )
            // InternalMyBashParser.g:11182:1: ( ( rule__ProcessSubstitutionStart__OpAssignment_0 ) )
            {
            // InternalMyBashParser.g:11182:1: ( ( rule__ProcessSubstitutionStart__OpAssignment_0 ) )
            // InternalMyBashParser.g:11183:2: ( rule__ProcessSubstitutionStart__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionStartAccess().getOpAssignment_0()); 
            }
            // InternalMyBashParser.g:11184:2: ( rule__ProcessSubstitutionStart__OpAssignment_0 )
            // InternalMyBashParser.g:11184:3: rule__ProcessSubstitutionStart__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitutionStart__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionStartAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitutionStart__Group__0__Impl"


    // $ANTLR start "rule__ProcessSubstitutionStart__Group__1"
    // InternalMyBashParser.g:11192:1: rule__ProcessSubstitutionStart__Group__1 : rule__ProcessSubstitutionStart__Group__1__Impl ;
    public final void rule__ProcessSubstitutionStart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11196:1: ( rule__ProcessSubstitutionStart__Group__1__Impl )
            // InternalMyBashParser.g:11197:2: rule__ProcessSubstitutionStart__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitutionStart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitutionStart__Group__1"


    // $ANTLR start "rule__ProcessSubstitutionStart__Group__1__Impl"
    // InternalMyBashParser.g:11203:1: rule__ProcessSubstitutionStart__Group__1__Impl : ( ( rule__ProcessSubstitutionStart__BodyAssignment_1 ) ) ;
    public final void rule__ProcessSubstitutionStart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11207:1: ( ( ( rule__ProcessSubstitutionStart__BodyAssignment_1 ) ) )
            // InternalMyBashParser.g:11208:1: ( ( rule__ProcessSubstitutionStart__BodyAssignment_1 ) )
            {
            // InternalMyBashParser.g:11208:1: ( ( rule__ProcessSubstitutionStart__BodyAssignment_1 ) )
            // InternalMyBashParser.g:11209:2: ( rule__ProcessSubstitutionStart__BodyAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionStartAccess().getBodyAssignment_1()); 
            }
            // InternalMyBashParser.g:11210:2: ( rule__ProcessSubstitutionStart__BodyAssignment_1 )
            // InternalMyBashParser.g:11210:3: rule__ProcessSubstitutionStart__BodyAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitutionStart__BodyAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionStartAccess().getBodyAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitutionStart__Group__1__Impl"


    // $ANTLR start "rule__Evaluation__Group__0"
    // InternalMyBashParser.g:11219:1: rule__Evaluation__Group__0 : rule__Evaluation__Group__0__Impl rule__Evaluation__Group__1 ;
    public final void rule__Evaluation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11223:1: ( rule__Evaluation__Group__0__Impl rule__Evaluation__Group__1 )
            // InternalMyBashParser.g:11224:2: rule__Evaluation__Group__0__Impl rule__Evaluation__Group__1
            {
            pushFollow(FOLLOW_84);
            rule__Evaluation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Evaluation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group__0"


    // $ANTLR start "rule__Evaluation__Group__0__Impl"
    // InternalMyBashParser.g:11231:1: rule__Evaluation__Group__0__Impl : ( ruleArithmetic ) ;
    public final void rule__Evaluation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11235:1: ( ( ruleArithmetic ) )
            // InternalMyBashParser.g:11236:1: ( ruleArithmetic )
            {
            // InternalMyBashParser.g:11236:1: ( ruleArithmetic )
            // InternalMyBashParser.g:11237:2: ruleArithmetic
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getArithmeticParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArithmetic();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getArithmeticParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group__0__Impl"


    // $ANTLR start "rule__Evaluation__Group__1"
    // InternalMyBashParser.g:11246:1: rule__Evaluation__Group__1 : rule__Evaluation__Group__1__Impl ;
    public final void rule__Evaluation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11250:1: ( rule__Evaluation__Group__1__Impl )
            // InternalMyBashParser.g:11251:2: rule__Evaluation__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Evaluation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group__1"


    // $ANTLR start "rule__Evaluation__Group__1__Impl"
    // InternalMyBashParser.g:11257:1: rule__Evaluation__Group__1__Impl : ( ( rule__Evaluation__Group_1__0 )* ) ;
    public final void rule__Evaluation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11261:1: ( ( ( rule__Evaluation__Group_1__0 )* ) )
            // InternalMyBashParser.g:11262:1: ( ( rule__Evaluation__Group_1__0 )* )
            {
            // InternalMyBashParser.g:11262:1: ( ( rule__Evaluation__Group_1__0 )* )
            // InternalMyBashParser.g:11263:2: ( rule__Evaluation__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:11264:2: ( rule__Evaluation__Group_1__0 )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==Comma) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalMyBashParser.g:11264:3: rule__Evaluation__Group_1__0
            	    {
            	    pushFollow(FOLLOW_85);
            	    rule__Evaluation__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group__1__Impl"


    // $ANTLR start "rule__Evaluation__Group_1__0"
    // InternalMyBashParser.g:11273:1: rule__Evaluation__Group_1__0 : rule__Evaluation__Group_1__0__Impl rule__Evaluation__Group_1__1 ;
    public final void rule__Evaluation__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11277:1: ( rule__Evaluation__Group_1__0__Impl rule__Evaluation__Group_1__1 )
            // InternalMyBashParser.g:11278:2: rule__Evaluation__Group_1__0__Impl rule__Evaluation__Group_1__1
            {
            pushFollow(FOLLOW_84);
            rule__Evaluation__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Evaluation__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group_1__0"


    // $ANTLR start "rule__Evaluation__Group_1__0__Impl"
    // InternalMyBashParser.g:11285:1: rule__Evaluation__Group_1__0__Impl : ( () ) ;
    public final void rule__Evaluation__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11289:1: ( ( () ) )
            // InternalMyBashParser.g:11290:1: ( () )
            {
            // InternalMyBashParser.g:11290:1: ( () )
            // InternalMyBashParser.g:11291:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:11292:2: ()
            // InternalMyBashParser.g:11292:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group_1__0__Impl"


    // $ANTLR start "rule__Evaluation__Group_1__1"
    // InternalMyBashParser.g:11300:1: rule__Evaluation__Group_1__1 : rule__Evaluation__Group_1__1__Impl rule__Evaluation__Group_1__2 ;
    public final void rule__Evaluation__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11304:1: ( rule__Evaluation__Group_1__1__Impl rule__Evaluation__Group_1__2 )
            // InternalMyBashParser.g:11305:2: rule__Evaluation__Group_1__1__Impl rule__Evaluation__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__Evaluation__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Evaluation__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group_1__1"


    // $ANTLR start "rule__Evaluation__Group_1__1__Impl"
    // InternalMyBashParser.g:11312:1: rule__Evaluation__Group_1__1__Impl : ( ( rule__Evaluation__OpAssignment_1_1 ) ) ;
    public final void rule__Evaluation__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11316:1: ( ( ( rule__Evaluation__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:11317:1: ( ( rule__Evaluation__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:11317:1: ( ( rule__Evaluation__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:11318:2: ( rule__Evaluation__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:11319:2: ( rule__Evaluation__OpAssignment_1_1 )
            // InternalMyBashParser.g:11319:3: rule__Evaluation__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Evaluation__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group_1__1__Impl"


    // $ANTLR start "rule__Evaluation__Group_1__2"
    // InternalMyBashParser.g:11327:1: rule__Evaluation__Group_1__2 : rule__Evaluation__Group_1__2__Impl ;
    public final void rule__Evaluation__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11331:1: ( rule__Evaluation__Group_1__2__Impl )
            // InternalMyBashParser.g:11332:2: rule__Evaluation__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Evaluation__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group_1__2"


    // $ANTLR start "rule__Evaluation__Group_1__2__Impl"
    // InternalMyBashParser.g:11338:1: rule__Evaluation__Group_1__2__Impl : ( ( rule__Evaluation__RightAssignment_1_2 ) ) ;
    public final void rule__Evaluation__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11342:1: ( ( ( rule__Evaluation__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:11343:1: ( ( rule__Evaluation__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:11343:1: ( ( rule__Evaluation__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:11344:2: ( rule__Evaluation__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:11345:2: ( rule__Evaluation__RightAssignment_1_2 )
            // InternalMyBashParser.g:11345:3: rule__Evaluation__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Evaluation__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__Group_1__2__Impl"


    // $ANTLR start "rule__Arithmetic__Group_0__0"
    // InternalMyBashParser.g:11354:1: rule__Arithmetic__Group_0__0 : rule__Arithmetic__Group_0__0__Impl rule__Arithmetic__Group_0__1 ;
    public final void rule__Arithmetic__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11358:1: ( rule__Arithmetic__Group_0__0__Impl rule__Arithmetic__Group_0__1 )
            // InternalMyBashParser.g:11359:2: rule__Arithmetic__Group_0__0__Impl rule__Arithmetic__Group_0__1
            {
            pushFollow(FOLLOW_86);
            rule__Arithmetic__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arithmetic__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__0"


    // $ANTLR start "rule__Arithmetic__Group_0__0__Impl"
    // InternalMyBashParser.g:11366:1: rule__Arithmetic__Group_0__0__Impl : ( () ) ;
    public final void rule__Arithmetic__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11370:1: ( ( () ) )
            // InternalMyBashParser.g:11371:1: ( () )
            {
            // InternalMyBashParser.g:11371:1: ( () )
            // InternalMyBashParser.g:11372:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getBinaryExpressionAction_0_0()); 
            }
            // InternalMyBashParser.g:11373:2: ()
            // InternalMyBashParser.g:11373:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getBinaryExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__0__Impl"


    // $ANTLR start "rule__Arithmetic__Group_0__1"
    // InternalMyBashParser.g:11381:1: rule__Arithmetic__Group_0__1 : rule__Arithmetic__Group_0__1__Impl rule__Arithmetic__Group_0__2 ;
    public final void rule__Arithmetic__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11385:1: ( rule__Arithmetic__Group_0__1__Impl rule__Arithmetic__Group_0__2 )
            // InternalMyBashParser.g:11386:2: rule__Arithmetic__Group_0__1__Impl rule__Arithmetic__Group_0__2
            {
            pushFollow(FOLLOW_87);
            rule__Arithmetic__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arithmetic__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__1"


    // $ANTLR start "rule__Arithmetic__Group_0__1__Impl"
    // InternalMyBashParser.g:11393:1: rule__Arithmetic__Group_0__1__Impl : ( ( rule__Arithmetic__LeftAssignment_0_1 ) ) ;
    public final void rule__Arithmetic__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11397:1: ( ( ( rule__Arithmetic__LeftAssignment_0_1 ) ) )
            // InternalMyBashParser.g:11398:1: ( ( rule__Arithmetic__LeftAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:11398:1: ( ( rule__Arithmetic__LeftAssignment_0_1 ) )
            // InternalMyBashParser.g:11399:2: ( rule__Arithmetic__LeftAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getLeftAssignment_0_1()); 
            }
            // InternalMyBashParser.g:11400:2: ( rule__Arithmetic__LeftAssignment_0_1 )
            // InternalMyBashParser.g:11400:3: rule__Arithmetic__LeftAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Arithmetic__LeftAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getLeftAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__1__Impl"


    // $ANTLR start "rule__Arithmetic__Group_0__2"
    // InternalMyBashParser.g:11408:1: rule__Arithmetic__Group_0__2 : rule__Arithmetic__Group_0__2__Impl rule__Arithmetic__Group_0__3 ;
    public final void rule__Arithmetic__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11412:1: ( rule__Arithmetic__Group_0__2__Impl rule__Arithmetic__Group_0__3 )
            // InternalMyBashParser.g:11413:2: rule__Arithmetic__Group_0__2__Impl rule__Arithmetic__Group_0__3
            {
            pushFollow(FOLLOW_31);
            rule__Arithmetic__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arithmetic__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__2"


    // $ANTLR start "rule__Arithmetic__Group_0__2__Impl"
    // InternalMyBashParser.g:11420:1: rule__Arithmetic__Group_0__2__Impl : ( ( rule__Arithmetic__OpAssignment_0_2 ) ) ;
    public final void rule__Arithmetic__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11424:1: ( ( ( rule__Arithmetic__OpAssignment_0_2 ) ) )
            // InternalMyBashParser.g:11425:1: ( ( rule__Arithmetic__OpAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:11425:1: ( ( rule__Arithmetic__OpAssignment_0_2 ) )
            // InternalMyBashParser.g:11426:2: ( rule__Arithmetic__OpAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getOpAssignment_0_2()); 
            }
            // InternalMyBashParser.g:11427:2: ( rule__Arithmetic__OpAssignment_0_2 )
            // InternalMyBashParser.g:11427:3: rule__Arithmetic__OpAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Arithmetic__OpAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getOpAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__2__Impl"


    // $ANTLR start "rule__Arithmetic__Group_0__3"
    // InternalMyBashParser.g:11435:1: rule__Arithmetic__Group_0__3 : rule__Arithmetic__Group_0__3__Impl ;
    public final void rule__Arithmetic__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11439:1: ( rule__Arithmetic__Group_0__3__Impl )
            // InternalMyBashParser.g:11440:2: rule__Arithmetic__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Arithmetic__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__3"


    // $ANTLR start "rule__Arithmetic__Group_0__3__Impl"
    // InternalMyBashParser.g:11446:1: rule__Arithmetic__Group_0__3__Impl : ( ( rule__Arithmetic__RightAssignment_0_3 ) ) ;
    public final void rule__Arithmetic__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11450:1: ( ( ( rule__Arithmetic__RightAssignment_0_3 ) ) )
            // InternalMyBashParser.g:11451:1: ( ( rule__Arithmetic__RightAssignment_0_3 ) )
            {
            // InternalMyBashParser.g:11451:1: ( ( rule__Arithmetic__RightAssignment_0_3 ) )
            // InternalMyBashParser.g:11452:2: ( rule__Arithmetic__RightAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getRightAssignment_0_3()); 
            }
            // InternalMyBashParser.g:11453:2: ( rule__Arithmetic__RightAssignment_0_3 )
            // InternalMyBashParser.g:11453:3: rule__Arithmetic__RightAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__Arithmetic__RightAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getRightAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__Group_0__3__Impl"


    // $ANTLR start "rule__ConditionalOperator__Group__0"
    // InternalMyBashParser.g:11462:1: rule__ConditionalOperator__Group__0 : rule__ConditionalOperator__Group__0__Impl rule__ConditionalOperator__Group__1 ;
    public final void rule__ConditionalOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11466:1: ( rule__ConditionalOperator__Group__0__Impl rule__ConditionalOperator__Group__1 )
            // InternalMyBashParser.g:11467:2: rule__ConditionalOperator__Group__0__Impl rule__ConditionalOperator__Group__1
            {
            pushFollow(FOLLOW_88);
            rule__ConditionalOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group__0"


    // $ANTLR start "rule__ConditionalOperator__Group__0__Impl"
    // InternalMyBashParser.g:11474:1: rule__ConditionalOperator__Group__0__Impl : ( ruleLogicOr ) ;
    public final void rule__ConditionalOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11478:1: ( ( ruleLogicOr ) )
            // InternalMyBashParser.g:11479:1: ( ruleLogicOr )
            {
            // InternalMyBashParser.g:11479:1: ( ruleLogicOr )
            // InternalMyBashParser.g:11480:2: ruleLogicOr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getLogicOrParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getLogicOrParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group__0__Impl"


    // $ANTLR start "rule__ConditionalOperator__Group__1"
    // InternalMyBashParser.g:11489:1: rule__ConditionalOperator__Group__1 : rule__ConditionalOperator__Group__1__Impl ;
    public final void rule__ConditionalOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11493:1: ( rule__ConditionalOperator__Group__1__Impl )
            // InternalMyBashParser.g:11494:2: rule__ConditionalOperator__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group__1"


    // $ANTLR start "rule__ConditionalOperator__Group__1__Impl"
    // InternalMyBashParser.g:11500:1: rule__ConditionalOperator__Group__1__Impl : ( ( rule__ConditionalOperator__Group_1__0 )? ) ;
    public final void rule__ConditionalOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11504:1: ( ( ( rule__ConditionalOperator__Group_1__0 )? ) )
            // InternalMyBashParser.g:11505:1: ( ( rule__ConditionalOperator__Group_1__0 )? )
            {
            // InternalMyBashParser.g:11505:1: ( ( rule__ConditionalOperator__Group_1__0 )? )
            // InternalMyBashParser.g:11506:2: ( rule__ConditionalOperator__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:11507:2: ( rule__ConditionalOperator__Group_1__0 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==QuestionMark) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalMyBashParser.g:11507:3: rule__ConditionalOperator__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConditionalOperator__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group__1__Impl"


    // $ANTLR start "rule__ConditionalOperator__Group_1__0"
    // InternalMyBashParser.g:11516:1: rule__ConditionalOperator__Group_1__0 : rule__ConditionalOperator__Group_1__0__Impl rule__ConditionalOperator__Group_1__1 ;
    public final void rule__ConditionalOperator__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11520:1: ( rule__ConditionalOperator__Group_1__0__Impl rule__ConditionalOperator__Group_1__1 )
            // InternalMyBashParser.g:11521:2: rule__ConditionalOperator__Group_1__0__Impl rule__ConditionalOperator__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__ConditionalOperator__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__0"


    // $ANTLR start "rule__ConditionalOperator__Group_1__0__Impl"
    // InternalMyBashParser.g:11528:1: rule__ConditionalOperator__Group_1__0__Impl : ( QuestionMark ) ;
    public final void rule__ConditionalOperator__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11532:1: ( ( QuestionMark ) )
            // InternalMyBashParser.g:11533:1: ( QuestionMark )
            {
            // InternalMyBashParser.g:11533:1: ( QuestionMark )
            // InternalMyBashParser.g:11534:2: QuestionMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getQuestionMarkKeyword_1_0()); 
            }
            match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getQuestionMarkKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__0__Impl"


    // $ANTLR start "rule__ConditionalOperator__Group_1__1"
    // InternalMyBashParser.g:11543:1: rule__ConditionalOperator__Group_1__1 : rule__ConditionalOperator__Group_1__1__Impl rule__ConditionalOperator__Group_1__2 ;
    public final void rule__ConditionalOperator__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11547:1: ( rule__ConditionalOperator__Group_1__1__Impl rule__ConditionalOperator__Group_1__2 )
            // InternalMyBashParser.g:11548:2: rule__ConditionalOperator__Group_1__1__Impl rule__ConditionalOperator__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__ConditionalOperator__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__1"


    // $ANTLR start "rule__ConditionalOperator__Group_1__1__Impl"
    // InternalMyBashParser.g:11555:1: rule__ConditionalOperator__Group_1__1__Impl : ( () ) ;
    public final void rule__ConditionalOperator__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11559:1: ( ( () ) )
            // InternalMyBashParser.g:11560:1: ( () )
            {
            // InternalMyBashParser.g:11560:1: ( () )
            // InternalMyBashParser.g:11561:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getConditionalOperatorConditionAction_1_1()); 
            }
            // InternalMyBashParser.g:11562:2: ()
            // InternalMyBashParser.g:11562:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getConditionalOperatorConditionAction_1_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__1__Impl"


    // $ANTLR start "rule__ConditionalOperator__Group_1__2"
    // InternalMyBashParser.g:11570:1: rule__ConditionalOperator__Group_1__2 : rule__ConditionalOperator__Group_1__2__Impl rule__ConditionalOperator__Group_1__3 ;
    public final void rule__ConditionalOperator__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11574:1: ( rule__ConditionalOperator__Group_1__2__Impl rule__ConditionalOperator__Group_1__3 )
            // InternalMyBashParser.g:11575:2: rule__ConditionalOperator__Group_1__2__Impl rule__ConditionalOperator__Group_1__3
            {
            pushFollow(FOLLOW_81);
            rule__ConditionalOperator__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__2"


    // $ANTLR start "rule__ConditionalOperator__Group_1__2__Impl"
    // InternalMyBashParser.g:11582:1: rule__ConditionalOperator__Group_1__2__Impl : ( ( rule__ConditionalOperator__FirstAssignment_1_2 ) ) ;
    public final void rule__ConditionalOperator__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11586:1: ( ( ( rule__ConditionalOperator__FirstAssignment_1_2 ) ) )
            // InternalMyBashParser.g:11587:1: ( ( rule__ConditionalOperator__FirstAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:11587:1: ( ( rule__ConditionalOperator__FirstAssignment_1_2 ) )
            // InternalMyBashParser.g:11588:2: ( rule__ConditionalOperator__FirstAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getFirstAssignment_1_2()); 
            }
            // InternalMyBashParser.g:11589:2: ( rule__ConditionalOperator__FirstAssignment_1_2 )
            // InternalMyBashParser.g:11589:3: rule__ConditionalOperator__FirstAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__FirstAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getFirstAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__2__Impl"


    // $ANTLR start "rule__ConditionalOperator__Group_1__3"
    // InternalMyBashParser.g:11597:1: rule__ConditionalOperator__Group_1__3 : rule__ConditionalOperator__Group_1__3__Impl rule__ConditionalOperator__Group_1__4 ;
    public final void rule__ConditionalOperator__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11601:1: ( rule__ConditionalOperator__Group_1__3__Impl rule__ConditionalOperator__Group_1__4 )
            // InternalMyBashParser.g:11602:2: rule__ConditionalOperator__Group_1__3__Impl rule__ConditionalOperator__Group_1__4
            {
            pushFollow(FOLLOW_31);
            rule__ConditionalOperator__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__3"


    // $ANTLR start "rule__ConditionalOperator__Group_1__3__Impl"
    // InternalMyBashParser.g:11609:1: rule__ConditionalOperator__Group_1__3__Impl : ( Colon ) ;
    public final void rule__ConditionalOperator__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11613:1: ( ( Colon ) )
            // InternalMyBashParser.g:11614:1: ( Colon )
            {
            // InternalMyBashParser.g:11614:1: ( Colon )
            // InternalMyBashParser.g:11615:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getColonKeyword_1_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getColonKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__3__Impl"


    // $ANTLR start "rule__ConditionalOperator__Group_1__4"
    // InternalMyBashParser.g:11624:1: rule__ConditionalOperator__Group_1__4 : rule__ConditionalOperator__Group_1__4__Impl ;
    public final void rule__ConditionalOperator__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11628:1: ( rule__ConditionalOperator__Group_1__4__Impl )
            // InternalMyBashParser.g:11629:2: rule__ConditionalOperator__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__4"


    // $ANTLR start "rule__ConditionalOperator__Group_1__4__Impl"
    // InternalMyBashParser.g:11635:1: rule__ConditionalOperator__Group_1__4__Impl : ( ( rule__ConditionalOperator__RightAssignment_1_4 ) ) ;
    public final void rule__ConditionalOperator__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11639:1: ( ( ( rule__ConditionalOperator__RightAssignment_1_4 ) ) )
            // InternalMyBashParser.g:11640:1: ( ( rule__ConditionalOperator__RightAssignment_1_4 ) )
            {
            // InternalMyBashParser.g:11640:1: ( ( rule__ConditionalOperator__RightAssignment_1_4 ) )
            // InternalMyBashParser.g:11641:2: ( rule__ConditionalOperator__RightAssignment_1_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getRightAssignment_1_4()); 
            }
            // InternalMyBashParser.g:11642:2: ( rule__ConditionalOperator__RightAssignment_1_4 )
            // InternalMyBashParser.g:11642:3: rule__ConditionalOperator__RightAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__ConditionalOperator__RightAssignment_1_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getRightAssignment_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__Group_1__4__Impl"


    // $ANTLR start "rule__LogicOr__Group__0"
    // InternalMyBashParser.g:11651:1: rule__LogicOr__Group__0 : rule__LogicOr__Group__0__Impl rule__LogicOr__Group__1 ;
    public final void rule__LogicOr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11655:1: ( rule__LogicOr__Group__0__Impl rule__LogicOr__Group__1 )
            // InternalMyBashParser.g:11656:2: rule__LogicOr__Group__0__Impl rule__LogicOr__Group__1
            {
            pushFollow(FOLLOW_89);
            rule__LogicOr__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicOr__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group__0"


    // $ANTLR start "rule__LogicOr__Group__0__Impl"
    // InternalMyBashParser.g:11663:1: rule__LogicOr__Group__0__Impl : ( ruleLogicAnd ) ;
    public final void rule__LogicOr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11667:1: ( ( ruleLogicAnd ) )
            // InternalMyBashParser.g:11668:1: ( ruleLogicAnd )
            {
            // InternalMyBashParser.g:11668:1: ( ruleLogicAnd )
            // InternalMyBashParser.g:11669:2: ruleLogicAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getLogicAndParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getLogicAndParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group__0__Impl"


    // $ANTLR start "rule__LogicOr__Group__1"
    // InternalMyBashParser.g:11678:1: rule__LogicOr__Group__1 : rule__LogicOr__Group__1__Impl ;
    public final void rule__LogicOr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11682:1: ( rule__LogicOr__Group__1__Impl )
            // InternalMyBashParser.g:11683:2: rule__LogicOr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicOr__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group__1"


    // $ANTLR start "rule__LogicOr__Group__1__Impl"
    // InternalMyBashParser.g:11689:1: rule__LogicOr__Group__1__Impl : ( ( rule__LogicOr__Group_1__0 )* ) ;
    public final void rule__LogicOr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11693:1: ( ( ( rule__LogicOr__Group_1__0 )* ) )
            // InternalMyBashParser.g:11694:1: ( ( rule__LogicOr__Group_1__0 )* )
            {
            // InternalMyBashParser.g:11694:1: ( ( rule__LogicOr__Group_1__0 )* )
            // InternalMyBashParser.g:11695:2: ( rule__LogicOr__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:11696:2: ( rule__LogicOr__Group_1__0 )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==VerticalLineVerticalLine) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalMyBashParser.g:11696:3: rule__LogicOr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_90);
            	    rule__LogicOr__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group__1__Impl"


    // $ANTLR start "rule__LogicOr__Group_1__0"
    // InternalMyBashParser.g:11705:1: rule__LogicOr__Group_1__0 : rule__LogicOr__Group_1__0__Impl rule__LogicOr__Group_1__1 ;
    public final void rule__LogicOr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11709:1: ( rule__LogicOr__Group_1__0__Impl rule__LogicOr__Group_1__1 )
            // InternalMyBashParser.g:11710:2: rule__LogicOr__Group_1__0__Impl rule__LogicOr__Group_1__1
            {
            pushFollow(FOLLOW_89);
            rule__LogicOr__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicOr__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group_1__0"


    // $ANTLR start "rule__LogicOr__Group_1__0__Impl"
    // InternalMyBashParser.g:11717:1: rule__LogicOr__Group_1__0__Impl : ( () ) ;
    public final void rule__LogicOr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11721:1: ( ( () ) )
            // InternalMyBashParser.g:11722:1: ( () )
            {
            // InternalMyBashParser.g:11722:1: ( () )
            // InternalMyBashParser.g:11723:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:11724:2: ()
            // InternalMyBashParser.g:11724:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group_1__0__Impl"


    // $ANTLR start "rule__LogicOr__Group_1__1"
    // InternalMyBashParser.g:11732:1: rule__LogicOr__Group_1__1 : rule__LogicOr__Group_1__1__Impl rule__LogicOr__Group_1__2 ;
    public final void rule__LogicOr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11736:1: ( rule__LogicOr__Group_1__1__Impl rule__LogicOr__Group_1__2 )
            // InternalMyBashParser.g:11737:2: rule__LogicOr__Group_1__1__Impl rule__LogicOr__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__LogicOr__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicOr__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group_1__1"


    // $ANTLR start "rule__LogicOr__Group_1__1__Impl"
    // InternalMyBashParser.g:11744:1: rule__LogicOr__Group_1__1__Impl : ( ( rule__LogicOr__OpAssignment_1_1 ) ) ;
    public final void rule__LogicOr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11748:1: ( ( ( rule__LogicOr__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:11749:1: ( ( rule__LogicOr__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:11749:1: ( ( rule__LogicOr__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:11750:2: ( rule__LogicOr__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:11751:2: ( rule__LogicOr__OpAssignment_1_1 )
            // InternalMyBashParser.g:11751:3: rule__LogicOr__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LogicOr__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group_1__1__Impl"


    // $ANTLR start "rule__LogicOr__Group_1__2"
    // InternalMyBashParser.g:11759:1: rule__LogicOr__Group_1__2 : rule__LogicOr__Group_1__2__Impl ;
    public final void rule__LogicOr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11763:1: ( rule__LogicOr__Group_1__2__Impl )
            // InternalMyBashParser.g:11764:2: rule__LogicOr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicOr__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group_1__2"


    // $ANTLR start "rule__LogicOr__Group_1__2__Impl"
    // InternalMyBashParser.g:11770:1: rule__LogicOr__Group_1__2__Impl : ( ( rule__LogicOr__RightAssignment_1_2 ) ) ;
    public final void rule__LogicOr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11774:1: ( ( ( rule__LogicOr__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:11775:1: ( ( rule__LogicOr__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:11775:1: ( ( rule__LogicOr__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:11776:2: ( rule__LogicOr__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:11777:2: ( rule__LogicOr__RightAssignment_1_2 )
            // InternalMyBashParser.g:11777:3: rule__LogicOr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LogicOr__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__Group_1__2__Impl"


    // $ANTLR start "rule__LogicAnd__Group__0"
    // InternalMyBashParser.g:11786:1: rule__LogicAnd__Group__0 : rule__LogicAnd__Group__0__Impl rule__LogicAnd__Group__1 ;
    public final void rule__LogicAnd__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11790:1: ( rule__LogicAnd__Group__0__Impl rule__LogicAnd__Group__1 )
            // InternalMyBashParser.g:11791:2: rule__LogicAnd__Group__0__Impl rule__LogicAnd__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__LogicAnd__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicAnd__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group__0"


    // $ANTLR start "rule__LogicAnd__Group__0__Impl"
    // InternalMyBashParser.g:11798:1: rule__LogicAnd__Group__0__Impl : ( ruleBitwiseOR ) ;
    public final void rule__LogicAnd__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11802:1: ( ( ruleBitwiseOR ) )
            // InternalMyBashParser.g:11803:1: ( ruleBitwiseOR )
            {
            // InternalMyBashParser.g:11803:1: ( ruleBitwiseOR )
            // InternalMyBashParser.g:11804:2: ruleBitwiseOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getBitwiseORParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getBitwiseORParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group__0__Impl"


    // $ANTLR start "rule__LogicAnd__Group__1"
    // InternalMyBashParser.g:11813:1: rule__LogicAnd__Group__1 : rule__LogicAnd__Group__1__Impl ;
    public final void rule__LogicAnd__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11817:1: ( rule__LogicAnd__Group__1__Impl )
            // InternalMyBashParser.g:11818:2: rule__LogicAnd__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicAnd__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group__1"


    // $ANTLR start "rule__LogicAnd__Group__1__Impl"
    // InternalMyBashParser.g:11824:1: rule__LogicAnd__Group__1__Impl : ( ( rule__LogicAnd__Group_1__0 )* ) ;
    public final void rule__LogicAnd__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11828:1: ( ( ( rule__LogicAnd__Group_1__0 )* ) )
            // InternalMyBashParser.g:11829:1: ( ( rule__LogicAnd__Group_1__0 )* )
            {
            // InternalMyBashParser.g:11829:1: ( ( rule__LogicAnd__Group_1__0 )* )
            // InternalMyBashParser.g:11830:2: ( rule__LogicAnd__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:11831:2: ( rule__LogicAnd__Group_1__0 )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==AmpersandAmpersand) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalMyBashParser.g:11831:3: rule__LogicAnd__Group_1__0
            	    {
            	    pushFollow(FOLLOW_92);
            	    rule__LogicAnd__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group__1__Impl"


    // $ANTLR start "rule__LogicAnd__Group_1__0"
    // InternalMyBashParser.g:11840:1: rule__LogicAnd__Group_1__0 : rule__LogicAnd__Group_1__0__Impl rule__LogicAnd__Group_1__1 ;
    public final void rule__LogicAnd__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11844:1: ( rule__LogicAnd__Group_1__0__Impl rule__LogicAnd__Group_1__1 )
            // InternalMyBashParser.g:11845:2: rule__LogicAnd__Group_1__0__Impl rule__LogicAnd__Group_1__1
            {
            pushFollow(FOLLOW_91);
            rule__LogicAnd__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicAnd__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group_1__0"


    // $ANTLR start "rule__LogicAnd__Group_1__0__Impl"
    // InternalMyBashParser.g:11852:1: rule__LogicAnd__Group_1__0__Impl : ( () ) ;
    public final void rule__LogicAnd__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11856:1: ( ( () ) )
            // InternalMyBashParser.g:11857:1: ( () )
            {
            // InternalMyBashParser.g:11857:1: ( () )
            // InternalMyBashParser.g:11858:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:11859:2: ()
            // InternalMyBashParser.g:11859:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group_1__0__Impl"


    // $ANTLR start "rule__LogicAnd__Group_1__1"
    // InternalMyBashParser.g:11867:1: rule__LogicAnd__Group_1__1 : rule__LogicAnd__Group_1__1__Impl rule__LogicAnd__Group_1__2 ;
    public final void rule__LogicAnd__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11871:1: ( rule__LogicAnd__Group_1__1__Impl rule__LogicAnd__Group_1__2 )
            // InternalMyBashParser.g:11872:2: rule__LogicAnd__Group_1__1__Impl rule__LogicAnd__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__LogicAnd__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicAnd__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group_1__1"


    // $ANTLR start "rule__LogicAnd__Group_1__1__Impl"
    // InternalMyBashParser.g:11879:1: rule__LogicAnd__Group_1__1__Impl : ( ( rule__LogicAnd__OpAssignment_1_1 ) ) ;
    public final void rule__LogicAnd__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11883:1: ( ( ( rule__LogicAnd__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:11884:1: ( ( rule__LogicAnd__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:11884:1: ( ( rule__LogicAnd__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:11885:2: ( rule__LogicAnd__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:11886:2: ( rule__LogicAnd__OpAssignment_1_1 )
            // InternalMyBashParser.g:11886:3: rule__LogicAnd__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LogicAnd__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group_1__1__Impl"


    // $ANTLR start "rule__LogicAnd__Group_1__2"
    // InternalMyBashParser.g:11894:1: rule__LogicAnd__Group_1__2 : rule__LogicAnd__Group_1__2__Impl ;
    public final void rule__LogicAnd__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11898:1: ( rule__LogicAnd__Group_1__2__Impl )
            // InternalMyBashParser.g:11899:2: rule__LogicAnd__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicAnd__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group_1__2"


    // $ANTLR start "rule__LogicAnd__Group_1__2__Impl"
    // InternalMyBashParser.g:11905:1: rule__LogicAnd__Group_1__2__Impl : ( ( rule__LogicAnd__RightAssignment_1_2 ) ) ;
    public final void rule__LogicAnd__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11909:1: ( ( ( rule__LogicAnd__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:11910:1: ( ( rule__LogicAnd__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:11910:1: ( ( rule__LogicAnd__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:11911:2: ( rule__LogicAnd__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:11912:2: ( rule__LogicAnd__RightAssignment_1_2 )
            // InternalMyBashParser.g:11912:3: rule__LogicAnd__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LogicAnd__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseOR__Group__0"
    // InternalMyBashParser.g:11921:1: rule__BitwiseOR__Group__0 : rule__BitwiseOR__Group__0__Impl rule__BitwiseOR__Group__1 ;
    public final void rule__BitwiseOR__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11925:1: ( rule__BitwiseOR__Group__0__Impl rule__BitwiseOR__Group__1 )
            // InternalMyBashParser.g:11926:2: rule__BitwiseOR__Group__0__Impl rule__BitwiseOR__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__BitwiseOR__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group__0"


    // $ANTLR start "rule__BitwiseOR__Group__0__Impl"
    // InternalMyBashParser.g:11933:1: rule__BitwiseOR__Group__0__Impl : ( ruleBitwiseExclusiveOR ) ;
    public final void rule__BitwiseOR__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11937:1: ( ( ruleBitwiseExclusiveOR ) )
            // InternalMyBashParser.g:11938:1: ( ruleBitwiseExclusiveOR )
            {
            // InternalMyBashParser.g:11938:1: ( ruleBitwiseExclusiveOR )
            // InternalMyBashParser.g:11939:2: ruleBitwiseExclusiveOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getBitwiseExclusiveORParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseExclusiveOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getBitwiseExclusiveORParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group__0__Impl"


    // $ANTLR start "rule__BitwiseOR__Group__1"
    // InternalMyBashParser.g:11948:1: rule__BitwiseOR__Group__1 : rule__BitwiseOR__Group__1__Impl ;
    public final void rule__BitwiseOR__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11952:1: ( rule__BitwiseOR__Group__1__Impl )
            // InternalMyBashParser.g:11953:2: rule__BitwiseOR__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group__1"


    // $ANTLR start "rule__BitwiseOR__Group__1__Impl"
    // InternalMyBashParser.g:11959:1: rule__BitwiseOR__Group__1__Impl : ( ( rule__BitwiseOR__Group_1__0 )* ) ;
    public final void rule__BitwiseOR__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11963:1: ( ( ( rule__BitwiseOR__Group_1__0 )* ) )
            // InternalMyBashParser.g:11964:1: ( ( rule__BitwiseOR__Group_1__0 )* )
            {
            // InternalMyBashParser.g:11964:1: ( ( rule__BitwiseOR__Group_1__0 )* )
            // InternalMyBashParser.g:11965:2: ( rule__BitwiseOR__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:11966:2: ( rule__BitwiseOR__Group_1__0 )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==VerticalLine) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // InternalMyBashParser.g:11966:3: rule__BitwiseOR__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__BitwiseOR__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group__1__Impl"


    // $ANTLR start "rule__BitwiseOR__Group_1__0"
    // InternalMyBashParser.g:11975:1: rule__BitwiseOR__Group_1__0 : rule__BitwiseOR__Group_1__0__Impl rule__BitwiseOR__Group_1__1 ;
    public final void rule__BitwiseOR__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11979:1: ( rule__BitwiseOR__Group_1__0__Impl rule__BitwiseOR__Group_1__1 )
            // InternalMyBashParser.g:11980:2: rule__BitwiseOR__Group_1__0__Impl rule__BitwiseOR__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__BitwiseOR__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group_1__0"


    // $ANTLR start "rule__BitwiseOR__Group_1__0__Impl"
    // InternalMyBashParser.g:11987:1: rule__BitwiseOR__Group_1__0__Impl : ( () ) ;
    public final void rule__BitwiseOR__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:11991:1: ( ( () ) )
            // InternalMyBashParser.g:11992:1: ( () )
            {
            // InternalMyBashParser.g:11992:1: ( () )
            // InternalMyBashParser.g:11993:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:11994:2: ()
            // InternalMyBashParser.g:11994:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group_1__0__Impl"


    // $ANTLR start "rule__BitwiseOR__Group_1__1"
    // InternalMyBashParser.g:12002:1: rule__BitwiseOR__Group_1__1 : rule__BitwiseOR__Group_1__1__Impl rule__BitwiseOR__Group_1__2 ;
    public final void rule__BitwiseOR__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12006:1: ( rule__BitwiseOR__Group_1__1__Impl rule__BitwiseOR__Group_1__2 )
            // InternalMyBashParser.g:12007:2: rule__BitwiseOR__Group_1__1__Impl rule__BitwiseOR__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__BitwiseOR__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group_1__1"


    // $ANTLR start "rule__BitwiseOR__Group_1__1__Impl"
    // InternalMyBashParser.g:12014:1: rule__BitwiseOR__Group_1__1__Impl : ( ( rule__BitwiseOR__OpAssignment_1_1 ) ) ;
    public final void rule__BitwiseOR__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12018:1: ( ( ( rule__BitwiseOR__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12019:1: ( ( rule__BitwiseOR__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12019:1: ( ( rule__BitwiseOR__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12020:2: ( rule__BitwiseOR__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12021:2: ( rule__BitwiseOR__OpAssignment_1_1 )
            // InternalMyBashParser.g:12021:3: rule__BitwiseOR__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group_1__1__Impl"


    // $ANTLR start "rule__BitwiseOR__Group_1__2"
    // InternalMyBashParser.g:12029:1: rule__BitwiseOR__Group_1__2 : rule__BitwiseOR__Group_1__2__Impl ;
    public final void rule__BitwiseOR__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12033:1: ( rule__BitwiseOR__Group_1__2__Impl )
            // InternalMyBashParser.g:12034:2: rule__BitwiseOR__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group_1__2"


    // $ANTLR start "rule__BitwiseOR__Group_1__2__Impl"
    // InternalMyBashParser.g:12040:1: rule__BitwiseOR__Group_1__2__Impl : ( ( rule__BitwiseOR__RightAssignment_1_2 ) ) ;
    public final void rule__BitwiseOR__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12044:1: ( ( ( rule__BitwiseOR__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12045:1: ( ( rule__BitwiseOR__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12045:1: ( ( rule__BitwiseOR__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12046:2: ( rule__BitwiseOR__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12047:2: ( rule__BitwiseOR__RightAssignment_1_2 )
            // InternalMyBashParser.g:12047:3: rule__BitwiseOR__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseOR__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group__0"
    // InternalMyBashParser.g:12056:1: rule__BitwiseExclusiveOR__Group__0 : rule__BitwiseExclusiveOR__Group__0__Impl rule__BitwiseExclusiveOR__Group__1 ;
    public final void rule__BitwiseExclusiveOR__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12060:1: ( rule__BitwiseExclusiveOR__Group__0__Impl rule__BitwiseExclusiveOR__Group__1 )
            // InternalMyBashParser.g:12061:2: rule__BitwiseExclusiveOR__Group__0__Impl rule__BitwiseExclusiveOR__Group__1
            {
            pushFollow(FOLLOW_93);
            rule__BitwiseExclusiveOR__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group__0"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group__0__Impl"
    // InternalMyBashParser.g:12068:1: rule__BitwiseExclusiveOR__Group__0__Impl : ( ruleBitwiseAND ) ;
    public final void rule__BitwiseExclusiveOR__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12072:1: ( ( ruleBitwiseAND ) )
            // InternalMyBashParser.g:12073:1: ( ruleBitwiseAND )
            {
            // InternalMyBashParser.g:12073:1: ( ruleBitwiseAND )
            // InternalMyBashParser.g:12074:2: ruleBitwiseAND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getBitwiseANDParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseAND();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getBitwiseANDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group__0__Impl"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group__1"
    // InternalMyBashParser.g:12083:1: rule__BitwiseExclusiveOR__Group__1 : rule__BitwiseExclusiveOR__Group__1__Impl ;
    public final void rule__BitwiseExclusiveOR__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12087:1: ( rule__BitwiseExclusiveOR__Group__1__Impl )
            // InternalMyBashParser.g:12088:2: rule__BitwiseExclusiveOR__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group__1"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group__1__Impl"
    // InternalMyBashParser.g:12094:1: rule__BitwiseExclusiveOR__Group__1__Impl : ( ( rule__BitwiseExclusiveOR__Group_1__0 )* ) ;
    public final void rule__BitwiseExclusiveOR__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12098:1: ( ( ( rule__BitwiseExclusiveOR__Group_1__0 )* ) )
            // InternalMyBashParser.g:12099:1: ( ( rule__BitwiseExclusiveOR__Group_1__0 )* )
            {
            // InternalMyBashParser.g:12099:1: ( ( rule__BitwiseExclusiveOR__Group_1__0 )* )
            // InternalMyBashParser.g:12100:2: ( rule__BitwiseExclusiveOR__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:12101:2: ( rule__BitwiseExclusiveOR__Group_1__0 )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==CircumflexAccent) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalMyBashParser.g:12101:3: rule__BitwiseExclusiveOR__Group_1__0
            	    {
            	    pushFollow(FOLLOW_94);
            	    rule__BitwiseExclusiveOR__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group__1__Impl"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group_1__0"
    // InternalMyBashParser.g:12110:1: rule__BitwiseExclusiveOR__Group_1__0 : rule__BitwiseExclusiveOR__Group_1__0__Impl rule__BitwiseExclusiveOR__Group_1__1 ;
    public final void rule__BitwiseExclusiveOR__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12114:1: ( rule__BitwiseExclusiveOR__Group_1__0__Impl rule__BitwiseExclusiveOR__Group_1__1 )
            // InternalMyBashParser.g:12115:2: rule__BitwiseExclusiveOR__Group_1__0__Impl rule__BitwiseExclusiveOR__Group_1__1
            {
            pushFollow(FOLLOW_93);
            rule__BitwiseExclusiveOR__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group_1__0"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group_1__0__Impl"
    // InternalMyBashParser.g:12122:1: rule__BitwiseExclusiveOR__Group_1__0__Impl : ( () ) ;
    public final void rule__BitwiseExclusiveOR__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12126:1: ( ( () ) )
            // InternalMyBashParser.g:12127:1: ( () )
            {
            // InternalMyBashParser.g:12127:1: ( () )
            // InternalMyBashParser.g:12128:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:12129:2: ()
            // InternalMyBashParser.g:12129:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group_1__0__Impl"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group_1__1"
    // InternalMyBashParser.g:12137:1: rule__BitwiseExclusiveOR__Group_1__1 : rule__BitwiseExclusiveOR__Group_1__1__Impl rule__BitwiseExclusiveOR__Group_1__2 ;
    public final void rule__BitwiseExclusiveOR__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12141:1: ( rule__BitwiseExclusiveOR__Group_1__1__Impl rule__BitwiseExclusiveOR__Group_1__2 )
            // InternalMyBashParser.g:12142:2: rule__BitwiseExclusiveOR__Group_1__1__Impl rule__BitwiseExclusiveOR__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__BitwiseExclusiveOR__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group_1__1"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group_1__1__Impl"
    // InternalMyBashParser.g:12149:1: rule__BitwiseExclusiveOR__Group_1__1__Impl : ( ( rule__BitwiseExclusiveOR__OpAssignment_1_1 ) ) ;
    public final void rule__BitwiseExclusiveOR__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12153:1: ( ( ( rule__BitwiseExclusiveOR__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12154:1: ( ( rule__BitwiseExclusiveOR__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12154:1: ( ( rule__BitwiseExclusiveOR__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12155:2: ( rule__BitwiseExclusiveOR__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12156:2: ( rule__BitwiseExclusiveOR__OpAssignment_1_1 )
            // InternalMyBashParser.g:12156:3: rule__BitwiseExclusiveOR__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group_1__1__Impl"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group_1__2"
    // InternalMyBashParser.g:12164:1: rule__BitwiseExclusiveOR__Group_1__2 : rule__BitwiseExclusiveOR__Group_1__2__Impl ;
    public final void rule__BitwiseExclusiveOR__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12168:1: ( rule__BitwiseExclusiveOR__Group_1__2__Impl )
            // InternalMyBashParser.g:12169:2: rule__BitwiseExclusiveOR__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group_1__2"


    // $ANTLR start "rule__BitwiseExclusiveOR__Group_1__2__Impl"
    // InternalMyBashParser.g:12175:1: rule__BitwiseExclusiveOR__Group_1__2__Impl : ( ( rule__BitwiseExclusiveOR__RightAssignment_1_2 ) ) ;
    public final void rule__BitwiseExclusiveOR__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12179:1: ( ( ( rule__BitwiseExclusiveOR__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12180:1: ( ( rule__BitwiseExclusiveOR__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12180:1: ( ( rule__BitwiseExclusiveOR__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12181:2: ( rule__BitwiseExclusiveOR__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12182:2: ( rule__BitwiseExclusiveOR__RightAssignment_1_2 )
            // InternalMyBashParser.g:12182:3: rule__BitwiseExclusiveOR__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseExclusiveOR__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseAND__Group__0"
    // InternalMyBashParser.g:12191:1: rule__BitwiseAND__Group__0 : rule__BitwiseAND__Group__0__Impl rule__BitwiseAND__Group__1 ;
    public final void rule__BitwiseAND__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12195:1: ( rule__BitwiseAND__Group__0__Impl rule__BitwiseAND__Group__1 )
            // InternalMyBashParser.g:12196:2: rule__BitwiseAND__Group__0__Impl rule__BitwiseAND__Group__1
            {
            pushFollow(FOLLOW_95);
            rule__BitwiseAND__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group__0"


    // $ANTLR start "rule__BitwiseAND__Group__0__Impl"
    // InternalMyBashParser.g:12203:1: rule__BitwiseAND__Group__0__Impl : ( ruleEqualityAndInequality ) ;
    public final void rule__BitwiseAND__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12207:1: ( ( ruleEqualityAndInequality ) )
            // InternalMyBashParser.g:12208:1: ( ruleEqualityAndInequality )
            {
            // InternalMyBashParser.g:12208:1: ( ruleEqualityAndInequality )
            // InternalMyBashParser.g:12209:2: ruleEqualityAndInequality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getEqualityAndInequalityParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityAndInequality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getEqualityAndInequalityParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group__0__Impl"


    // $ANTLR start "rule__BitwiseAND__Group__1"
    // InternalMyBashParser.g:12218:1: rule__BitwiseAND__Group__1 : rule__BitwiseAND__Group__1__Impl ;
    public final void rule__BitwiseAND__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12222:1: ( rule__BitwiseAND__Group__1__Impl )
            // InternalMyBashParser.g:12223:2: rule__BitwiseAND__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group__1"


    // $ANTLR start "rule__BitwiseAND__Group__1__Impl"
    // InternalMyBashParser.g:12229:1: rule__BitwiseAND__Group__1__Impl : ( ( rule__BitwiseAND__Group_1__0 )* ) ;
    public final void rule__BitwiseAND__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12233:1: ( ( ( rule__BitwiseAND__Group_1__0 )* ) )
            // InternalMyBashParser.g:12234:1: ( ( rule__BitwiseAND__Group_1__0 )* )
            {
            // InternalMyBashParser.g:12234:1: ( ( rule__BitwiseAND__Group_1__0 )* )
            // InternalMyBashParser.g:12235:2: ( rule__BitwiseAND__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:12236:2: ( rule__BitwiseAND__Group_1__0 )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==Ampersand) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalMyBashParser.g:12236:3: rule__BitwiseAND__Group_1__0
            	    {
            	    pushFollow(FOLLOW_96);
            	    rule__BitwiseAND__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group__1__Impl"


    // $ANTLR start "rule__BitwiseAND__Group_1__0"
    // InternalMyBashParser.g:12245:1: rule__BitwiseAND__Group_1__0 : rule__BitwiseAND__Group_1__0__Impl rule__BitwiseAND__Group_1__1 ;
    public final void rule__BitwiseAND__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12249:1: ( rule__BitwiseAND__Group_1__0__Impl rule__BitwiseAND__Group_1__1 )
            // InternalMyBashParser.g:12250:2: rule__BitwiseAND__Group_1__0__Impl rule__BitwiseAND__Group_1__1
            {
            pushFollow(FOLLOW_95);
            rule__BitwiseAND__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group_1__0"


    // $ANTLR start "rule__BitwiseAND__Group_1__0__Impl"
    // InternalMyBashParser.g:12257:1: rule__BitwiseAND__Group_1__0__Impl : ( () ) ;
    public final void rule__BitwiseAND__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12261:1: ( ( () ) )
            // InternalMyBashParser.g:12262:1: ( () )
            {
            // InternalMyBashParser.g:12262:1: ( () )
            // InternalMyBashParser.g:12263:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:12264:2: ()
            // InternalMyBashParser.g:12264:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group_1__0__Impl"


    // $ANTLR start "rule__BitwiseAND__Group_1__1"
    // InternalMyBashParser.g:12272:1: rule__BitwiseAND__Group_1__1 : rule__BitwiseAND__Group_1__1__Impl rule__BitwiseAND__Group_1__2 ;
    public final void rule__BitwiseAND__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12276:1: ( rule__BitwiseAND__Group_1__1__Impl rule__BitwiseAND__Group_1__2 )
            // InternalMyBashParser.g:12277:2: rule__BitwiseAND__Group_1__1__Impl rule__BitwiseAND__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__BitwiseAND__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group_1__1"


    // $ANTLR start "rule__BitwiseAND__Group_1__1__Impl"
    // InternalMyBashParser.g:12284:1: rule__BitwiseAND__Group_1__1__Impl : ( ( rule__BitwiseAND__OpAssignment_1_1 ) ) ;
    public final void rule__BitwiseAND__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12288:1: ( ( ( rule__BitwiseAND__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12289:1: ( ( rule__BitwiseAND__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12289:1: ( ( rule__BitwiseAND__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12290:2: ( rule__BitwiseAND__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12291:2: ( rule__BitwiseAND__OpAssignment_1_1 )
            // InternalMyBashParser.g:12291:3: rule__BitwiseAND__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group_1__1__Impl"


    // $ANTLR start "rule__BitwiseAND__Group_1__2"
    // InternalMyBashParser.g:12299:1: rule__BitwiseAND__Group_1__2 : rule__BitwiseAND__Group_1__2__Impl ;
    public final void rule__BitwiseAND__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12303:1: ( rule__BitwiseAND__Group_1__2__Impl )
            // InternalMyBashParser.g:12304:2: rule__BitwiseAND__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group_1__2"


    // $ANTLR start "rule__BitwiseAND__Group_1__2__Impl"
    // InternalMyBashParser.g:12310:1: rule__BitwiseAND__Group_1__2__Impl : ( ( rule__BitwiseAND__RightAssignment_1_2 ) ) ;
    public final void rule__BitwiseAND__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12314:1: ( ( ( rule__BitwiseAND__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12315:1: ( ( rule__BitwiseAND__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12315:1: ( ( rule__BitwiseAND__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12316:2: ( rule__BitwiseAND__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12317:2: ( rule__BitwiseAND__RightAssignment_1_2 )
            // InternalMyBashParser.g:12317:3: rule__BitwiseAND__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseAND__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__Group_1__2__Impl"


    // $ANTLR start "rule__EqualityAndInequality__Group__0"
    // InternalMyBashParser.g:12326:1: rule__EqualityAndInequality__Group__0 : rule__EqualityAndInequality__Group__0__Impl rule__EqualityAndInequality__Group__1 ;
    public final void rule__EqualityAndInequality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12330:1: ( rule__EqualityAndInequality__Group__0__Impl rule__EqualityAndInequality__Group__1 )
            // InternalMyBashParser.g:12331:2: rule__EqualityAndInequality__Group__0__Impl rule__EqualityAndInequality__Group__1
            {
            pushFollow(FOLLOW_97);
            rule__EqualityAndInequality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group__0"


    // $ANTLR start "rule__EqualityAndInequality__Group__0__Impl"
    // InternalMyBashParser.g:12338:1: rule__EqualityAndInequality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__EqualityAndInequality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12342:1: ( ( ruleComparison ) )
            // InternalMyBashParser.g:12343:1: ( ruleComparison )
            {
            // InternalMyBashParser.g:12343:1: ( ruleComparison )
            // InternalMyBashParser.g:12344:2: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getComparisonParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getComparisonParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group__0__Impl"


    // $ANTLR start "rule__EqualityAndInequality__Group__1"
    // InternalMyBashParser.g:12353:1: rule__EqualityAndInequality__Group__1 : rule__EqualityAndInequality__Group__1__Impl ;
    public final void rule__EqualityAndInequality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12357:1: ( rule__EqualityAndInequality__Group__1__Impl )
            // InternalMyBashParser.g:12358:2: rule__EqualityAndInequality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group__1"


    // $ANTLR start "rule__EqualityAndInequality__Group__1__Impl"
    // InternalMyBashParser.g:12364:1: rule__EqualityAndInequality__Group__1__Impl : ( ( rule__EqualityAndInequality__Group_1__0 )* ) ;
    public final void rule__EqualityAndInequality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12368:1: ( ( ( rule__EqualityAndInequality__Group_1__0 )* ) )
            // InternalMyBashParser.g:12369:1: ( ( rule__EqualityAndInequality__Group_1__0 )* )
            {
            // InternalMyBashParser.g:12369:1: ( ( rule__EqualityAndInequality__Group_1__0 )* )
            // InternalMyBashParser.g:12370:2: ( rule__EqualityAndInequality__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:12371:2: ( rule__EqualityAndInequality__Group_1__0 )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==ExclamationMarkEqualsSign||LA121_0==EqualsSignEqualsSign) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalMyBashParser.g:12371:3: rule__EqualityAndInequality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_98);
            	    rule__EqualityAndInequality__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group__1__Impl"


    // $ANTLR start "rule__EqualityAndInequality__Group_1__0"
    // InternalMyBashParser.g:12380:1: rule__EqualityAndInequality__Group_1__0 : rule__EqualityAndInequality__Group_1__0__Impl rule__EqualityAndInequality__Group_1__1 ;
    public final void rule__EqualityAndInequality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12384:1: ( rule__EqualityAndInequality__Group_1__0__Impl rule__EqualityAndInequality__Group_1__1 )
            // InternalMyBashParser.g:12385:2: rule__EqualityAndInequality__Group_1__0__Impl rule__EqualityAndInequality__Group_1__1
            {
            pushFollow(FOLLOW_97);
            rule__EqualityAndInequality__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group_1__0"


    // $ANTLR start "rule__EqualityAndInequality__Group_1__0__Impl"
    // InternalMyBashParser.g:12392:1: rule__EqualityAndInequality__Group_1__0__Impl : ( () ) ;
    public final void rule__EqualityAndInequality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12396:1: ( ( () ) )
            // InternalMyBashParser.g:12397:1: ( () )
            {
            // InternalMyBashParser.g:12397:1: ( () )
            // InternalMyBashParser.g:12398:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:12399:2: ()
            // InternalMyBashParser.g:12399:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group_1__0__Impl"


    // $ANTLR start "rule__EqualityAndInequality__Group_1__1"
    // InternalMyBashParser.g:12407:1: rule__EqualityAndInequality__Group_1__1 : rule__EqualityAndInequality__Group_1__1__Impl rule__EqualityAndInequality__Group_1__2 ;
    public final void rule__EqualityAndInequality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12411:1: ( rule__EqualityAndInequality__Group_1__1__Impl rule__EqualityAndInequality__Group_1__2 )
            // InternalMyBashParser.g:12412:2: rule__EqualityAndInequality__Group_1__1__Impl rule__EqualityAndInequality__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__EqualityAndInequality__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group_1__1"


    // $ANTLR start "rule__EqualityAndInequality__Group_1__1__Impl"
    // InternalMyBashParser.g:12419:1: rule__EqualityAndInequality__Group_1__1__Impl : ( ( rule__EqualityAndInequality__OpAssignment_1_1 ) ) ;
    public final void rule__EqualityAndInequality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12423:1: ( ( ( rule__EqualityAndInequality__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12424:1: ( ( rule__EqualityAndInequality__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12424:1: ( ( rule__EqualityAndInequality__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12425:2: ( rule__EqualityAndInequality__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12426:2: ( rule__EqualityAndInequality__OpAssignment_1_1 )
            // InternalMyBashParser.g:12426:3: rule__EqualityAndInequality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group_1__1__Impl"


    // $ANTLR start "rule__EqualityAndInequality__Group_1__2"
    // InternalMyBashParser.g:12434:1: rule__EqualityAndInequality__Group_1__2 : rule__EqualityAndInequality__Group_1__2__Impl ;
    public final void rule__EqualityAndInequality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12438:1: ( rule__EqualityAndInequality__Group_1__2__Impl )
            // InternalMyBashParser.g:12439:2: rule__EqualityAndInequality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group_1__2"


    // $ANTLR start "rule__EqualityAndInequality__Group_1__2__Impl"
    // InternalMyBashParser.g:12445:1: rule__EqualityAndInequality__Group_1__2__Impl : ( ( rule__EqualityAndInequality__RightAssignment_1_2 ) ) ;
    public final void rule__EqualityAndInequality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12449:1: ( ( ( rule__EqualityAndInequality__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12450:1: ( ( rule__EqualityAndInequality__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12450:1: ( ( rule__EqualityAndInequality__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12451:2: ( rule__EqualityAndInequality__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12452:2: ( rule__EqualityAndInequality__RightAssignment_1_2 )
            // InternalMyBashParser.g:12452:3: rule__EqualityAndInequality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalMyBashParser.g:12461:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12465:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalMyBashParser.g:12466:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_99);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalMyBashParser.g:12473:1: rule__Comparison__Group__0__Impl : ( ruleBitwiseShifts ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12477:1: ( ( ruleBitwiseShifts ) )
            // InternalMyBashParser.g:12478:1: ( ruleBitwiseShifts )
            {
            // InternalMyBashParser.g:12478:1: ( ruleBitwiseShifts )
            // InternalMyBashParser.g:12479:2: ruleBitwiseShifts
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getBitwiseShiftsParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseShifts();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getBitwiseShiftsParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalMyBashParser.g:12488:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12492:1: ( rule__Comparison__Group__1__Impl )
            // InternalMyBashParser.g:12493:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalMyBashParser.g:12499:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12503:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalMyBashParser.g:12504:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalMyBashParser.g:12504:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalMyBashParser.g:12505:2: ( rule__Comparison__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:12506:2: ( rule__Comparison__Group_1__0 )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==LessThanSignEqualsSign||LA122_0==GreaterThanSignEqualsSign||LA122_0==LessThanSign||LA122_0==GreaterThanSign) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalMyBashParser.g:12506:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_100);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalMyBashParser.g:12515:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12519:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalMyBashParser.g:12520:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_99);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalMyBashParser.g:12527:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12531:1: ( ( () ) )
            // InternalMyBashParser.g:12532:1: ( () )
            {
            // InternalMyBashParser.g:12532:1: ( () )
            // InternalMyBashParser.g:12533:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:12534:2: ()
            // InternalMyBashParser.g:12534:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalMyBashParser.g:12542:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12546:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalMyBashParser.g:12547:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalMyBashParser.g:12554:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12558:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12559:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12559:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12560:2: ( rule__Comparison__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12561:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalMyBashParser.g:12561:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalMyBashParser.g:12569:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12573:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalMyBashParser.g:12574:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalMyBashParser.g:12580:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12584:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12585:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12585:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12586:2: ( rule__Comparison__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12587:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalMyBashParser.g:12587:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseShifts__Group__0"
    // InternalMyBashParser.g:12596:1: rule__BitwiseShifts__Group__0 : rule__BitwiseShifts__Group__0__Impl rule__BitwiseShifts__Group__1 ;
    public final void rule__BitwiseShifts__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12600:1: ( rule__BitwiseShifts__Group__0__Impl rule__BitwiseShifts__Group__1 )
            // InternalMyBashParser.g:12601:2: rule__BitwiseShifts__Group__0__Impl rule__BitwiseShifts__Group__1
            {
            pushFollow(FOLLOW_101);
            rule__BitwiseShifts__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group__0"


    // $ANTLR start "rule__BitwiseShifts__Group__0__Impl"
    // InternalMyBashParser.g:12608:1: rule__BitwiseShifts__Group__0__Impl : ( ruleAdditionSubtraction ) ;
    public final void rule__BitwiseShifts__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12612:1: ( ( ruleAdditionSubtraction ) )
            // InternalMyBashParser.g:12613:1: ( ruleAdditionSubtraction )
            {
            // InternalMyBashParser.g:12613:1: ( ruleAdditionSubtraction )
            // InternalMyBashParser.g:12614:2: ruleAdditionSubtraction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getAdditionSubtractionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAdditionSubtraction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getAdditionSubtractionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group__0__Impl"


    // $ANTLR start "rule__BitwiseShifts__Group__1"
    // InternalMyBashParser.g:12623:1: rule__BitwiseShifts__Group__1 : rule__BitwiseShifts__Group__1__Impl ;
    public final void rule__BitwiseShifts__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12627:1: ( rule__BitwiseShifts__Group__1__Impl )
            // InternalMyBashParser.g:12628:2: rule__BitwiseShifts__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group__1"


    // $ANTLR start "rule__BitwiseShifts__Group__1__Impl"
    // InternalMyBashParser.g:12634:1: rule__BitwiseShifts__Group__1__Impl : ( ( rule__BitwiseShifts__Group_1__0 )* ) ;
    public final void rule__BitwiseShifts__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12638:1: ( ( ( rule__BitwiseShifts__Group_1__0 )* ) )
            // InternalMyBashParser.g:12639:1: ( ( rule__BitwiseShifts__Group_1__0 )* )
            {
            // InternalMyBashParser.g:12639:1: ( ( rule__BitwiseShifts__Group_1__0 )* )
            // InternalMyBashParser.g:12640:2: ( rule__BitwiseShifts__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:12641:2: ( rule__BitwiseShifts__Group_1__0 )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==LessThanSignLessThanSign||LA123_0==GreaterThanSignGreaterThanSign) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalMyBashParser.g:12641:3: rule__BitwiseShifts__Group_1__0
            	    {
            	    pushFollow(FOLLOW_102);
            	    rule__BitwiseShifts__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group__1__Impl"


    // $ANTLR start "rule__BitwiseShifts__Group_1__0"
    // InternalMyBashParser.g:12650:1: rule__BitwiseShifts__Group_1__0 : rule__BitwiseShifts__Group_1__0__Impl rule__BitwiseShifts__Group_1__1 ;
    public final void rule__BitwiseShifts__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12654:1: ( rule__BitwiseShifts__Group_1__0__Impl rule__BitwiseShifts__Group_1__1 )
            // InternalMyBashParser.g:12655:2: rule__BitwiseShifts__Group_1__0__Impl rule__BitwiseShifts__Group_1__1
            {
            pushFollow(FOLLOW_101);
            rule__BitwiseShifts__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group_1__0"


    // $ANTLR start "rule__BitwiseShifts__Group_1__0__Impl"
    // InternalMyBashParser.g:12662:1: rule__BitwiseShifts__Group_1__0__Impl : ( () ) ;
    public final void rule__BitwiseShifts__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12666:1: ( ( () ) )
            // InternalMyBashParser.g:12667:1: ( () )
            {
            // InternalMyBashParser.g:12667:1: ( () )
            // InternalMyBashParser.g:12668:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:12669:2: ()
            // InternalMyBashParser.g:12669:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group_1__0__Impl"


    // $ANTLR start "rule__BitwiseShifts__Group_1__1"
    // InternalMyBashParser.g:12677:1: rule__BitwiseShifts__Group_1__1 : rule__BitwiseShifts__Group_1__1__Impl rule__BitwiseShifts__Group_1__2 ;
    public final void rule__BitwiseShifts__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12681:1: ( rule__BitwiseShifts__Group_1__1__Impl rule__BitwiseShifts__Group_1__2 )
            // InternalMyBashParser.g:12682:2: rule__BitwiseShifts__Group_1__1__Impl rule__BitwiseShifts__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__BitwiseShifts__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group_1__1"


    // $ANTLR start "rule__BitwiseShifts__Group_1__1__Impl"
    // InternalMyBashParser.g:12689:1: rule__BitwiseShifts__Group_1__1__Impl : ( ( rule__BitwiseShifts__OpAssignment_1_1 ) ) ;
    public final void rule__BitwiseShifts__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12693:1: ( ( ( rule__BitwiseShifts__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12694:1: ( ( rule__BitwiseShifts__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12694:1: ( ( rule__BitwiseShifts__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12695:2: ( rule__BitwiseShifts__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12696:2: ( rule__BitwiseShifts__OpAssignment_1_1 )
            // InternalMyBashParser.g:12696:3: rule__BitwiseShifts__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group_1__1__Impl"


    // $ANTLR start "rule__BitwiseShifts__Group_1__2"
    // InternalMyBashParser.g:12704:1: rule__BitwiseShifts__Group_1__2 : rule__BitwiseShifts__Group_1__2__Impl ;
    public final void rule__BitwiseShifts__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12708:1: ( rule__BitwiseShifts__Group_1__2__Impl )
            // InternalMyBashParser.g:12709:2: rule__BitwiseShifts__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group_1__2"


    // $ANTLR start "rule__BitwiseShifts__Group_1__2__Impl"
    // InternalMyBashParser.g:12715:1: rule__BitwiseShifts__Group_1__2__Impl : ( ( rule__BitwiseShifts__RightAssignment_1_2 ) ) ;
    public final void rule__BitwiseShifts__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12719:1: ( ( ( rule__BitwiseShifts__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12720:1: ( ( rule__BitwiseShifts__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12720:1: ( ( rule__BitwiseShifts__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12721:2: ( rule__BitwiseShifts__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12722:2: ( rule__BitwiseShifts__RightAssignment_1_2 )
            // InternalMyBashParser.g:12722:3: rule__BitwiseShifts__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__Group_1__2__Impl"


    // $ANTLR start "rule__AdditionSubtraction__Group__0"
    // InternalMyBashParser.g:12731:1: rule__AdditionSubtraction__Group__0 : rule__AdditionSubtraction__Group__0__Impl rule__AdditionSubtraction__Group__1 ;
    public final void rule__AdditionSubtraction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12735:1: ( rule__AdditionSubtraction__Group__0__Impl rule__AdditionSubtraction__Group__1 )
            // InternalMyBashParser.g:12736:2: rule__AdditionSubtraction__Group__0__Impl rule__AdditionSubtraction__Group__1
            {
            pushFollow(FOLLOW_103);
            rule__AdditionSubtraction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group__0"


    // $ANTLR start "rule__AdditionSubtraction__Group__0__Impl"
    // InternalMyBashParser.g:12743:1: rule__AdditionSubtraction__Group__0__Impl : ( ruleMultiplicationDivisionRemainder ) ;
    public final void rule__AdditionSubtraction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12747:1: ( ( ruleMultiplicationDivisionRemainder ) )
            // InternalMyBashParser.g:12748:1: ( ruleMultiplicationDivisionRemainder )
            {
            // InternalMyBashParser.g:12748:1: ( ruleMultiplicationDivisionRemainder )
            // InternalMyBashParser.g:12749:2: ruleMultiplicationDivisionRemainder
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getMultiplicationDivisionRemainderParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiplicationDivisionRemainder();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getMultiplicationDivisionRemainderParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group__0__Impl"


    // $ANTLR start "rule__AdditionSubtraction__Group__1"
    // InternalMyBashParser.g:12758:1: rule__AdditionSubtraction__Group__1 : rule__AdditionSubtraction__Group__1__Impl ;
    public final void rule__AdditionSubtraction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12762:1: ( rule__AdditionSubtraction__Group__1__Impl )
            // InternalMyBashParser.g:12763:2: rule__AdditionSubtraction__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group__1"


    // $ANTLR start "rule__AdditionSubtraction__Group__1__Impl"
    // InternalMyBashParser.g:12769:1: rule__AdditionSubtraction__Group__1__Impl : ( ( rule__AdditionSubtraction__Group_1__0 )* ) ;
    public final void rule__AdditionSubtraction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12773:1: ( ( ( rule__AdditionSubtraction__Group_1__0 )* ) )
            // InternalMyBashParser.g:12774:1: ( ( rule__AdditionSubtraction__Group_1__0 )* )
            {
            // InternalMyBashParser.g:12774:1: ( ( rule__AdditionSubtraction__Group_1__0 )* )
            // InternalMyBashParser.g:12775:2: ( rule__AdditionSubtraction__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:12776:2: ( rule__AdditionSubtraction__Group_1__0 )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==PlusSign||LA124_0==HyphenMinus) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalMyBashParser.g:12776:3: rule__AdditionSubtraction__Group_1__0
            	    {
            	    pushFollow(FOLLOW_104);
            	    rule__AdditionSubtraction__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group__1__Impl"


    // $ANTLR start "rule__AdditionSubtraction__Group_1__0"
    // InternalMyBashParser.g:12785:1: rule__AdditionSubtraction__Group_1__0 : rule__AdditionSubtraction__Group_1__0__Impl rule__AdditionSubtraction__Group_1__1 ;
    public final void rule__AdditionSubtraction__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12789:1: ( rule__AdditionSubtraction__Group_1__0__Impl rule__AdditionSubtraction__Group_1__1 )
            // InternalMyBashParser.g:12790:2: rule__AdditionSubtraction__Group_1__0__Impl rule__AdditionSubtraction__Group_1__1
            {
            pushFollow(FOLLOW_103);
            rule__AdditionSubtraction__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group_1__0"


    // $ANTLR start "rule__AdditionSubtraction__Group_1__0__Impl"
    // InternalMyBashParser.g:12797:1: rule__AdditionSubtraction__Group_1__0__Impl : ( () ) ;
    public final void rule__AdditionSubtraction__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12801:1: ( ( () ) )
            // InternalMyBashParser.g:12802:1: ( () )
            {
            // InternalMyBashParser.g:12802:1: ( () )
            // InternalMyBashParser.g:12803:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:12804:2: ()
            // InternalMyBashParser.g:12804:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group_1__0__Impl"


    // $ANTLR start "rule__AdditionSubtraction__Group_1__1"
    // InternalMyBashParser.g:12812:1: rule__AdditionSubtraction__Group_1__1 : rule__AdditionSubtraction__Group_1__1__Impl rule__AdditionSubtraction__Group_1__2 ;
    public final void rule__AdditionSubtraction__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12816:1: ( rule__AdditionSubtraction__Group_1__1__Impl rule__AdditionSubtraction__Group_1__2 )
            // InternalMyBashParser.g:12817:2: rule__AdditionSubtraction__Group_1__1__Impl rule__AdditionSubtraction__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__AdditionSubtraction__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group_1__1"


    // $ANTLR start "rule__AdditionSubtraction__Group_1__1__Impl"
    // InternalMyBashParser.g:12824:1: rule__AdditionSubtraction__Group_1__1__Impl : ( ( rule__AdditionSubtraction__OpAssignment_1_1 ) ) ;
    public final void rule__AdditionSubtraction__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12828:1: ( ( ( rule__AdditionSubtraction__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12829:1: ( ( rule__AdditionSubtraction__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12829:1: ( ( rule__AdditionSubtraction__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12830:2: ( rule__AdditionSubtraction__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12831:2: ( rule__AdditionSubtraction__OpAssignment_1_1 )
            // InternalMyBashParser.g:12831:3: rule__AdditionSubtraction__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group_1__1__Impl"


    // $ANTLR start "rule__AdditionSubtraction__Group_1__2"
    // InternalMyBashParser.g:12839:1: rule__AdditionSubtraction__Group_1__2 : rule__AdditionSubtraction__Group_1__2__Impl ;
    public final void rule__AdditionSubtraction__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12843:1: ( rule__AdditionSubtraction__Group_1__2__Impl )
            // InternalMyBashParser.g:12844:2: rule__AdditionSubtraction__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group_1__2"


    // $ANTLR start "rule__AdditionSubtraction__Group_1__2__Impl"
    // InternalMyBashParser.g:12850:1: rule__AdditionSubtraction__Group_1__2__Impl : ( ( rule__AdditionSubtraction__RightAssignment_1_2 ) ) ;
    public final void rule__AdditionSubtraction__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12854:1: ( ( ( rule__AdditionSubtraction__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12855:1: ( ( rule__AdditionSubtraction__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12855:1: ( ( rule__AdditionSubtraction__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12856:2: ( rule__AdditionSubtraction__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12857:2: ( rule__AdditionSubtraction__RightAssignment_1_2 )
            // InternalMyBashParser.g:12857:3: rule__AdditionSubtraction__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__Group_1__2__Impl"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group__0"
    // InternalMyBashParser.g:12866:1: rule__MultiplicationDivisionRemainder__Group__0 : rule__MultiplicationDivisionRemainder__Group__0__Impl rule__MultiplicationDivisionRemainder__Group__1 ;
    public final void rule__MultiplicationDivisionRemainder__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12870:1: ( rule__MultiplicationDivisionRemainder__Group__0__Impl rule__MultiplicationDivisionRemainder__Group__1 )
            // InternalMyBashParser.g:12871:2: rule__MultiplicationDivisionRemainder__Group__0__Impl rule__MultiplicationDivisionRemainder__Group__1
            {
            pushFollow(FOLLOW_105);
            rule__MultiplicationDivisionRemainder__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group__0"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group__0__Impl"
    // InternalMyBashParser.g:12878:1: rule__MultiplicationDivisionRemainder__Group__0__Impl : ( ruleExponentiation ) ;
    public final void rule__MultiplicationDivisionRemainder__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12882:1: ( ( ruleExponentiation ) )
            // InternalMyBashParser.g:12883:1: ( ruleExponentiation )
            {
            // InternalMyBashParser.g:12883:1: ( ruleExponentiation )
            // InternalMyBashParser.g:12884:2: ruleExponentiation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getExponentiationParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExponentiation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getExponentiationParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group__0__Impl"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group__1"
    // InternalMyBashParser.g:12893:1: rule__MultiplicationDivisionRemainder__Group__1 : rule__MultiplicationDivisionRemainder__Group__1__Impl ;
    public final void rule__MultiplicationDivisionRemainder__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12897:1: ( rule__MultiplicationDivisionRemainder__Group__1__Impl )
            // InternalMyBashParser.g:12898:2: rule__MultiplicationDivisionRemainder__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group__1"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group__1__Impl"
    // InternalMyBashParser.g:12904:1: rule__MultiplicationDivisionRemainder__Group__1__Impl : ( ( rule__MultiplicationDivisionRemainder__Group_1__0 )* ) ;
    public final void rule__MultiplicationDivisionRemainder__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12908:1: ( ( ( rule__MultiplicationDivisionRemainder__Group_1__0 )* ) )
            // InternalMyBashParser.g:12909:1: ( ( rule__MultiplicationDivisionRemainder__Group_1__0 )* )
            {
            // InternalMyBashParser.g:12909:1: ( ( rule__MultiplicationDivisionRemainder__Group_1__0 )* )
            // InternalMyBashParser.g:12910:2: ( rule__MultiplicationDivisionRemainder__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:12911:2: ( rule__MultiplicationDivisionRemainder__Group_1__0 )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==PercentSign||LA125_0==Asterisk||LA125_0==Solidus) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalMyBashParser.g:12911:3: rule__MultiplicationDivisionRemainder__Group_1__0
            	    {
            	    pushFollow(FOLLOW_106);
            	    rule__MultiplicationDivisionRemainder__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group__1__Impl"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group_1__0"
    // InternalMyBashParser.g:12920:1: rule__MultiplicationDivisionRemainder__Group_1__0 : rule__MultiplicationDivisionRemainder__Group_1__0__Impl rule__MultiplicationDivisionRemainder__Group_1__1 ;
    public final void rule__MultiplicationDivisionRemainder__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12924:1: ( rule__MultiplicationDivisionRemainder__Group_1__0__Impl rule__MultiplicationDivisionRemainder__Group_1__1 )
            // InternalMyBashParser.g:12925:2: rule__MultiplicationDivisionRemainder__Group_1__0__Impl rule__MultiplicationDivisionRemainder__Group_1__1
            {
            pushFollow(FOLLOW_105);
            rule__MultiplicationDivisionRemainder__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group_1__0"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group_1__0__Impl"
    // InternalMyBashParser.g:12932:1: rule__MultiplicationDivisionRemainder__Group_1__0__Impl : ( () ) ;
    public final void rule__MultiplicationDivisionRemainder__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12936:1: ( ( () ) )
            // InternalMyBashParser.g:12937:1: ( () )
            {
            // InternalMyBashParser.g:12937:1: ( () )
            // InternalMyBashParser.g:12938:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:12939:2: ()
            // InternalMyBashParser.g:12939:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group_1__1"
    // InternalMyBashParser.g:12947:1: rule__MultiplicationDivisionRemainder__Group_1__1 : rule__MultiplicationDivisionRemainder__Group_1__1__Impl rule__MultiplicationDivisionRemainder__Group_1__2 ;
    public final void rule__MultiplicationDivisionRemainder__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12951:1: ( rule__MultiplicationDivisionRemainder__Group_1__1__Impl rule__MultiplicationDivisionRemainder__Group_1__2 )
            // InternalMyBashParser.g:12952:2: rule__MultiplicationDivisionRemainder__Group_1__1__Impl rule__MultiplicationDivisionRemainder__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__MultiplicationDivisionRemainder__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group_1__1"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group_1__1__Impl"
    // InternalMyBashParser.g:12959:1: rule__MultiplicationDivisionRemainder__Group_1__1__Impl : ( ( rule__MultiplicationDivisionRemainder__OpAssignment_1_1 ) ) ;
    public final void rule__MultiplicationDivisionRemainder__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12963:1: ( ( ( rule__MultiplicationDivisionRemainder__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:12964:1: ( ( rule__MultiplicationDivisionRemainder__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:12964:1: ( ( rule__MultiplicationDivisionRemainder__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:12965:2: ( rule__MultiplicationDivisionRemainder__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:12966:2: ( rule__MultiplicationDivisionRemainder__OpAssignment_1_1 )
            // InternalMyBashParser.g:12966:3: rule__MultiplicationDivisionRemainder__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group_1__2"
    // InternalMyBashParser.g:12974:1: rule__MultiplicationDivisionRemainder__Group_1__2 : rule__MultiplicationDivisionRemainder__Group_1__2__Impl ;
    public final void rule__MultiplicationDivisionRemainder__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12978:1: ( rule__MultiplicationDivisionRemainder__Group_1__2__Impl )
            // InternalMyBashParser.g:12979:2: rule__MultiplicationDivisionRemainder__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group_1__2"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__Group_1__2__Impl"
    // InternalMyBashParser.g:12985:1: rule__MultiplicationDivisionRemainder__Group_1__2__Impl : ( ( rule__MultiplicationDivisionRemainder__RightAssignment_1_2 ) ) ;
    public final void rule__MultiplicationDivisionRemainder__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:12989:1: ( ( ( rule__MultiplicationDivisionRemainder__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:12990:1: ( ( rule__MultiplicationDivisionRemainder__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:12990:1: ( ( rule__MultiplicationDivisionRemainder__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:12991:2: ( rule__MultiplicationDivisionRemainder__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:12992:2: ( rule__MultiplicationDivisionRemainder__RightAssignment_1_2 )
            // InternalMyBashParser.g:12992:3: rule__MultiplicationDivisionRemainder__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__Group_1__2__Impl"


    // $ANTLR start "rule__Exponentiation__Group__0"
    // InternalMyBashParser.g:13001:1: rule__Exponentiation__Group__0 : rule__Exponentiation__Group__0__Impl rule__Exponentiation__Group__1 ;
    public final void rule__Exponentiation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13005:1: ( rule__Exponentiation__Group__0__Impl rule__Exponentiation__Group__1 )
            // InternalMyBashParser.g:13006:2: rule__Exponentiation__Group__0__Impl rule__Exponentiation__Group__1
            {
            pushFollow(FOLLOW_107);
            rule__Exponentiation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Exponentiation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group__0"


    // $ANTLR start "rule__Exponentiation__Group__0__Impl"
    // InternalMyBashParser.g:13013:1: rule__Exponentiation__Group__0__Impl : ( ruleLogicalAndBitwiseNegation ) ;
    public final void rule__Exponentiation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13017:1: ( ( ruleLogicalAndBitwiseNegation ) )
            // InternalMyBashParser.g:13018:1: ( ruleLogicalAndBitwiseNegation )
            {
            // InternalMyBashParser.g:13018:1: ( ruleLogicalAndBitwiseNegation )
            // InternalMyBashParser.g:13019:2: ruleLogicalAndBitwiseNegation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getLogicalAndBitwiseNegationParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicalAndBitwiseNegation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getLogicalAndBitwiseNegationParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group__0__Impl"


    // $ANTLR start "rule__Exponentiation__Group__1"
    // InternalMyBashParser.g:13028:1: rule__Exponentiation__Group__1 : rule__Exponentiation__Group__1__Impl ;
    public final void rule__Exponentiation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13032:1: ( rule__Exponentiation__Group__1__Impl )
            // InternalMyBashParser.g:13033:2: rule__Exponentiation__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Exponentiation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group__1"


    // $ANTLR start "rule__Exponentiation__Group__1__Impl"
    // InternalMyBashParser.g:13039:1: rule__Exponentiation__Group__1__Impl : ( ( rule__Exponentiation__Group_1__0 )? ) ;
    public final void rule__Exponentiation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13043:1: ( ( ( rule__Exponentiation__Group_1__0 )? ) )
            // InternalMyBashParser.g:13044:1: ( ( rule__Exponentiation__Group_1__0 )? )
            {
            // InternalMyBashParser.g:13044:1: ( ( rule__Exponentiation__Group_1__0 )? )
            // InternalMyBashParser.g:13045:2: ( rule__Exponentiation__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:13046:2: ( rule__Exponentiation__Group_1__0 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==AsteriskAsterisk) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalMyBashParser.g:13046:3: rule__Exponentiation__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Exponentiation__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group__1__Impl"


    // $ANTLR start "rule__Exponentiation__Group_1__0"
    // InternalMyBashParser.g:13055:1: rule__Exponentiation__Group_1__0 : rule__Exponentiation__Group_1__0__Impl rule__Exponentiation__Group_1__1 ;
    public final void rule__Exponentiation__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13059:1: ( rule__Exponentiation__Group_1__0__Impl rule__Exponentiation__Group_1__1 )
            // InternalMyBashParser.g:13060:2: rule__Exponentiation__Group_1__0__Impl rule__Exponentiation__Group_1__1
            {
            pushFollow(FOLLOW_107);
            rule__Exponentiation__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Exponentiation__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group_1__0"


    // $ANTLR start "rule__Exponentiation__Group_1__0__Impl"
    // InternalMyBashParser.g:13067:1: rule__Exponentiation__Group_1__0__Impl : ( () ) ;
    public final void rule__Exponentiation__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13071:1: ( ( () ) )
            // InternalMyBashParser.g:13072:1: ( () )
            {
            // InternalMyBashParser.g:13072:1: ( () )
            // InternalMyBashParser.g:13073:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getBinaryExpressionLeftAction_1_0()); 
            }
            // InternalMyBashParser.g:13074:2: ()
            // InternalMyBashParser.g:13074:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getBinaryExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group_1__0__Impl"


    // $ANTLR start "rule__Exponentiation__Group_1__1"
    // InternalMyBashParser.g:13082:1: rule__Exponentiation__Group_1__1 : rule__Exponentiation__Group_1__1__Impl rule__Exponentiation__Group_1__2 ;
    public final void rule__Exponentiation__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13086:1: ( rule__Exponentiation__Group_1__1__Impl rule__Exponentiation__Group_1__2 )
            // InternalMyBashParser.g:13087:2: rule__Exponentiation__Group_1__1__Impl rule__Exponentiation__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__Exponentiation__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Exponentiation__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group_1__1"


    // $ANTLR start "rule__Exponentiation__Group_1__1__Impl"
    // InternalMyBashParser.g:13094:1: rule__Exponentiation__Group_1__1__Impl : ( ( rule__Exponentiation__OpAssignment_1_1 ) ) ;
    public final void rule__Exponentiation__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13098:1: ( ( ( rule__Exponentiation__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:13099:1: ( ( rule__Exponentiation__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:13099:1: ( ( rule__Exponentiation__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:13100:2: ( rule__Exponentiation__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:13101:2: ( rule__Exponentiation__OpAssignment_1_1 )
            // InternalMyBashParser.g:13101:3: rule__Exponentiation__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Exponentiation__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group_1__1__Impl"


    // $ANTLR start "rule__Exponentiation__Group_1__2"
    // InternalMyBashParser.g:13109:1: rule__Exponentiation__Group_1__2 : rule__Exponentiation__Group_1__2__Impl ;
    public final void rule__Exponentiation__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13113:1: ( rule__Exponentiation__Group_1__2__Impl )
            // InternalMyBashParser.g:13114:2: rule__Exponentiation__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Exponentiation__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group_1__2"


    // $ANTLR start "rule__Exponentiation__Group_1__2__Impl"
    // InternalMyBashParser.g:13120:1: rule__Exponentiation__Group_1__2__Impl : ( ( rule__Exponentiation__RightAssignment_1_2 ) ) ;
    public final void rule__Exponentiation__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13124:1: ( ( ( rule__Exponentiation__RightAssignment_1_2 ) ) )
            // InternalMyBashParser.g:13125:1: ( ( rule__Exponentiation__RightAssignment_1_2 ) )
            {
            // InternalMyBashParser.g:13125:1: ( ( rule__Exponentiation__RightAssignment_1_2 ) )
            // InternalMyBashParser.g:13126:2: ( rule__Exponentiation__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getRightAssignment_1_2()); 
            }
            // InternalMyBashParser.g:13127:2: ( rule__Exponentiation__RightAssignment_1_2 )
            // InternalMyBashParser.g:13127:3: rule__Exponentiation__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Exponentiation__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__Group_1__2__Impl"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__Group_0__0"
    // InternalMyBashParser.g:13136:1: rule__LogicalAndBitwiseNegation__Group_0__0 : rule__LogicalAndBitwiseNegation__Group_0__0__Impl rule__LogicalAndBitwiseNegation__Group_0__1 ;
    public final void rule__LogicalAndBitwiseNegation__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13140:1: ( rule__LogicalAndBitwiseNegation__Group_0__0__Impl rule__LogicalAndBitwiseNegation__Group_0__1 )
            // InternalMyBashParser.g:13141:2: rule__LogicalAndBitwiseNegation__Group_0__0__Impl rule__LogicalAndBitwiseNegation__Group_0__1
            {
            pushFollow(FOLLOW_108);
            rule__LogicalAndBitwiseNegation__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalAndBitwiseNegation__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__Group_0__0"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__Group_0__0__Impl"
    // InternalMyBashParser.g:13148:1: rule__LogicalAndBitwiseNegation__Group_0__0__Impl : ( () ) ;
    public final void rule__LogicalAndBitwiseNegation__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13152:1: ( ( () ) )
            // InternalMyBashParser.g:13153:1: ( () )
            {
            // InternalMyBashParser.g:13153:1: ( () )
            // InternalMyBashParser.g:13154:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndBitwiseNegationAccess().getPrefixExpressionAction_0_0()); 
            }
            // InternalMyBashParser.g:13155:2: ()
            // InternalMyBashParser.g:13155:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndBitwiseNegationAccess().getPrefixExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__Group_0__0__Impl"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__Group_0__1"
    // InternalMyBashParser.g:13163:1: rule__LogicalAndBitwiseNegation__Group_0__1 : rule__LogicalAndBitwiseNegation__Group_0__1__Impl rule__LogicalAndBitwiseNegation__Group_0__2 ;
    public final void rule__LogicalAndBitwiseNegation__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13167:1: ( rule__LogicalAndBitwiseNegation__Group_0__1__Impl rule__LogicalAndBitwiseNegation__Group_0__2 )
            // InternalMyBashParser.g:13168:2: rule__LogicalAndBitwiseNegation__Group_0__1__Impl rule__LogicalAndBitwiseNegation__Group_0__2
            {
            pushFollow(FOLLOW_31);
            rule__LogicalAndBitwiseNegation__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalAndBitwiseNegation__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__Group_0__1"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__Group_0__1__Impl"
    // InternalMyBashParser.g:13175:1: rule__LogicalAndBitwiseNegation__Group_0__1__Impl : ( ( rule__LogicalAndBitwiseNegation__OpAssignment_0_1 ) ) ;
    public final void rule__LogicalAndBitwiseNegation__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13179:1: ( ( ( rule__LogicalAndBitwiseNegation__OpAssignment_0_1 ) ) )
            // InternalMyBashParser.g:13180:1: ( ( rule__LogicalAndBitwiseNegation__OpAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:13180:1: ( ( rule__LogicalAndBitwiseNegation__OpAssignment_0_1 ) )
            // InternalMyBashParser.g:13181:2: ( rule__LogicalAndBitwiseNegation__OpAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpAssignment_0_1()); 
            }
            // InternalMyBashParser.g:13182:2: ( rule__LogicalAndBitwiseNegation__OpAssignment_0_1 )
            // InternalMyBashParser.g:13182:3: rule__LogicalAndBitwiseNegation__OpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndBitwiseNegation__OpAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__Group_0__1__Impl"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__Group_0__2"
    // InternalMyBashParser.g:13190:1: rule__LogicalAndBitwiseNegation__Group_0__2 : rule__LogicalAndBitwiseNegation__Group_0__2__Impl ;
    public final void rule__LogicalAndBitwiseNegation__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13194:1: ( rule__LogicalAndBitwiseNegation__Group_0__2__Impl )
            // InternalMyBashParser.g:13195:2: rule__LogicalAndBitwiseNegation__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndBitwiseNegation__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__Group_0__2"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__Group_0__2__Impl"
    // InternalMyBashParser.g:13201:1: rule__LogicalAndBitwiseNegation__Group_0__2__Impl : ( ( rule__LogicalAndBitwiseNegation__OperandAssignment_0_2 ) ) ;
    public final void rule__LogicalAndBitwiseNegation__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13205:1: ( ( ( rule__LogicalAndBitwiseNegation__OperandAssignment_0_2 ) ) )
            // InternalMyBashParser.g:13206:1: ( ( rule__LogicalAndBitwiseNegation__OperandAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:13206:1: ( ( rule__LogicalAndBitwiseNegation__OperandAssignment_0_2 ) )
            // InternalMyBashParser.g:13207:2: ( rule__LogicalAndBitwiseNegation__OperandAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndBitwiseNegationAccess().getOperandAssignment_0_2()); 
            }
            // InternalMyBashParser.g:13208:2: ( rule__LogicalAndBitwiseNegation__OperandAssignment_0_2 )
            // InternalMyBashParser.g:13208:3: rule__LogicalAndBitwiseNegation__OperandAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndBitwiseNegation__OperandAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndBitwiseNegationAccess().getOperandAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__Group_0__2__Impl"


    // $ANTLR start "rule__UnaryMinusAndPlus__Group_0__0"
    // InternalMyBashParser.g:13217:1: rule__UnaryMinusAndPlus__Group_0__0 : rule__UnaryMinusAndPlus__Group_0__0__Impl rule__UnaryMinusAndPlus__Group_0__1 ;
    public final void rule__UnaryMinusAndPlus__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13221:1: ( rule__UnaryMinusAndPlus__Group_0__0__Impl rule__UnaryMinusAndPlus__Group_0__1 )
            // InternalMyBashParser.g:13222:2: rule__UnaryMinusAndPlus__Group_0__0__Impl rule__UnaryMinusAndPlus__Group_0__1
            {
            pushFollow(FOLLOW_103);
            rule__UnaryMinusAndPlus__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryMinusAndPlus__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__Group_0__0"


    // $ANTLR start "rule__UnaryMinusAndPlus__Group_0__0__Impl"
    // InternalMyBashParser.g:13229:1: rule__UnaryMinusAndPlus__Group_0__0__Impl : ( () ) ;
    public final void rule__UnaryMinusAndPlus__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13233:1: ( ( () ) )
            // InternalMyBashParser.g:13234:1: ( () )
            {
            // InternalMyBashParser.g:13234:1: ( () )
            // InternalMyBashParser.g:13235:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryMinusAndPlusAccess().getPrefixExpressionAction_0_0()); 
            }
            // InternalMyBashParser.g:13236:2: ()
            // InternalMyBashParser.g:13236:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryMinusAndPlusAccess().getPrefixExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__Group_0__0__Impl"


    // $ANTLR start "rule__UnaryMinusAndPlus__Group_0__1"
    // InternalMyBashParser.g:13244:1: rule__UnaryMinusAndPlus__Group_0__1 : rule__UnaryMinusAndPlus__Group_0__1__Impl rule__UnaryMinusAndPlus__Group_0__2 ;
    public final void rule__UnaryMinusAndPlus__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13248:1: ( rule__UnaryMinusAndPlus__Group_0__1__Impl rule__UnaryMinusAndPlus__Group_0__2 )
            // InternalMyBashParser.g:13249:2: rule__UnaryMinusAndPlus__Group_0__1__Impl rule__UnaryMinusAndPlus__Group_0__2
            {
            pushFollow(FOLLOW_31);
            rule__UnaryMinusAndPlus__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryMinusAndPlus__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__Group_0__1"


    // $ANTLR start "rule__UnaryMinusAndPlus__Group_0__1__Impl"
    // InternalMyBashParser.g:13256:1: rule__UnaryMinusAndPlus__Group_0__1__Impl : ( ( rule__UnaryMinusAndPlus__OpAssignment_0_1 ) ) ;
    public final void rule__UnaryMinusAndPlus__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13260:1: ( ( ( rule__UnaryMinusAndPlus__OpAssignment_0_1 ) ) )
            // InternalMyBashParser.g:13261:1: ( ( rule__UnaryMinusAndPlus__OpAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:13261:1: ( ( rule__UnaryMinusAndPlus__OpAssignment_0_1 ) )
            // InternalMyBashParser.g:13262:2: ( rule__UnaryMinusAndPlus__OpAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryMinusAndPlusAccess().getOpAssignment_0_1()); 
            }
            // InternalMyBashParser.g:13263:2: ( rule__UnaryMinusAndPlus__OpAssignment_0_1 )
            // InternalMyBashParser.g:13263:3: rule__UnaryMinusAndPlus__OpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__UnaryMinusAndPlus__OpAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryMinusAndPlusAccess().getOpAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__Group_0__1__Impl"


    // $ANTLR start "rule__UnaryMinusAndPlus__Group_0__2"
    // InternalMyBashParser.g:13271:1: rule__UnaryMinusAndPlus__Group_0__2 : rule__UnaryMinusAndPlus__Group_0__2__Impl ;
    public final void rule__UnaryMinusAndPlus__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13275:1: ( rule__UnaryMinusAndPlus__Group_0__2__Impl )
            // InternalMyBashParser.g:13276:2: rule__UnaryMinusAndPlus__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnaryMinusAndPlus__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__Group_0__2"


    // $ANTLR start "rule__UnaryMinusAndPlus__Group_0__2__Impl"
    // InternalMyBashParser.g:13282:1: rule__UnaryMinusAndPlus__Group_0__2__Impl : ( ( rule__UnaryMinusAndPlus__OperandAssignment_0_2 ) ) ;
    public final void rule__UnaryMinusAndPlus__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13286:1: ( ( ( rule__UnaryMinusAndPlus__OperandAssignment_0_2 ) ) )
            // InternalMyBashParser.g:13287:1: ( ( rule__UnaryMinusAndPlus__OperandAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:13287:1: ( ( rule__UnaryMinusAndPlus__OperandAssignment_0_2 ) )
            // InternalMyBashParser.g:13288:2: ( rule__UnaryMinusAndPlus__OperandAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryMinusAndPlusAccess().getOperandAssignment_0_2()); 
            }
            // InternalMyBashParser.g:13289:2: ( rule__UnaryMinusAndPlus__OperandAssignment_0_2 )
            // InternalMyBashParser.g:13289:3: rule__UnaryMinusAndPlus__OperandAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__UnaryMinusAndPlus__OperandAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryMinusAndPlusAccess().getOperandAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__Group_0__2__Impl"


    // $ANTLR start "rule__PreDecrement__Group_0__0"
    // InternalMyBashParser.g:13298:1: rule__PreDecrement__Group_0__0 : rule__PreDecrement__Group_0__0__Impl rule__PreDecrement__Group_0__1 ;
    public final void rule__PreDecrement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13302:1: ( rule__PreDecrement__Group_0__0__Impl rule__PreDecrement__Group_0__1 )
            // InternalMyBashParser.g:13303:2: rule__PreDecrement__Group_0__0__Impl rule__PreDecrement__Group_0__1
            {
            pushFollow(FOLLOW_109);
            rule__PreDecrement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PreDecrement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__Group_0__0"


    // $ANTLR start "rule__PreDecrement__Group_0__0__Impl"
    // InternalMyBashParser.g:13310:1: rule__PreDecrement__Group_0__0__Impl : ( () ) ;
    public final void rule__PreDecrement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13314:1: ( ( () ) )
            // InternalMyBashParser.g:13315:1: ( () )
            {
            // InternalMyBashParser.g:13315:1: ( () )
            // InternalMyBashParser.g:13316:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreDecrementAccess().getPrefixExpressionAction_0_0()); 
            }
            // InternalMyBashParser.g:13317:2: ()
            // InternalMyBashParser.g:13317:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreDecrementAccess().getPrefixExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__Group_0__0__Impl"


    // $ANTLR start "rule__PreDecrement__Group_0__1"
    // InternalMyBashParser.g:13325:1: rule__PreDecrement__Group_0__1 : rule__PreDecrement__Group_0__1__Impl rule__PreDecrement__Group_0__2 ;
    public final void rule__PreDecrement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13329:1: ( rule__PreDecrement__Group_0__1__Impl rule__PreDecrement__Group_0__2 )
            // InternalMyBashParser.g:13330:2: rule__PreDecrement__Group_0__1__Impl rule__PreDecrement__Group_0__2
            {
            pushFollow(FOLLOW_31);
            rule__PreDecrement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PreDecrement__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__Group_0__1"


    // $ANTLR start "rule__PreDecrement__Group_0__1__Impl"
    // InternalMyBashParser.g:13337:1: rule__PreDecrement__Group_0__1__Impl : ( ( rule__PreDecrement__OpAssignment_0_1 ) ) ;
    public final void rule__PreDecrement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13341:1: ( ( ( rule__PreDecrement__OpAssignment_0_1 ) ) )
            // InternalMyBashParser.g:13342:1: ( ( rule__PreDecrement__OpAssignment_0_1 ) )
            {
            // InternalMyBashParser.g:13342:1: ( ( rule__PreDecrement__OpAssignment_0_1 ) )
            // InternalMyBashParser.g:13343:2: ( rule__PreDecrement__OpAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreDecrementAccess().getOpAssignment_0_1()); 
            }
            // InternalMyBashParser.g:13344:2: ( rule__PreDecrement__OpAssignment_0_1 )
            // InternalMyBashParser.g:13344:3: rule__PreDecrement__OpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__PreDecrement__OpAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreDecrementAccess().getOpAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__Group_0__1__Impl"


    // $ANTLR start "rule__PreDecrement__Group_0__2"
    // InternalMyBashParser.g:13352:1: rule__PreDecrement__Group_0__2 : rule__PreDecrement__Group_0__2__Impl ;
    public final void rule__PreDecrement__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13356:1: ( rule__PreDecrement__Group_0__2__Impl )
            // InternalMyBashParser.g:13357:2: rule__PreDecrement__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PreDecrement__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__Group_0__2"


    // $ANTLR start "rule__PreDecrement__Group_0__2__Impl"
    // InternalMyBashParser.g:13363:1: rule__PreDecrement__Group_0__2__Impl : ( ( rule__PreDecrement__OperandAssignment_0_2 ) ) ;
    public final void rule__PreDecrement__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13367:1: ( ( ( rule__PreDecrement__OperandAssignment_0_2 ) ) )
            // InternalMyBashParser.g:13368:1: ( ( rule__PreDecrement__OperandAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:13368:1: ( ( rule__PreDecrement__OperandAssignment_0_2 ) )
            // InternalMyBashParser.g:13369:2: ( rule__PreDecrement__OperandAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreDecrementAccess().getOperandAssignment_0_2()); 
            }
            // InternalMyBashParser.g:13370:2: ( rule__PreDecrement__OperandAssignment_0_2 )
            // InternalMyBashParser.g:13370:3: rule__PreDecrement__OperandAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__PreDecrement__OperandAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreDecrementAccess().getOperandAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__Group_0__2__Impl"


    // $ANTLR start "rule__PostDecrement__Group__0"
    // InternalMyBashParser.g:13379:1: rule__PostDecrement__Group__0 : rule__PostDecrement__Group__0__Impl rule__PostDecrement__Group__1 ;
    public final void rule__PostDecrement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13383:1: ( rule__PostDecrement__Group__0__Impl rule__PostDecrement__Group__1 )
            // InternalMyBashParser.g:13384:2: rule__PostDecrement__Group__0__Impl rule__PostDecrement__Group__1
            {
            pushFollow(FOLLOW_109);
            rule__PostDecrement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PostDecrement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group__0"


    // $ANTLR start "rule__PostDecrement__Group__0__Impl"
    // InternalMyBashParser.g:13391:1: rule__PostDecrement__Group__0__Impl : ( ruleVariableId ) ;
    public final void rule__PostDecrement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13395:1: ( ( ruleVariableId ) )
            // InternalMyBashParser.g:13396:1: ( ruleVariableId )
            {
            // InternalMyBashParser.g:13396:1: ( ruleVariableId )
            // InternalMyBashParser.g:13397:2: ruleVariableId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostDecrementAccess().getVariableIdParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVariableId();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostDecrementAccess().getVariableIdParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group__0__Impl"


    // $ANTLR start "rule__PostDecrement__Group__1"
    // InternalMyBashParser.g:13406:1: rule__PostDecrement__Group__1 : rule__PostDecrement__Group__1__Impl ;
    public final void rule__PostDecrement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13410:1: ( rule__PostDecrement__Group__1__Impl )
            // InternalMyBashParser.g:13411:2: rule__PostDecrement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PostDecrement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group__1"


    // $ANTLR start "rule__PostDecrement__Group__1__Impl"
    // InternalMyBashParser.g:13417:1: rule__PostDecrement__Group__1__Impl : ( ( rule__PostDecrement__Group_1__0 )? ) ;
    public final void rule__PostDecrement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13421:1: ( ( ( rule__PostDecrement__Group_1__0 )? ) )
            // InternalMyBashParser.g:13422:1: ( ( rule__PostDecrement__Group_1__0 )? )
            {
            // InternalMyBashParser.g:13422:1: ( ( rule__PostDecrement__Group_1__0 )? )
            // InternalMyBashParser.g:13423:2: ( rule__PostDecrement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostDecrementAccess().getGroup_1()); 
            }
            // InternalMyBashParser.g:13424:2: ( rule__PostDecrement__Group_1__0 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==PlusSignPlusSign||LA127_0==HyphenMinusHyphenMinus) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalMyBashParser.g:13424:3: rule__PostDecrement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PostDecrement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostDecrementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group__1__Impl"


    // $ANTLR start "rule__PostDecrement__Group_1__0"
    // InternalMyBashParser.g:13433:1: rule__PostDecrement__Group_1__0 : rule__PostDecrement__Group_1__0__Impl rule__PostDecrement__Group_1__1 ;
    public final void rule__PostDecrement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13437:1: ( rule__PostDecrement__Group_1__0__Impl rule__PostDecrement__Group_1__1 )
            // InternalMyBashParser.g:13438:2: rule__PostDecrement__Group_1__0__Impl rule__PostDecrement__Group_1__1
            {
            pushFollow(FOLLOW_109);
            rule__PostDecrement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PostDecrement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group_1__0"


    // $ANTLR start "rule__PostDecrement__Group_1__0__Impl"
    // InternalMyBashParser.g:13445:1: rule__PostDecrement__Group_1__0__Impl : ( () ) ;
    public final void rule__PostDecrement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13449:1: ( ( () ) )
            // InternalMyBashParser.g:13450:1: ( () )
            {
            // InternalMyBashParser.g:13450:1: ( () )
            // InternalMyBashParser.g:13451:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostDecrementAccess().getSuffixExpressionOperandAction_1_0()); 
            }
            // InternalMyBashParser.g:13452:2: ()
            // InternalMyBashParser.g:13452:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostDecrementAccess().getSuffixExpressionOperandAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group_1__0__Impl"


    // $ANTLR start "rule__PostDecrement__Group_1__1"
    // InternalMyBashParser.g:13460:1: rule__PostDecrement__Group_1__1 : rule__PostDecrement__Group_1__1__Impl ;
    public final void rule__PostDecrement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13464:1: ( rule__PostDecrement__Group_1__1__Impl )
            // InternalMyBashParser.g:13465:2: rule__PostDecrement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PostDecrement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group_1__1"


    // $ANTLR start "rule__PostDecrement__Group_1__1__Impl"
    // InternalMyBashParser.g:13471:1: rule__PostDecrement__Group_1__1__Impl : ( ( rule__PostDecrement__OpAssignment_1_1 ) ) ;
    public final void rule__PostDecrement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13475:1: ( ( ( rule__PostDecrement__OpAssignment_1_1 ) ) )
            // InternalMyBashParser.g:13476:1: ( ( rule__PostDecrement__OpAssignment_1_1 ) )
            {
            // InternalMyBashParser.g:13476:1: ( ( rule__PostDecrement__OpAssignment_1_1 ) )
            // InternalMyBashParser.g:13477:2: ( rule__PostDecrement__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostDecrementAccess().getOpAssignment_1_1()); 
            }
            // InternalMyBashParser.g:13478:2: ( rule__PostDecrement__OpAssignment_1_1 )
            // InternalMyBashParser.g:13478:3: rule__PostDecrement__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PostDecrement__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostDecrementAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__Group_1__1__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_0__0"
    // InternalMyBashParser.g:13487:1: rule__PrimaryItem__Group_0__0 : rule__PrimaryItem__Group_0__0__Impl rule__PrimaryItem__Group_0__1 ;
    public final void rule__PrimaryItem__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13491:1: ( rule__PrimaryItem__Group_0__0__Impl rule__PrimaryItem__Group_0__1 )
            // InternalMyBashParser.g:13492:2: rule__PrimaryItem__Group_0__0__Impl rule__PrimaryItem__Group_0__1
            {
            pushFollow(FOLLOW_110);
            rule__PrimaryItem__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_0__0"


    // $ANTLR start "rule__PrimaryItem__Group_0__0__Impl"
    // InternalMyBashParser.g:13499:1: rule__PrimaryItem__Group_0__0__Impl : ( () ) ;
    public final void rule__PrimaryItem__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13503:1: ( ( () ) )
            // InternalMyBashParser.g:13504:1: ( () )
            {
            // InternalMyBashParser.g:13504:1: ( () )
            // InternalMyBashParser.g:13505:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getConstPrimaryItemAction_0_0()); 
            }
            // InternalMyBashParser.g:13506:2: ()
            // InternalMyBashParser.g:13506:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getConstPrimaryItemAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_0__0__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_0__1"
    // InternalMyBashParser.g:13514:1: rule__PrimaryItem__Group_0__1 : rule__PrimaryItem__Group_0__1__Impl rule__PrimaryItem__Group_0__2 ;
    public final void rule__PrimaryItem__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13518:1: ( rule__PrimaryItem__Group_0__1__Impl rule__PrimaryItem__Group_0__2 )
            // InternalMyBashParser.g:13519:2: rule__PrimaryItem__Group_0__1__Impl rule__PrimaryItem__Group_0__2
            {
            pushFollow(FOLLOW_110);
            rule__PrimaryItem__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_0__1"


    // $ANTLR start "rule__PrimaryItem__Group_0__1__Impl"
    // InternalMyBashParser.g:13526:1: rule__PrimaryItem__Group_0__1__Impl : ( ( rule__PrimaryItem__PrefixAssignment_0_1 )? ) ;
    public final void rule__PrimaryItem__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13530:1: ( ( ( rule__PrimaryItem__PrefixAssignment_0_1 )? ) )
            // InternalMyBashParser.g:13531:1: ( ( rule__PrimaryItem__PrefixAssignment_0_1 )? )
            {
            // InternalMyBashParser.g:13531:1: ( ( rule__PrimaryItem__PrefixAssignment_0_1 )? )
            // InternalMyBashParser.g:13532:2: ( rule__PrimaryItem__PrefixAssignment_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getPrefixAssignment_0_1()); 
            }
            // InternalMyBashParser.g:13533:2: ( rule__PrimaryItem__PrefixAssignment_0_1 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==RULE_A_PREFIX) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalMyBashParser.g:13533:3: rule__PrimaryItem__PrefixAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryItem__PrefixAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getPrefixAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_0__1__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_0__2"
    // InternalMyBashParser.g:13541:1: rule__PrimaryItem__Group_0__2 : rule__PrimaryItem__Group_0__2__Impl ;
    public final void rule__PrimaryItem__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13545:1: ( rule__PrimaryItem__Group_0__2__Impl )
            // InternalMyBashParser.g:13546:2: rule__PrimaryItem__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_0__2"


    // $ANTLR start "rule__PrimaryItem__Group_0__2__Impl"
    // InternalMyBashParser.g:13552:1: rule__PrimaryItem__Group_0__2__Impl : ( ( rule__PrimaryItem__ValueAssignment_0_2 ) ) ;
    public final void rule__PrimaryItem__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13556:1: ( ( ( rule__PrimaryItem__ValueAssignment_0_2 ) ) )
            // InternalMyBashParser.g:13557:1: ( ( rule__PrimaryItem__ValueAssignment_0_2 ) )
            {
            // InternalMyBashParser.g:13557:1: ( ( rule__PrimaryItem__ValueAssignment_0_2 ) )
            // InternalMyBashParser.g:13558:2: ( rule__PrimaryItem__ValueAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getValueAssignment_0_2()); 
            }
            // InternalMyBashParser.g:13559:2: ( rule__PrimaryItem__ValueAssignment_0_2 )
            // InternalMyBashParser.g:13559:3: rule__PrimaryItem__ValueAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__ValueAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getValueAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_0__2__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_1__0"
    // InternalMyBashParser.g:13568:1: rule__PrimaryItem__Group_1__0 : rule__PrimaryItem__Group_1__0__Impl rule__PrimaryItem__Group_1__1 ;
    public final void rule__PrimaryItem__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13572:1: ( rule__PrimaryItem__Group_1__0__Impl rule__PrimaryItem__Group_1__1 )
            // InternalMyBashParser.g:13573:2: rule__PrimaryItem__Group_1__0__Impl rule__PrimaryItem__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__PrimaryItem__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_1__0"


    // $ANTLR start "rule__PrimaryItem__Group_1__0__Impl"
    // InternalMyBashParser.g:13580:1: rule__PrimaryItem__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PrimaryItem__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13584:1: ( ( LeftParenthesis ) )
            // InternalMyBashParser.g:13585:1: ( LeftParenthesis )
            {
            // InternalMyBashParser.g:13585:1: ( LeftParenthesis )
            // InternalMyBashParser.g:13586:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_1__0__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_1__1"
    // InternalMyBashParser.g:13595:1: rule__PrimaryItem__Group_1__1 : rule__PrimaryItem__Group_1__1__Impl rule__PrimaryItem__Group_1__2 ;
    public final void rule__PrimaryItem__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13599:1: ( rule__PrimaryItem__Group_1__1__Impl rule__PrimaryItem__Group_1__2 )
            // InternalMyBashParser.g:13600:2: rule__PrimaryItem__Group_1__1__Impl rule__PrimaryItem__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__PrimaryItem__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_1__1"


    // $ANTLR start "rule__PrimaryItem__Group_1__1__Impl"
    // InternalMyBashParser.g:13607:1: rule__PrimaryItem__Group_1__1__Impl : ( ruleEvaluation ) ;
    public final void rule__PrimaryItem__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13611:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:13612:1: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:13612:1: ( ruleEvaluation )
            // InternalMyBashParser.g:13613:2: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getEvaluationParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getEvaluationParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_1__1__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_1__2"
    // InternalMyBashParser.g:13622:1: rule__PrimaryItem__Group_1__2 : rule__PrimaryItem__Group_1__2__Impl ;
    public final void rule__PrimaryItem__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13626:1: ( rule__PrimaryItem__Group_1__2__Impl )
            // InternalMyBashParser.g:13627:2: rule__PrimaryItem__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_1__2"


    // $ANTLR start "rule__PrimaryItem__Group_1__2__Impl"
    // InternalMyBashParser.g:13633:1: rule__PrimaryItem__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PrimaryItem__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13637:1: ( ( RightParenthesis ) )
            // InternalMyBashParser.g:13638:1: ( RightParenthesis )
            {
            // InternalMyBashParser.g:13638:1: ( RightParenthesis )
            // InternalMyBashParser.g:13639:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_1__2__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_2__0"
    // InternalMyBashParser.g:13649:1: rule__PrimaryItem__Group_2__0 : rule__PrimaryItem__Group_2__0__Impl rule__PrimaryItem__Group_2__1 ;
    public final void rule__PrimaryItem__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13653:1: ( rule__PrimaryItem__Group_2__0__Impl rule__PrimaryItem__Group_2__1 )
            // InternalMyBashParser.g:13654:2: rule__PrimaryItem__Group_2__0__Impl rule__PrimaryItem__Group_2__1
            {
            pushFollow(FOLLOW_111);
            rule__PrimaryItem__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_2__0"


    // $ANTLR start "rule__PrimaryItem__Group_2__0__Impl"
    // InternalMyBashParser.g:13661:1: rule__PrimaryItem__Group_2__0__Impl : ( () ) ;
    public final void rule__PrimaryItem__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13665:1: ( ( () ) )
            // InternalMyBashParser.g:13666:1: ( () )
            {
            // InternalMyBashParser.g:13666:1: ( () )
            // InternalMyBashParser.g:13667:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getPrimaryItemAction_2_0()); 
            }
            // InternalMyBashParser.g:13668:2: ()
            // InternalMyBashParser.g:13668:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getPrimaryItemAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_2__0__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_2__1"
    // InternalMyBashParser.g:13676:1: rule__PrimaryItem__Group_2__1 : rule__PrimaryItem__Group_2__1__Impl rule__PrimaryItem__Group_2__2 ;
    public final void rule__PrimaryItem__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13680:1: ( rule__PrimaryItem__Group_2__1__Impl rule__PrimaryItem__Group_2__2 )
            // InternalMyBashParser.g:13681:2: rule__PrimaryItem__Group_2__1__Impl rule__PrimaryItem__Group_2__2
            {
            pushFollow(FOLLOW_111);
            rule__PrimaryItem__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_2__1"


    // $ANTLR start "rule__PrimaryItem__Group_2__1__Impl"
    // InternalMyBashParser.g:13688:1: rule__PrimaryItem__Group_2__1__Impl : ( ( rule__PrimaryItem__PrefixAssignment_2_1 )? ) ;
    public final void rule__PrimaryItem__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13692:1: ( ( ( rule__PrimaryItem__PrefixAssignment_2_1 )? ) )
            // InternalMyBashParser.g:13693:1: ( ( rule__PrimaryItem__PrefixAssignment_2_1 )? )
            {
            // InternalMyBashParser.g:13693:1: ( ( rule__PrimaryItem__PrefixAssignment_2_1 )? )
            // InternalMyBashParser.g:13694:2: ( rule__PrimaryItem__PrefixAssignment_2_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getPrefixAssignment_2_1()); 
            }
            // InternalMyBashParser.g:13695:2: ( rule__PrimaryItem__PrefixAssignment_2_1 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==RULE_A_PREFIX) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalMyBashParser.g:13695:3: rule__PrimaryItem__PrefixAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryItem__PrefixAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getPrefixAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_2__1__Impl"


    // $ANTLR start "rule__PrimaryItem__Group_2__2"
    // InternalMyBashParser.g:13703:1: rule__PrimaryItem__Group_2__2 : rule__PrimaryItem__Group_2__2__Impl ;
    public final void rule__PrimaryItem__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13707:1: ( rule__PrimaryItem__Group_2__2__Impl )
            // InternalMyBashParser.g:13708:2: rule__PrimaryItem__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_2__2"


    // $ANTLR start "rule__PrimaryItem__Group_2__2__Impl"
    // InternalMyBashParser.g:13714:1: rule__PrimaryItem__Group_2__2__Impl : ( ( rule__PrimaryItem__ValueAssignment_2_2 ) ) ;
    public final void rule__PrimaryItem__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13718:1: ( ( ( rule__PrimaryItem__ValueAssignment_2_2 ) ) )
            // InternalMyBashParser.g:13719:1: ( ( rule__PrimaryItem__ValueAssignment_2_2 ) )
            {
            // InternalMyBashParser.g:13719:1: ( ( rule__PrimaryItem__ValueAssignment_2_2 ) )
            // InternalMyBashParser.g:13720:2: ( rule__PrimaryItem__ValueAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getValueAssignment_2_2()); 
            }
            // InternalMyBashParser.g:13721:2: ( rule__PrimaryItem__ValueAssignment_2_2 )
            // InternalMyBashParser.g:13721:3: rule__PrimaryItem__ValueAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryItem__ValueAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getValueAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__Group_2__2__Impl"


    // $ANTLR start "rule__VariableId__Group__0"
    // InternalMyBashParser.g:13730:1: rule__VariableId__Group__0 : rule__VariableId__Group__0__Impl rule__VariableId__Group__1 ;
    public final void rule__VariableId__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13734:1: ( rule__VariableId__Group__0__Impl rule__VariableId__Group__1 )
            // InternalMyBashParser.g:13735:2: rule__VariableId__Group__0__Impl rule__VariableId__Group__1
            {
            pushFollow(FOLLOW_86);
            rule__VariableId__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VariableId__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableId__Group__0"


    // $ANTLR start "rule__VariableId__Group__0__Impl"
    // InternalMyBashParser.g:13742:1: rule__VariableId__Group__0__Impl : ( () ) ;
    public final void rule__VariableId__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13746:1: ( ( () ) )
            // InternalMyBashParser.g:13747:1: ( () )
            {
            // InternalMyBashParser.g:13747:1: ( () )
            // InternalMyBashParser.g:13748:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableIdAccess().getVariableIdAction_0()); 
            }
            // InternalMyBashParser.g:13749:2: ()
            // InternalMyBashParser.g:13749:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableIdAccess().getVariableIdAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableId__Group__0__Impl"


    // $ANTLR start "rule__VariableId__Group__1"
    // InternalMyBashParser.g:13757:1: rule__VariableId__Group__1 : rule__VariableId__Group__1__Impl ;
    public final void rule__VariableId__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13761:1: ( rule__VariableId__Group__1__Impl )
            // InternalMyBashParser.g:13762:2: rule__VariableId__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VariableId__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableId__Group__1"


    // $ANTLR start "rule__VariableId__Group__1__Impl"
    // InternalMyBashParser.g:13768:1: rule__VariableId__Group__1__Impl : ( ( rule__VariableId__RefAssignment_1 ) ) ;
    public final void rule__VariableId__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13772:1: ( ( ( rule__VariableId__RefAssignment_1 ) ) )
            // InternalMyBashParser.g:13773:1: ( ( rule__VariableId__RefAssignment_1 ) )
            {
            // InternalMyBashParser.g:13773:1: ( ( rule__VariableId__RefAssignment_1 ) )
            // InternalMyBashParser.g:13774:2: ( rule__VariableId__RefAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableIdAccess().getRefAssignment_1()); 
            }
            // InternalMyBashParser.g:13775:2: ( rule__VariableId__RefAssignment_1 )
            // InternalMyBashParser.g:13775:3: rule__VariableId__RefAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VariableId__RefAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableIdAccess().getRefAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableId__Group__1__Impl"


    // $ANTLR start "rule__NewLine__Group__0"
    // InternalMyBashParser.g:13784:1: rule__NewLine__Group__0 : rule__NewLine__Group__0__Impl rule__NewLine__Group__1 ;
    public final void rule__NewLine__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13788:1: ( rule__NewLine__Group__0__Impl rule__NewLine__Group__1 )
            // InternalMyBashParser.g:13789:2: rule__NewLine__Group__0__Impl rule__NewLine__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__NewLine__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NewLine__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NewLine__Group__0"


    // $ANTLR start "rule__NewLine__Group__0__Impl"
    // InternalMyBashParser.g:13796:1: rule__NewLine__Group__0__Impl : ( ( ruleHereDoc )* ) ;
    public final void rule__NewLine__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13800:1: ( ( ( ruleHereDoc )* ) )
            // InternalMyBashParser.g:13801:1: ( ( ruleHereDoc )* )
            {
            // InternalMyBashParser.g:13801:1: ( ( ruleHereDoc )* )
            // InternalMyBashParser.g:13802:2: ( ruleHereDoc )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNewLineAccess().getHereDocParserRuleCall_0()); 
            }
            // InternalMyBashParser.g:13803:2: ( ruleHereDoc )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==RULE_HERE_DOC_START) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalMyBashParser.g:13803:3: ruleHereDoc
            	    {
            	    pushFollow(FOLLOW_112);
            	    ruleHereDoc();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNewLineAccess().getHereDocParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NewLine__Group__0__Impl"


    // $ANTLR start "rule__NewLine__Group__1"
    // InternalMyBashParser.g:13811:1: rule__NewLine__Group__1 : rule__NewLine__Group__1__Impl ;
    public final void rule__NewLine__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13815:1: ( rule__NewLine__Group__1__Impl )
            // InternalMyBashParser.g:13816:2: rule__NewLine__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NewLine__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NewLine__Group__1"


    // $ANTLR start "rule__NewLine__Group__1__Impl"
    // InternalMyBashParser.g:13822:1: rule__NewLine__Group__1__Impl : ( RULE_NEW_LINE ) ;
    public final void rule__NewLine__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13826:1: ( ( RULE_NEW_LINE ) )
            // InternalMyBashParser.g:13827:1: ( RULE_NEW_LINE )
            {
            // InternalMyBashParser.g:13827:1: ( RULE_NEW_LINE )
            // InternalMyBashParser.g:13828:2: RULE_NEW_LINE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNewLineAccess().getNEW_LINETerminalRuleCall_1()); 
            }
            match(input,RULE_NEW_LINE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNewLineAccess().getNEW_LINETerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NewLine__Group__1__Impl"


    // $ANTLR start "rule__HereDoc__Group__0"
    // InternalMyBashParser.g:13838:1: rule__HereDoc__Group__0 : rule__HereDoc__Group__0__Impl rule__HereDoc__Group__1 ;
    public final void rule__HereDoc__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13842:1: ( rule__HereDoc__Group__0__Impl rule__HereDoc__Group__1 )
            // InternalMyBashParser.g:13843:2: rule__HereDoc__Group__0__Impl rule__HereDoc__Group__1
            {
            pushFollow(FOLLOW_113);
            rule__HereDoc__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__HereDoc__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HereDoc__Group__0"


    // $ANTLR start "rule__HereDoc__Group__0__Impl"
    // InternalMyBashParser.g:13850:1: rule__HereDoc__Group__0__Impl : ( RULE_HERE_DOC_START ) ;
    public final void rule__HereDoc__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13854:1: ( ( RULE_HERE_DOC_START ) )
            // InternalMyBashParser.g:13855:1: ( RULE_HERE_DOC_START )
            {
            // InternalMyBashParser.g:13855:1: ( RULE_HERE_DOC_START )
            // InternalMyBashParser.g:13856:2: RULE_HERE_DOC_START
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHereDocAccess().getHERE_DOC_STARTTerminalRuleCall_0()); 
            }
            match(input,RULE_HERE_DOC_START,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHereDocAccess().getHERE_DOC_STARTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HereDoc__Group__0__Impl"


    // $ANTLR start "rule__HereDoc__Group__1"
    // InternalMyBashParser.g:13865:1: rule__HereDoc__Group__1 : rule__HereDoc__Group__1__Impl rule__HereDoc__Group__2 ;
    public final void rule__HereDoc__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13869:1: ( rule__HereDoc__Group__1__Impl rule__HereDoc__Group__2 )
            // InternalMyBashParser.g:13870:2: rule__HereDoc__Group__1__Impl rule__HereDoc__Group__2
            {
            pushFollow(FOLLOW_113);
            rule__HereDoc__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__HereDoc__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HereDoc__Group__1"


    // $ANTLR start "rule__HereDoc__Group__1__Impl"
    // InternalMyBashParser.g:13877:1: rule__HereDoc__Group__1__Impl : ( ( rule__HereDoc__Alternatives_1 )* ) ;
    public final void rule__HereDoc__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13881:1: ( ( ( rule__HereDoc__Alternatives_1 )* ) )
            // InternalMyBashParser.g:13882:1: ( ( rule__HereDoc__Alternatives_1 )* )
            {
            // InternalMyBashParser.g:13882:1: ( ( rule__HereDoc__Alternatives_1 )* )
            // InternalMyBashParser.g:13883:2: ( rule__HereDoc__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHereDocAccess().getAlternatives_1()); 
            }
            // InternalMyBashParser.g:13884:2: ( rule__HereDoc__Alternatives_1 )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==RULE_NEW_LINE||LA131_0==RULE_HERE_DOC_PART) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalMyBashParser.g:13884:3: rule__HereDoc__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_114);
            	    rule__HereDoc__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHereDocAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HereDoc__Group__1__Impl"


    // $ANTLR start "rule__HereDoc__Group__2"
    // InternalMyBashParser.g:13892:1: rule__HereDoc__Group__2 : rule__HereDoc__Group__2__Impl ;
    public final void rule__HereDoc__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13896:1: ( rule__HereDoc__Group__2__Impl )
            // InternalMyBashParser.g:13897:2: rule__HereDoc__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__HereDoc__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HereDoc__Group__2"


    // $ANTLR start "rule__HereDoc__Group__2__Impl"
    // InternalMyBashParser.g:13903:1: rule__HereDoc__Group__2__Impl : ( RULE_HERE_DOC_END ) ;
    public final void rule__HereDoc__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13907:1: ( ( RULE_HERE_DOC_END ) )
            // InternalMyBashParser.g:13908:1: ( RULE_HERE_DOC_END )
            {
            // InternalMyBashParser.g:13908:1: ( RULE_HERE_DOC_END )
            // InternalMyBashParser.g:13909:2: RULE_HERE_DOC_END
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHereDocAccess().getHERE_DOC_ENDTerminalRuleCall_2()); 
            }
            match(input,RULE_HERE_DOC_END,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHereDocAccess().getHERE_DOC_ENDTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HereDoc__Group__2__Impl"


    // $ANTLR start "rule__Bash__CommandsAssignment_0_2_0"
    // InternalMyBashParser.g:13919:1: rule__Bash__CommandsAssignment_0_2_0 : ( ruleSimpleList ) ;
    public final void rule__Bash__CommandsAssignment_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13923:1: ( ( ruleSimpleList ) )
            // InternalMyBashParser.g:13924:2: ( ruleSimpleList )
            {
            // InternalMyBashParser.g:13924:2: ( ruleSimpleList )
            // InternalMyBashParser.g:13925:3: ruleSimpleList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getCommandsSimpleListParserRuleCall_0_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getCommandsSimpleListParserRuleCall_0_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__CommandsAssignment_0_2_0"


    // $ANTLR start "rule__Bash__CommandsAssignment_0_2_1_1"
    // InternalMyBashParser.g:13934:1: rule__Bash__CommandsAssignment_0_2_1_1 : ( ruleSimpleList ) ;
    public final void rule__Bash__CommandsAssignment_0_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13938:1: ( ( ruleSimpleList ) )
            // InternalMyBashParser.g:13939:2: ( ruleSimpleList )
            {
            // InternalMyBashParser.g:13939:2: ( ruleSimpleList )
            // InternalMyBashParser.g:13940:3: ruleSimpleList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getCommandsSimpleListParserRuleCall_0_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getCommandsSimpleListParserRuleCall_0_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__CommandsAssignment_0_2_1_1"


    // $ANTLR start "rule__Bash__ErrorAssignment_1_1_0"
    // InternalMyBashParser.g:13949:1: rule__Bash__ErrorAssignment_1_1_0 : ( ruleWord ) ;
    public final void rule__Bash__ErrorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13953:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:13954:2: ( ruleWord )
            {
            // InternalMyBashParser.g:13954:2: ( ruleWord )
            // InternalMyBashParser.g:13955:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getErrorWordParserRuleCall_1_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getErrorWordParserRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__ErrorAssignment_1_1_0"


    // $ANTLR start "rule__Bash__ErrorAssignment_1_1_1"
    // InternalMyBashParser.g:13964:1: rule__Bash__ErrorAssignment_1_1_1 : ( ruleAssignment ) ;
    public final void rule__Bash__ErrorAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13968:1: ( ( ruleAssignment ) )
            // InternalMyBashParser.g:13969:2: ( ruleAssignment )
            {
            // InternalMyBashParser.g:13969:2: ( ruleAssignment )
            // InternalMyBashParser.g:13970:3: ruleAssignment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBashAccess().getErrorAssignmentParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBashAccess().getErrorAssignmentParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bash__ErrorAssignment_1_1_1"


    // $ANTLR start "rule__CompoundList__CommandsAssignment_1_0"
    // InternalMyBashParser.g:13979:1: rule__CompoundList__CommandsAssignment_1_0 : ( ruleSimpleList ) ;
    public final void rule__CompoundList__CommandsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13983:1: ( ( ruleSimpleList ) )
            // InternalMyBashParser.g:13984:2: ( ruleSimpleList )
            {
            // InternalMyBashParser.g:13984:2: ( ruleSimpleList )
            // InternalMyBashParser.g:13985:3: ruleSimpleList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getCommandsSimpleListParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getCommandsSimpleListParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__CommandsAssignment_1_0"


    // $ANTLR start "rule__CompoundList__CommandsAssignment_1_1_1"
    // InternalMyBashParser.g:13994:1: rule__CompoundList__CommandsAssignment_1_1_1 : ( ruleSimpleList ) ;
    public final void rule__CompoundList__CommandsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:13998:1: ( ( ruleSimpleList ) )
            // InternalMyBashParser.g:13999:2: ( ruleSimpleList )
            {
            // InternalMyBashParser.g:13999:2: ( ruleSimpleList )
            // InternalMyBashParser.g:14000:3: ruleSimpleList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundListAccess().getCommandsSimpleListParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundListAccess().getCommandsSimpleListParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundList__CommandsAssignment_1_1_1"


    // $ANTLR start "rule__SimpleList__OpAssignment_1_1_0_0"
    // InternalMyBashParser.g:14009:1: rule__SimpleList__OpAssignment_1_1_0_0 : ( ( rule__SimpleList__OpAlternatives_1_1_0_0_0 ) ) ;
    public final void rule__SimpleList__OpAssignment_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14013:1: ( ( ( rule__SimpleList__OpAlternatives_1_1_0_0_0 ) ) )
            // InternalMyBashParser.g:14014:2: ( ( rule__SimpleList__OpAlternatives_1_1_0_0_0 ) )
            {
            // InternalMyBashParser.g:14014:2: ( ( rule__SimpleList__OpAlternatives_1_1_0_0_0 ) )
            // InternalMyBashParser.g:14015:3: ( rule__SimpleList__OpAlternatives_1_1_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getOpAlternatives_1_1_0_0_0()); 
            }
            // InternalMyBashParser.g:14016:3: ( rule__SimpleList__OpAlternatives_1_1_0_0_0 )
            // InternalMyBashParser.g:14016:4: rule__SimpleList__OpAlternatives_1_1_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__OpAlternatives_1_1_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getOpAlternatives_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__OpAssignment_1_1_0_0"


    // $ANTLR start "rule__SimpleList__OpAssignment_1_1_1"
    // InternalMyBashParser.g:14024:1: rule__SimpleList__OpAssignment_1_1_1 : ( ( rule__SimpleList__OpAlternatives_1_1_1_0 ) ) ;
    public final void rule__SimpleList__OpAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14028:1: ( ( ( rule__SimpleList__OpAlternatives_1_1_1_0 ) ) )
            // InternalMyBashParser.g:14029:2: ( ( rule__SimpleList__OpAlternatives_1_1_1_0 ) )
            {
            // InternalMyBashParser.g:14029:2: ( ( rule__SimpleList__OpAlternatives_1_1_1_0 ) )
            // InternalMyBashParser.g:14030:3: ( rule__SimpleList__OpAlternatives_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getOpAlternatives_1_1_1_0()); 
            }
            // InternalMyBashParser.g:14031:3: ( rule__SimpleList__OpAlternatives_1_1_1_0 )
            // InternalMyBashParser.g:14031:4: rule__SimpleList__OpAlternatives_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleList__OpAlternatives_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getOpAlternatives_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__OpAssignment_1_1_1"


    // $ANTLR start "rule__SimpleList__RightAssignment_1_2"
    // InternalMyBashParser.g:14039:1: rule__SimpleList__RightAssignment_1_2 : ( rulePipelineCommand ) ;
    public final void rule__SimpleList__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14043:1: ( ( rulePipelineCommand ) )
            // InternalMyBashParser.g:14044:2: ( rulePipelineCommand )
            {
            // InternalMyBashParser.g:14044:2: ( rulePipelineCommand )
            // InternalMyBashParser.g:14045:3: rulePipelineCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getRightPipelineCommandParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePipelineCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getRightPipelineCommandParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__RightAssignment_1_2"


    // $ANTLR start "rule__SimpleList__BackendAssignment_2_0"
    // InternalMyBashParser.g:14054:1: rule__SimpleList__BackendAssignment_2_0 : ( ( Ampersand ) ) ;
    public final void rule__SimpleList__BackendAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14058:1: ( ( ( Ampersand ) ) )
            // InternalMyBashParser.g:14059:2: ( ( Ampersand ) )
            {
            // InternalMyBashParser.g:14059:2: ( ( Ampersand ) )
            // InternalMyBashParser.g:14060:3: ( Ampersand )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getBackendAmpersandKeyword_2_0_0()); 
            }
            // InternalMyBashParser.g:14061:3: ( Ampersand )
            // InternalMyBashParser.g:14062:4: Ampersand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleListAccess().getBackendAmpersandKeyword_2_0_0()); 
            }
            match(input,Ampersand,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getBackendAmpersandKeyword_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleListAccess().getBackendAmpersandKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleList__BackendAssignment_2_0"


    // $ANTLR start "rule__PipelineCommand__NotAssignment_0_1"
    // InternalMyBashParser.g:14073:1: rule__PipelineCommand__NotAssignment_0_1 : ( ( ExclamationMark ) ) ;
    public final void rule__PipelineCommand__NotAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14077:1: ( ( ( ExclamationMark ) ) )
            // InternalMyBashParser.g:14078:2: ( ( ExclamationMark ) )
            {
            // InternalMyBashParser.g:14078:2: ( ( ExclamationMark ) )
            // InternalMyBashParser.g:14079:3: ( ExclamationMark )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandAccess().getNotExclamationMarkKeyword_0_1_0()); 
            }
            // InternalMyBashParser.g:14080:3: ( ExclamationMark )
            // InternalMyBashParser.g:14081:4: ExclamationMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandAccess().getNotExclamationMarkKeyword_0_1_0()); 
            }
            match(input,ExclamationMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandAccess().getNotExclamationMarkKeyword_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandAccess().getNotExclamationMarkKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__NotAssignment_0_1"


    // $ANTLR start "rule__PipelineCommand__PipelineAssignment_0_2"
    // InternalMyBashParser.g:14092:1: rule__PipelineCommand__PipelineAssignment_0_2 : ( rulePipeline ) ;
    public final void rule__PipelineCommand__PipelineAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14096:1: ( ( rulePipeline ) )
            // InternalMyBashParser.g:14097:2: ( rulePipeline )
            {
            // InternalMyBashParser.g:14097:2: ( rulePipeline )
            // InternalMyBashParser.g:14098:3: rulePipeline
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineCommandAccess().getPipelinePipelineParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePipeline();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineCommandAccess().getPipelinePipelineParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PipelineCommand__PipelineAssignment_0_2"


    // $ANTLR start "rule__Pipeline__OpAssignment_1_1"
    // InternalMyBashParser.g:14107:1: rule__Pipeline__OpAssignment_1_1 : ( ( rule__Pipeline__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Pipeline__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14111:1: ( ( ( rule__Pipeline__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:14112:2: ( ( rule__Pipeline__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:14112:2: ( ( rule__Pipeline__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:14113:3: ( rule__Pipeline__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:14114:3: ( rule__Pipeline__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:14114:4: rule__Pipeline__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Pipeline__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__OpAssignment_1_1"


    // $ANTLR start "rule__Pipeline__RightAssignment_1_3"
    // InternalMyBashParser.g:14122:1: rule__Pipeline__RightAssignment_1_3 : ( ruleCommand ) ;
    public final void rule__Pipeline__RightAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14126:1: ( ( ruleCommand ) )
            // InternalMyBashParser.g:14127:2: ( ruleCommand )
            {
            // InternalMyBashParser.g:14127:2: ( ruleCommand )
            // InternalMyBashParser.g:14128:3: ruleCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPipelineAccess().getRightCommandParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPipelineAccess().getRightCommandParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pipeline__RightAssignment_1_3"


    // $ANTLR start "rule__Command__RedirectsAssignment_2_1"
    // InternalMyBashParser.g:14137:1: rule__Command__RedirectsAssignment_2_1 : ( ruleRedirection ) ;
    public final void rule__Command__RedirectsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14141:1: ( ( ruleRedirection ) )
            // InternalMyBashParser.g:14142:2: ( ruleRedirection )
            {
            // InternalMyBashParser.g:14142:2: ( ruleRedirection )
            // InternalMyBashParser.g:14143:3: ruleRedirection
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandAccess().getRedirectsRedirectionParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRedirection();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandAccess().getRedirectsRedirectionParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Command__RedirectsAssignment_2_1"


    // $ANTLR start "rule__FunctionDefine__NameAssignment_0_2"
    // InternalMyBashParser.g:14152:1: rule__FunctionDefine__NameAssignment_0_2 : ( ruleFunctionName ) ;
    public final void rule__FunctionDefine__NameAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14156:1: ( ( ruleFunctionName ) )
            // InternalMyBashParser.g:14157:2: ( ruleFunctionName )
            {
            // InternalMyBashParser.g:14157:2: ( ruleFunctionName )
            // InternalMyBashParser.g:14158:3: ruleFunctionName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getNameFunctionNameParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getNameFunctionNameParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__NameAssignment_0_2"


    // $ANTLR start "rule__FunctionDefine__BodyAssignment_0_4"
    // InternalMyBashParser.g:14167:1: rule__FunctionDefine__BodyAssignment_0_4 : ( ruleShellCommand ) ;
    public final void rule__FunctionDefine__BodyAssignment_0_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14171:1: ( ( ruleShellCommand ) )
            // InternalMyBashParser.g:14172:2: ( ruleShellCommand )
            {
            // InternalMyBashParser.g:14172:2: ( ruleShellCommand )
            // InternalMyBashParser.g:14173:3: ruleShellCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getBodyShellCommandParserRuleCall_0_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleShellCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getBodyShellCommandParserRuleCall_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__BodyAssignment_0_4"


    // $ANTLR start "rule__FunctionDefine__NameAssignment_1_1"
    // InternalMyBashParser.g:14182:1: rule__FunctionDefine__NameAssignment_1_1 : ( ruleFunctionName ) ;
    public final void rule__FunctionDefine__NameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14186:1: ( ( ruleFunctionName ) )
            // InternalMyBashParser.g:14187:2: ( ruleFunctionName )
            {
            // InternalMyBashParser.g:14187:2: ( ruleFunctionName )
            // InternalMyBashParser.g:14188:3: ruleFunctionName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getNameFunctionNameParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getNameFunctionNameParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__NameAssignment_1_1"


    // $ANTLR start "rule__FunctionDefine__BodyAssignment_1_3"
    // InternalMyBashParser.g:14197:1: rule__FunctionDefine__BodyAssignment_1_3 : ( ruleShellCommand ) ;
    public final void rule__FunctionDefine__BodyAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14201:1: ( ( ruleShellCommand ) )
            // InternalMyBashParser.g:14202:2: ( ruleShellCommand )
            {
            // InternalMyBashParser.g:14202:2: ( ruleShellCommand )
            // InternalMyBashParser.g:14203:3: ruleShellCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefineAccess().getBodyShellCommandParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleShellCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefineAccess().getBodyShellCommandParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefine__BodyAssignment_1_3"


    // $ANTLR start "rule__SimpleCommand__AssignmentsAssignment_0_0"
    // InternalMyBashParser.g:14212:1: rule__SimpleCommand__AssignmentsAssignment_0_0 : ( ruleAssignment ) ;
    public final void rule__SimpleCommand__AssignmentsAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14216:1: ( ( ruleAssignment ) )
            // InternalMyBashParser.g:14217:2: ( ruleAssignment )
            {
            // InternalMyBashParser.g:14217:2: ( ruleAssignment )
            // InternalMyBashParser.g:14218:3: ruleAssignment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getAssignmentsAssignmentParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getAssignmentsAssignmentParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__AssignmentsAssignment_0_0"


    // $ANTLR start "rule__SimpleCommand__CommandAssignment_0_1_0"
    // InternalMyBashParser.g:14227:1: rule__SimpleCommand__CommandAssignment_0_1_0 : ( ruleCommandName ) ;
    public final void rule__SimpleCommand__CommandAssignment_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14231:1: ( ( ruleCommandName ) )
            // InternalMyBashParser.g:14232:2: ( ruleCommandName )
            {
            // InternalMyBashParser.g:14232:2: ( ruleCommandName )
            // InternalMyBashParser.g:14233:3: ruleCommandName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getCommandCommandNameParserRuleCall_0_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCommandName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getCommandCommandNameParserRuleCall_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__CommandAssignment_0_1_0"


    // $ANTLR start "rule__SimpleCommand__ParametersAssignment_0_1_1_0"
    // InternalMyBashParser.g:14242:1: rule__SimpleCommand__ParametersAssignment_0_1_1_0 : ( ruleWord ) ;
    public final void rule__SimpleCommand__ParametersAssignment_0_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14246:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:14247:2: ( ruleWord )
            {
            // InternalMyBashParser.g:14247:2: ( ruleWord )
            // InternalMyBashParser.g:14248:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getParametersWordParserRuleCall_0_1_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getParametersWordParserRuleCall_0_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__ParametersAssignment_0_1_1_0"


    // $ANTLR start "rule__SimpleCommand__RAssignment_0_1_1_1"
    // InternalMyBashParser.g:14257:1: rule__SimpleCommand__RAssignment_0_1_1_1 : ( ruleRedirection ) ;
    public final void rule__SimpleCommand__RAssignment_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14261:1: ( ( ruleRedirection ) )
            // InternalMyBashParser.g:14262:2: ( ruleRedirection )
            {
            // InternalMyBashParser.g:14262:2: ( ruleRedirection )
            // InternalMyBashParser.g:14263:3: ruleRedirection
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getRRedirectionParserRuleCall_0_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRedirection();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getRRedirectionParserRuleCall_0_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__RAssignment_0_1_1_1"


    // $ANTLR start "rule__SimpleCommand__CommandAssignment_1_0"
    // InternalMyBashParser.g:14272:1: rule__SimpleCommand__CommandAssignment_1_0 : ( ruleCommandName ) ;
    public final void rule__SimpleCommand__CommandAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14276:1: ( ( ruleCommandName ) )
            // InternalMyBashParser.g:14277:2: ( ruleCommandName )
            {
            // InternalMyBashParser.g:14277:2: ( ruleCommandName )
            // InternalMyBashParser.g:14278:3: ruleCommandName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getCommandCommandNameParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCommandName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getCommandCommandNameParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__CommandAssignment_1_0"


    // $ANTLR start "rule__SimpleCommand__ParametersAssignment_1_1_0"
    // InternalMyBashParser.g:14287:1: rule__SimpleCommand__ParametersAssignment_1_1_0 : ( ( rule__SimpleCommand__ParametersAlternatives_1_1_0_0 ) ) ;
    public final void rule__SimpleCommand__ParametersAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14291:1: ( ( ( rule__SimpleCommand__ParametersAlternatives_1_1_0_0 ) ) )
            // InternalMyBashParser.g:14292:2: ( ( rule__SimpleCommand__ParametersAlternatives_1_1_0_0 ) )
            {
            // InternalMyBashParser.g:14292:2: ( ( rule__SimpleCommand__ParametersAlternatives_1_1_0_0 ) )
            // InternalMyBashParser.g:14293:3: ( rule__SimpleCommand__ParametersAlternatives_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getParametersAlternatives_1_1_0_0()); 
            }
            // InternalMyBashParser.g:14294:3: ( rule__SimpleCommand__ParametersAlternatives_1_1_0_0 )
            // InternalMyBashParser.g:14294:4: rule__SimpleCommand__ParametersAlternatives_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleCommand__ParametersAlternatives_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getParametersAlternatives_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__ParametersAssignment_1_1_0"


    // $ANTLR start "rule__SimpleCommand__RAssignment_1_1_1"
    // InternalMyBashParser.g:14302:1: rule__SimpleCommand__RAssignment_1_1_1 : ( ruleRedirection ) ;
    public final void rule__SimpleCommand__RAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14306:1: ( ( ruleRedirection ) )
            // InternalMyBashParser.g:14307:2: ( ruleRedirection )
            {
            // InternalMyBashParser.g:14307:2: ( ruleRedirection )
            // InternalMyBashParser.g:14308:3: ruleRedirection
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getRRedirectionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRedirection();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getRRedirectionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__RAssignment_1_1_1"


    // $ANTLR start "rule__SimpleCommand__RAssignment_2"
    // InternalMyBashParser.g:14317:1: rule__SimpleCommand__RAssignment_2 : ( ruleRedirection ) ;
    public final void rule__SimpleCommand__RAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14321:1: ( ( ruleRedirection ) )
            // InternalMyBashParser.g:14322:2: ( ruleRedirection )
            {
            // InternalMyBashParser.g:14322:2: ( ruleRedirection )
            // InternalMyBashParser.g:14323:3: ruleRedirection
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleCommandAccess().getRRedirectionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRedirection();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleCommandAccess().getRRedirectionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleCommand__RAssignment_2"


    // $ANTLR start "rule__GroupCommand__BodyAssignment_2"
    // InternalMyBashParser.g:14332:1: rule__GroupCommand__BodyAssignment_2 : ( ruleCompoundList ) ;
    public final void rule__GroupCommand__BodyAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14336:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14337:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14337:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14338:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupCommandAccess().getBodyCompoundListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupCommandAccess().getBodyCompoundListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupCommand__BodyAssignment_2"


    // $ANTLR start "rule__CondCommand__ExpressionAssignment_1"
    // InternalMyBashParser.g:14347:1: rule__CondCommand__ExpressionAssignment_1 : ( ruleCondOrAnd ) ;
    public final void rule__CondCommand__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14351:1: ( ( ruleCondOrAnd ) )
            // InternalMyBashParser.g:14352:2: ( ruleCondOrAnd )
            {
            // InternalMyBashParser.g:14352:2: ( ruleCondOrAnd )
            // InternalMyBashParser.g:14353:3: ruleCondOrAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondCommandAccess().getExpressionCondOrAndParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCondOrAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondCommandAccess().getExpressionCondOrAndParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondCommand__ExpressionAssignment_1"


    // $ANTLR start "rule__ArithmeticCommand__ExpressionAssignment_1"
    // InternalMyBashParser.g:14362:1: rule__ArithmeticCommand__ExpressionAssignment_1 : ( ruleEvaluation ) ;
    public final void rule__ArithmeticCommand__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14366:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:14367:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:14367:2: ( ruleEvaluation )
            // InternalMyBashParser.g:14368:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticCommandAccess().getExpressionEvaluationParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticCommandAccess().getExpressionEvaluationParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticCommand__ExpressionAssignment_1"


    // $ANTLR start "rule__Subshell__BodyAssignment_1"
    // InternalMyBashParser.g:14377:1: rule__Subshell__BodyAssignment_1 : ( ruleCompoundList ) ;
    public final void rule__Subshell__BodyAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14381:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14382:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14382:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14383:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubshellAccess().getBodyCompoundListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubshellAccess().getBodyCompoundListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subshell__BodyAssignment_1"


    // $ANTLR start "rule__CommandName__RefAssignment_0_1"
    // InternalMyBashParser.g:14392:1: rule__CommandName__RefAssignment_0_1 : ( ( ruleFunctionName ) ) ;
    public final void rule__CommandName__RefAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14396:1: ( ( ( ruleFunctionName ) ) )
            // InternalMyBashParser.g:14397:2: ( ( ruleFunctionName ) )
            {
            // InternalMyBashParser.g:14397:2: ( ( ruleFunctionName ) )
            // InternalMyBashParser.g:14398:3: ( ruleFunctionName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandNameAccess().getRefFunctionDefineCrossReference_0_1_0()); 
            }
            // InternalMyBashParser.g:14399:3: ( ruleFunctionName )
            // InternalMyBashParser.g:14400:4: ruleFunctionName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandNameAccess().getRefFunctionDefineFunctionNameParserRuleCall_0_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandNameAccess().getRefFunctionDefineFunctionNameParserRuleCall_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandNameAccess().getRefFunctionDefineCrossReference_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandName__RefAssignment_0_1"


    // $ANTLR start "rule__CaseStatement__VariableAssignment_2"
    // InternalMyBashParser.g:14411:1: rule__CaseStatement__VariableAssignment_2 : ( ruleWord ) ;
    public final void rule__CaseStatement__VariableAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14415:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:14416:2: ( ruleWord )
            {
            // InternalMyBashParser.g:14416:2: ( ruleWord )
            // InternalMyBashParser.g:14417:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getVariableWordParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getVariableWordParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__VariableAssignment_2"


    // $ANTLR start "rule__CaseStatement__PatternsAssignment_6_0"
    // InternalMyBashParser.g:14426:1: rule__CaseStatement__PatternsAssignment_6_0 : ( ruleCasePattern ) ;
    public final void rule__CaseStatement__PatternsAssignment_6_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14430:1: ( ( ruleCasePattern ) )
            // InternalMyBashParser.g:14431:2: ( ruleCasePattern )
            {
            // InternalMyBashParser.g:14431:2: ( ruleCasePattern )
            // InternalMyBashParser.g:14432:3: ruleCasePattern
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getPatternsCasePatternParserRuleCall_6_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCasePattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getPatternsCasePatternParserRuleCall_6_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__PatternsAssignment_6_0"


    // $ANTLR start "rule__CaseStatement__PatternsAssignment_6_1"
    // InternalMyBashParser.g:14441:1: rule__CaseStatement__PatternsAssignment_6_1 : ( ruleCasePatternContinue ) ;
    public final void rule__CaseStatement__PatternsAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14445:1: ( ( ruleCasePatternContinue ) )
            // InternalMyBashParser.g:14446:2: ( ruleCasePatternContinue )
            {
            // InternalMyBashParser.g:14446:2: ( ruleCasePatternContinue )
            // InternalMyBashParser.g:14447:3: ruleCasePatternContinue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatementAccess().getPatternsCasePatternContinueParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCasePatternContinue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatementAccess().getPatternsCasePatternContinueParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStatement__PatternsAssignment_6_1"


    // $ANTLR start "rule__CasePattern__ConditionAssignment_1"
    // InternalMyBashParser.g:14456:1: rule__CasePattern__ConditionAssignment_1 : ( rulePattern ) ;
    public final void rule__CasePattern__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14460:1: ( ( rulePattern ) )
            // InternalMyBashParser.g:14461:2: ( rulePattern )
            {
            // InternalMyBashParser.g:14461:2: ( rulePattern )
            // InternalMyBashParser.g:14462:3: rulePattern
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternAccess().getConditionPatternParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternAccess().getConditionPatternParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__ConditionAssignment_1"


    // $ANTLR start "rule__CasePattern__BodyAssignment_3"
    // InternalMyBashParser.g:14471:1: rule__CasePattern__BodyAssignment_3 : ( ruleCompoundList ) ;
    public final void rule__CasePattern__BodyAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14475:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14476:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14476:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14477:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternAccess().getBodyCompoundListParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternAccess().getBodyCompoundListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePattern__BodyAssignment_3"


    // $ANTLR start "rule__CasePatternContinue__FollowAssignment_0_0"
    // InternalMyBashParser.g:14486:1: rule__CasePatternContinue__FollowAssignment_0_0 : ( ( rule__CasePatternContinue__FollowAlternatives_0_0_0 ) ) ;
    public final void rule__CasePatternContinue__FollowAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14490:1: ( ( ( rule__CasePatternContinue__FollowAlternatives_0_0_0 ) ) )
            // InternalMyBashParser.g:14491:2: ( ( rule__CasePatternContinue__FollowAlternatives_0_0_0 ) )
            {
            // InternalMyBashParser.g:14491:2: ( ( rule__CasePatternContinue__FollowAlternatives_0_0_0 ) )
            // InternalMyBashParser.g:14492:3: ( rule__CasePatternContinue__FollowAlternatives_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getFollowAlternatives_0_0_0()); 
            }
            // InternalMyBashParser.g:14493:3: ( rule__CasePatternContinue__FollowAlternatives_0_0_0 )
            // InternalMyBashParser.g:14493:4: rule__CasePatternContinue__FollowAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__CasePatternContinue__FollowAlternatives_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getFollowAlternatives_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__FollowAssignment_0_0"


    // $ANTLR start "rule__CasePatternContinue__ConditionAssignment_2"
    // InternalMyBashParser.g:14501:1: rule__CasePatternContinue__ConditionAssignment_2 : ( rulePattern ) ;
    public final void rule__CasePatternContinue__ConditionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14505:1: ( ( rulePattern ) )
            // InternalMyBashParser.g:14506:2: ( rulePattern )
            {
            // InternalMyBashParser.g:14506:2: ( rulePattern )
            // InternalMyBashParser.g:14507:3: rulePattern
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getConditionPatternParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getConditionPatternParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__ConditionAssignment_2"


    // $ANTLR start "rule__CasePatternContinue__BodyAssignment_4"
    // InternalMyBashParser.g:14516:1: rule__CasePatternContinue__BodyAssignment_4 : ( ruleCompoundList ) ;
    public final void rule__CasePatternContinue__BodyAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14520:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14521:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14521:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14522:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCasePatternContinueAccess().getBodyCompoundListParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCasePatternContinueAccess().getBodyCompoundListParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CasePatternContinue__BodyAssignment_4"


    // $ANTLR start "rule__Pattern__PartsAssignment_0"
    // InternalMyBashParser.g:14531:1: rule__Pattern__PartsAssignment_0 : ( ruleWord ) ;
    public final void rule__Pattern__PartsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14535:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:14536:2: ( ruleWord )
            {
            // InternalMyBashParser.g:14536:2: ( ruleWord )
            // InternalMyBashParser.g:14537:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPartsWordParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPartsWordParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__PartsAssignment_0"


    // $ANTLR start "rule__Pattern__PartsAssignment_1_1"
    // InternalMyBashParser.g:14546:1: rule__Pattern__PartsAssignment_1_1 : ( ruleWord ) ;
    public final void rule__Pattern__PartsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14550:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:14551:2: ( ruleWord )
            {
            // InternalMyBashParser.g:14551:2: ( ruleWord )
            // InternalMyBashParser.g:14552:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPartsWordParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPartsWordParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__PartsAssignment_1_1"


    // $ANTLR start "rule__IfStatement__ConditionAssignment_2"
    // InternalMyBashParser.g:14561:1: rule__IfStatement__ConditionAssignment_2 : ( ruleCompoundList ) ;
    public final void rule__IfStatement__ConditionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14565:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14566:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14566:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14567:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getConditionCompoundListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getConditionCompoundListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__ConditionAssignment_2"


    // $ANTLR start "rule__IfStatement__ThenAssignment_4"
    // InternalMyBashParser.g:14576:1: rule__IfStatement__ThenAssignment_4 : ( ruleCompoundList ) ;
    public final void rule__IfStatement__ThenAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14580:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14581:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14581:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14582:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getThenCompoundListParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getThenCompoundListParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__ThenAssignment_4"


    // $ANTLR start "rule__IfStatement__ElseIfBlockAssignment_5"
    // InternalMyBashParser.g:14591:1: rule__IfStatement__ElseIfBlockAssignment_5 : ( ruleElseIfBlock ) ;
    public final void rule__IfStatement__ElseIfBlockAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14595:1: ( ( ruleElseIfBlock ) )
            // InternalMyBashParser.g:14596:2: ( ruleElseIfBlock )
            {
            // InternalMyBashParser.g:14596:2: ( ruleElseIfBlock )
            // InternalMyBashParser.g:14597:3: ruleElseIfBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getElseIfBlockElseIfBlockParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleElseIfBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getElseIfBlockElseIfBlockParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__ElseIfBlockAssignment_5"


    // $ANTLR start "rule__IfStatement__ElseAssignment_6_1"
    // InternalMyBashParser.g:14606:1: rule__IfStatement__ElseAssignment_6_1 : ( ruleCompoundList ) ;
    public final void rule__IfStatement__ElseAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14610:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14611:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14611:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14612:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStatementAccess().getElseCompoundListParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStatementAccess().getElseCompoundListParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__ElseAssignment_6_1"


    // $ANTLR start "rule__ElseIfBlock__ConditionAssignment_2"
    // InternalMyBashParser.g:14621:1: rule__ElseIfBlock__ConditionAssignment_2 : ( ruleCompoundList ) ;
    public final void rule__ElseIfBlock__ConditionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14625:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14626:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14626:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14627:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getConditionCompoundListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getConditionCompoundListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__ConditionAssignment_2"


    // $ANTLR start "rule__ElseIfBlock__ThenAssignment_4"
    // InternalMyBashParser.g:14636:1: rule__ElseIfBlock__ThenAssignment_4 : ( ruleCompoundList ) ;
    public final void rule__ElseIfBlock__ThenAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14640:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14641:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14641:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14642:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfBlockAccess().getThenCompoundListParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfBlockAccess().getThenCompoundListParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfBlock__ThenAssignment_4"


    // $ANTLR start "rule__ForStatement__InitAssignment_1_0_2"
    // InternalMyBashParser.g:14651:1: rule__ForStatement__InitAssignment_1_0_2 : ( ruleEvaluation ) ;
    public final void rule__ForStatement__InitAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14655:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:14656:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:14656:2: ( ruleEvaluation )
            // InternalMyBashParser.g:14657:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getInitEvaluationParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getInitEvaluationParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__InitAssignment_1_0_2"


    // $ANTLR start "rule__ForStatement__ConditionAssignment_1_0_4"
    // InternalMyBashParser.g:14666:1: rule__ForStatement__ConditionAssignment_1_0_4 : ( ruleEvaluation ) ;
    public final void rule__ForStatement__ConditionAssignment_1_0_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14670:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:14671:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:14671:2: ( ruleEvaluation )
            // InternalMyBashParser.g:14672:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getConditionEvaluationParserRuleCall_1_0_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getConditionEvaluationParserRuleCall_1_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__ConditionAssignment_1_0_4"


    // $ANTLR start "rule__ForStatement__StepAssignment_1_0_6"
    // InternalMyBashParser.g:14681:1: rule__ForStatement__StepAssignment_1_0_6 : ( ruleEvaluation ) ;
    public final void rule__ForStatement__StepAssignment_1_0_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14685:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:14686:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:14686:2: ( ruleEvaluation )
            // InternalMyBashParser.g:14687:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getStepEvaluationParserRuleCall_1_0_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getStepEvaluationParserRuleCall_1_0_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__StepAssignment_1_0_6"


    // $ANTLR start "rule__ForStatement__VariableAssignment_1_1_1"
    // InternalMyBashParser.g:14696:1: rule__ForStatement__VariableAssignment_1_1_1 : ( RULE_NAME ) ;
    public final void rule__ForStatement__VariableAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14700:1: ( ( RULE_NAME ) )
            // InternalMyBashParser.g:14701:2: ( RULE_NAME )
            {
            // InternalMyBashParser.g:14701:2: ( RULE_NAME )
            // InternalMyBashParser.g:14702:3: RULE_NAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getVariableNAMETerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_NAME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getVariableNAMETerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__VariableAssignment_1_1_1"


    // $ANTLR start "rule__ForStatement__WordsAssignment_1_1_3"
    // InternalMyBashParser.g:14711:1: rule__ForStatement__WordsAssignment_1_1_3 : ( ruleWord ) ;
    public final void rule__ForStatement__WordsAssignment_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14715:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:14716:2: ( ruleWord )
            {
            // InternalMyBashParser.g:14716:2: ( ruleWord )
            // InternalMyBashParser.g:14717:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getWordsWordParserRuleCall_1_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getWordsWordParserRuleCall_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__WordsAssignment_1_1_3"


    // $ANTLR start "rule__ForStatement__BodyAssignment_3"
    // InternalMyBashParser.g:14726:1: rule__ForStatement__BodyAssignment_3 : ( ruleCompoundList ) ;
    public final void rule__ForStatement__BodyAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14730:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14731:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14731:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14732:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStatementAccess().getBodyCompoundListParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStatementAccess().getBodyCompoundListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStatement__BodyAssignment_3"


    // $ANTLR start "rule__WhileStatement__CAssignment_1"
    // InternalMyBashParser.g:14741:1: rule__WhileStatement__CAssignment_1 : ( ruleCompoundList ) ;
    public final void rule__WhileStatement__CAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14745:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14746:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14746:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14747:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getCCompoundListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getCCompoundListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__CAssignment_1"


    // $ANTLR start "rule__WhileStatement__DAssignment_3"
    // InternalMyBashParser.g:14756:1: rule__WhileStatement__DAssignment_3 : ( ruleCompoundList ) ;
    public final void rule__WhileStatement__DAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14760:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:14761:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:14761:2: ( ruleCompoundList )
            // InternalMyBashParser.g:14762:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileStatementAccess().getDCompoundListParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileStatementAccess().getDCompoundListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__DAssignment_3"


    // $ANTLR start "rule__Redirection__OpAssignment_1_0_1"
    // InternalMyBashParser.g:14771:1: rule__Redirection__OpAssignment_1_0_1 : ( ( rule__Redirection__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__Redirection__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14775:1: ( ( ( rule__Redirection__OpAlternatives_1_0_1_0 ) ) )
            // InternalMyBashParser.g:14776:2: ( ( rule__Redirection__OpAlternatives_1_0_1_0 ) )
            {
            // InternalMyBashParser.g:14776:2: ( ( rule__Redirection__OpAlternatives_1_0_1_0 ) )
            // InternalMyBashParser.g:14777:3: ( rule__Redirection__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalMyBashParser.g:14778:3: ( rule__Redirection__OpAlternatives_1_0_1_0 )
            // InternalMyBashParser.g:14778:4: rule__Redirection__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Redirection__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__OpAssignment_1_0_1"


    // $ANTLR start "rule__Redirection__TargetAssignment_1_0_2_0"
    // InternalMyBashParser.g:14786:1: rule__Redirection__TargetAssignment_1_0_2_0 : ( ruleWord ) ;
    public final void rule__Redirection__TargetAssignment_1_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14790:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:14791:2: ( ruleWord )
            {
            // InternalMyBashParser.g:14791:2: ( ruleWord )
            // InternalMyBashParser.g:14792:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getTargetWordParserRuleCall_1_0_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getTargetWordParserRuleCall_1_0_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__TargetAssignment_1_0_2_0"


    // $ANTLR start "rule__Redirection__OpAssignment_1_1_0"
    // InternalMyBashParser.g:14801:1: rule__Redirection__OpAssignment_1_1_0 : ( ( LessThanSignLessThanSign ) ) ;
    public final void rule__Redirection__OpAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14805:1: ( ( ( LessThanSignLessThanSign ) ) )
            // InternalMyBashParser.g:14806:2: ( ( LessThanSignLessThanSign ) )
            {
            // InternalMyBashParser.g:14806:2: ( ( LessThanSignLessThanSign ) )
            // InternalMyBashParser.g:14807:3: ( LessThanSignLessThanSign )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); 
            }
            // InternalMyBashParser.g:14808:3: ( LessThanSignLessThanSign )
            // InternalMyBashParser.g:14809:4: LessThanSignLessThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRedirectionAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); 
            }
            match(input,LessThanSignLessThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRedirectionAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Redirection__OpAssignment_1_1_0"


    // $ANTLR start "rule__ArrayStart__WordsAssignment_2_1"
    // InternalMyBashParser.g:14820:1: rule__ArrayStart__WordsAssignment_2_1 : ( ruleWord ) ;
    public final void rule__ArrayStart__WordsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14824:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:14825:2: ( ruleWord )
            {
            // InternalMyBashParser.g:14825:2: ( ruleWord )
            // InternalMyBashParser.g:14826:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayStartAccess().getWordsWordParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayStartAccess().getWordsWordParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayStart__WordsAssignment_2_1"


    // $ANTLR start "rule__Word__ElementsAssignment_1"
    // InternalMyBashParser.g:14835:1: rule__Word__ElementsAssignment_1 : ( ruleLiteralWord ) ;
    public final void rule__Word__ElementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14839:1: ( ( ruleLiteralWord ) )
            // InternalMyBashParser.g:14840:2: ( ruleLiteralWord )
            {
            // InternalMyBashParser.g:14840:2: ( ruleLiteralWord )
            // InternalMyBashParser.g:14841:3: ruleLiteralWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordAccess().getElementsLiteralWordParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLiteralWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordAccess().getElementsLiteralWordParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Word__ElementsAssignment_1"


    // $ANTLR start "rule__LiteralWord__ValuesAssignment_1"
    // InternalMyBashParser.g:14850:1: rule__LiteralWord__ValuesAssignment_1 : ( RULE_S_WORD_PART ) ;
    public final void rule__LiteralWord__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14854:1: ( ( RULE_S_WORD_PART ) )
            // InternalMyBashParser.g:14855:2: ( RULE_S_WORD_PART )
            {
            // InternalMyBashParser.g:14855:2: ( RULE_S_WORD_PART )
            // InternalMyBashParser.g:14856:3: RULE_S_WORD_PART
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordAccess().getValuesS_WORD_PARTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_S_WORD_PART,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordAccess().getValuesS_WORD_PARTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWord__ValuesAssignment_1"


    // $ANTLR start "rule__Assignment__NameAssignment_0"
    // InternalMyBashParser.g:14865:1: rule__Assignment__NameAssignment_0 : ( RULE_NAME ) ;
    public final void rule__Assignment__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14869:1: ( ( RULE_NAME ) )
            // InternalMyBashParser.g:14870:2: ( RULE_NAME )
            {
            // InternalMyBashParser.g:14870:2: ( RULE_NAME )
            // InternalMyBashParser.g:14871:3: RULE_NAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getNameNAMETerminalRuleCall_0_0()); 
            }
            match(input,RULE_NAME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getNameNAMETerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__NameAssignment_0"


    // $ANTLR start "rule__Assignment__IndexAssignment_1"
    // InternalMyBashParser.g:14880:1: rule__Assignment__IndexAssignment_1 : ( ruleIndexEvaluation ) ;
    public final void rule__Assignment__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14884:1: ( ( ruleIndexEvaluation ) )
            // InternalMyBashParser.g:14885:2: ( ruleIndexEvaluation )
            {
            // InternalMyBashParser.g:14885:2: ( ruleIndexEvaluation )
            // InternalMyBashParser.g:14886:3: ruleIndexEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getIndexIndexEvaluationParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIndexEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getIndexIndexEvaluationParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__IndexAssignment_1"


    // $ANTLR start "rule__Assignment__ValueAssignment_3"
    // InternalMyBashParser.g:14895:1: rule__Assignment__ValueAssignment_3 : ( ruleAssignable ) ;
    public final void rule__Assignment__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14899:1: ( ( ruleAssignable ) )
            // InternalMyBashParser.g:14900:2: ( ruleAssignable )
            {
            // InternalMyBashParser.g:14900:2: ( ruleAssignable )
            // InternalMyBashParser.g:14901:3: ruleAssignable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getValueAssignableParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getValueAssignableParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__ValueAssignment_3"


    // $ANTLR start "rule__LAssignment__NameAssignment_0"
    // InternalMyBashParser.g:14910:1: rule__LAssignment__NameAssignment_0 : ( RULE_NAME ) ;
    public final void rule__LAssignment__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14914:1: ( ( RULE_NAME ) )
            // InternalMyBashParser.g:14915:2: ( RULE_NAME )
            {
            // InternalMyBashParser.g:14915:2: ( RULE_NAME )
            // InternalMyBashParser.g:14916:3: RULE_NAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getNameNAMETerminalRuleCall_0_0()); 
            }
            match(input,RULE_NAME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getNameNAMETerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__NameAssignment_0"


    // $ANTLR start "rule__LAssignment__IndexAssignment_1"
    // InternalMyBashParser.g:14925:1: rule__LAssignment__IndexAssignment_1 : ( ruleIndexEvaluation ) ;
    public final void rule__LAssignment__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14929:1: ( ( ruleIndexEvaluation ) )
            // InternalMyBashParser.g:14930:2: ( ruleIndexEvaluation )
            {
            // InternalMyBashParser.g:14930:2: ( ruleIndexEvaluation )
            // InternalMyBashParser.g:14931:3: ruleIndexEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getIndexIndexEvaluationParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIndexEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getIndexIndexEvaluationParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__IndexAssignment_1"


    // $ANTLR start "rule__LAssignment__ValueAssignment_2_1"
    // InternalMyBashParser.g:14940:1: rule__LAssignment__ValueAssignment_2_1 : ( ruleAssignable ) ;
    public final void rule__LAssignment__ValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14944:1: ( ( ruleAssignable ) )
            // InternalMyBashParser.g:14945:2: ( ruleAssignable )
            {
            // InternalMyBashParser.g:14945:2: ( ruleAssignable )
            // InternalMyBashParser.g:14946:3: ruleAssignable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLAssignmentAccess().getValueAssignableParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLAssignmentAccess().getValueAssignableParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LAssignment__ValueAssignment_2_1"


    // $ANTLR start "rule__Words__ElementsAssignment"
    // InternalMyBashParser.g:14955:1: rule__Words__ElementsAssignment : ( ruleWordElement ) ;
    public final void rule__Words__ElementsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14959:1: ( ( ruleWordElement ) )
            // InternalMyBashParser.g:14960:2: ( ruleWordElement )
            {
            // InternalMyBashParser.g:14960:2: ( ruleWordElement )
            // InternalMyBashParser.g:14961:3: ruleWordElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWordsAccess().getElementsWordElementParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWordElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWordsAccess().getElementsWordElementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Words__ElementsAssignment"


    // $ANTLR start "rule__DQString__ElementsAssignment_2"
    // InternalMyBashParser.g:14970:1: rule__DQString__ElementsAssignment_2 : ( ruleStringElement ) ;
    public final void rule__DQString__ElementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14974:1: ( ( ruleStringElement ) )
            // InternalMyBashParser.g:14975:2: ( ruleStringElement )
            {
            // InternalMyBashParser.g:14975:2: ( ruleStringElement )
            // InternalMyBashParser.g:14976:3: ruleStringElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDQStringAccess().getElementsStringElementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDQStringAccess().getElementsStringElementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DQString__ElementsAssignment_2"


    // $ANTLR start "rule__LiteralStringPart__ValuesAssignment_1"
    // InternalMyBashParser.g:14985:1: rule__LiteralStringPart__ValuesAssignment_1 : ( RULE_WORD_PART ) ;
    public final void rule__LiteralStringPart__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:14989:1: ( ( RULE_WORD_PART ) )
            // InternalMyBashParser.g:14990:2: ( RULE_WORD_PART )
            {
            // InternalMyBashParser.g:14990:2: ( RULE_WORD_PART )
            // InternalMyBashParser.g:14991:3: RULE_WORD_PART
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralStringPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_WORD_PART,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralStringPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralStringPart__ValuesAssignment_1"


    // $ANTLR start "rule__LiteralWordPart__ValuesAssignment_1_0_0"
    // InternalMyBashParser.g:15000:1: rule__LiteralWordPart__ValuesAssignment_1_0_0 : ( RULE_WORD_PART ) ;
    public final void rule__LiteralWordPart__ValuesAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15004:1: ( ( RULE_WORD_PART ) )
            // InternalMyBashParser.g:15005:2: ( RULE_WORD_PART )
            {
            // InternalMyBashParser.g:15005:2: ( RULE_WORD_PART )
            // InternalMyBashParser.g:15006:3: RULE_WORD_PART
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0_0_0()); 
            }
            match(input,RULE_WORD_PART,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__ValuesAssignment_1_0_0"


    // $ANTLR start "rule__LiteralWordPart__ValuesAssignment_1_0_1_1"
    // InternalMyBashParser.g:15015:1: rule__LiteralWordPart__ValuesAssignment_1_0_1_1 : ( RULE_WORD_PART ) ;
    public final void rule__LiteralWordPart__ValuesAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15019:1: ( ( RULE_WORD_PART ) )
            // InternalMyBashParser.g:15020:2: ( RULE_WORD_PART )
            {
            // InternalMyBashParser.g:15020:2: ( RULE_WORD_PART )
            // InternalMyBashParser.g:15021:3: RULE_WORD_PART
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0_1_1_0()); 
            }
            match(input,RULE_WORD_PART,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__ValuesAssignment_1_0_1_1"


    // $ANTLR start "rule__LiteralWordPart__ValuesAssignment_1_0_2_1"
    // InternalMyBashParser.g:15030:1: rule__LiteralWordPart__ValuesAssignment_1_0_2_1 : ( RULE_WORD_PART ) ;
    public final void rule__LiteralWordPart__ValuesAssignment_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15034:1: ( ( RULE_WORD_PART ) )
            // InternalMyBashParser.g:15035:2: ( RULE_WORD_PART )
            {
            // InternalMyBashParser.g:15035:2: ( RULE_WORD_PART )
            // InternalMyBashParser.g:15036:3: RULE_WORD_PART
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralWordPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0_2_1_0()); 
            }
            match(input,RULE_WORD_PART,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralWordPartAccess().getValuesWORD_PARTTerminalRuleCall_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralWordPart__ValuesAssignment_1_0_2_1"


    // $ANTLR start "rule__CondOrAnd__RightAssignment_1_2"
    // InternalMyBashParser.g:15045:1: rule__CondOrAnd__RightAssignment_1_2 : ( ruleCondExp ) ;
    public final void rule__CondOrAnd__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15049:1: ( ( ruleCondExp ) )
            // InternalMyBashParser.g:15050:2: ( ruleCondExp )
            {
            // InternalMyBashParser.g:15050:2: ( ruleCondExp )
            // InternalMyBashParser.g:15051:3: ruleCondExp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondOrAndAccess().getRightCondExpParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCondExp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondOrAndAccess().getRightCondExpParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondOrAnd__RightAssignment_1_2"


    // $ANTLR start "rule__CondExp__OpAssignment_0_1"
    // InternalMyBashParser.g:15060:1: rule__CondExp__OpAssignment_0_1 : ( RULE_C_S_OP ) ;
    public final void rule__CondExp__OpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15064:1: ( ( RULE_C_S_OP ) )
            // InternalMyBashParser.g:15065:2: ( RULE_C_S_OP )
            {
            // InternalMyBashParser.g:15065:2: ( RULE_C_S_OP )
            // InternalMyBashParser.g:15066:3: RULE_C_S_OP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOpC_S_OPTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_C_S_OP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOpC_S_OPTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__OpAssignment_0_1"


    // $ANTLR start "rule__CondExp__OperandAssignment_0_2"
    // InternalMyBashParser.g:15075:1: rule__CondExp__OperandAssignment_0_2 : ( ruleWord ) ;
    public final void rule__CondExp__OperandAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15079:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15080:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15080:2: ( ruleWord )
            // InternalMyBashParser.g:15081:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOperandWordParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOperandWordParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__OperandAssignment_0_2"


    // $ANTLR start "rule__CondExp__OpAssignment_1_1_1_0_0"
    // InternalMyBashParser.g:15090:1: rule__CondExp__OpAssignment_1_1_1_0_0 : ( RULE_C_B_OP ) ;
    public final void rule__CondExp__OpAssignment_1_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15094:1: ( ( RULE_C_B_OP ) )
            // InternalMyBashParser.g:15095:2: ( RULE_C_B_OP )
            {
            // InternalMyBashParser.g:15095:2: ( RULE_C_B_OP )
            // InternalMyBashParser.g:15096:3: RULE_C_B_OP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOpC_B_OPTerminalRuleCall_1_1_1_0_0_0()); 
            }
            match(input,RULE_C_B_OP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOpC_B_OPTerminalRuleCall_1_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__OpAssignment_1_1_1_0_0"


    // $ANTLR start "rule__CondExp__RightAssignment_1_1_1_0_1"
    // InternalMyBashParser.g:15105:1: rule__CondExp__RightAssignment_1_1_1_0_1 : ( ruleWord ) ;
    public final void rule__CondExp__RightAssignment_1_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15109:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15110:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15110:2: ( ruleWord )
            // InternalMyBashParser.g:15111:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getRightWordParserRuleCall_1_1_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getRightWordParserRuleCall_1_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__RightAssignment_1_1_1_0_1"


    // $ANTLR start "rule__CondExp__OpAssignment_1_1_1_1_0"
    // InternalMyBashParser.g:15120:1: rule__CondExp__OpAssignment_1_1_1_1_0 : ( ( EqualsSignTilde ) ) ;
    public final void rule__CondExp__OpAssignment_1_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15124:1: ( ( ( EqualsSignTilde ) ) )
            // InternalMyBashParser.g:15125:2: ( ( EqualsSignTilde ) )
            {
            // InternalMyBashParser.g:15125:2: ( ( EqualsSignTilde ) )
            // InternalMyBashParser.g:15126:3: ( EqualsSignTilde )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOpEqualsSignTildeKeyword_1_1_1_1_0_0()); 
            }
            // InternalMyBashParser.g:15127:3: ( EqualsSignTilde )
            // InternalMyBashParser.g:15128:4: EqualsSignTilde
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getOpEqualsSignTildeKeyword_1_1_1_1_0_0()); 
            }
            match(input,EqualsSignTilde,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOpEqualsSignTildeKeyword_1_1_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getOpEqualsSignTildeKeyword_1_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__OpAssignment_1_1_1_1_0"


    // $ANTLR start "rule__CondExp__RightAssignment_1_1_1_1_1"
    // InternalMyBashParser.g:15139:1: rule__CondExp__RightAssignment_1_1_1_1_1 : ( ruleRegularExpression ) ;
    public final void rule__CondExp__RightAssignment_1_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15143:1: ( ( ruleRegularExpression ) )
            // InternalMyBashParser.g:15144:2: ( ruleRegularExpression )
            {
            // InternalMyBashParser.g:15144:2: ( ruleRegularExpression )
            // InternalMyBashParser.g:15145:3: ruleRegularExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondExpAccess().getRightRegularExpressionParserRuleCall_1_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondExpAccess().getRightRegularExpressionParserRuleCall_1_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondExp__RightAssignment_1_1_1_1_1"


    // $ANTLR start "rule__CondConst__ValueAssignment"
    // InternalMyBashParser.g:15154:1: rule__CondConst__ValueAssignment : ( ruleWord ) ;
    public final void rule__CondConst__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15158:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15159:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15159:2: ( ruleWord )
            // InternalMyBashParser.g:15160:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCondConstAccess().getValueWordParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCondConstAccess().getValueWordParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CondConst__ValueAssignment"


    // $ANTLR start "rule__RegularExpression__OpAssignment_1_1"
    // InternalMyBashParser.g:15169:1: rule__RegularExpression__OpAssignment_1_1 : ( ( VerticalLine ) ) ;
    public final void rule__RegularExpression__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15173:1: ( ( ( VerticalLine ) ) )
            // InternalMyBashParser.g:15174:2: ( ( VerticalLine ) )
            {
            // InternalMyBashParser.g:15174:2: ( ( VerticalLine ) )
            // InternalMyBashParser.g:15175:3: ( VerticalLine )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getOpVerticalLineKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:15176:3: ( VerticalLine )
            // InternalMyBashParser.g:15177:4: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getOpVerticalLineKeyword_1_1_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getOpVerticalLineKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getOpVerticalLineKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__OpAssignment_1_1"


    // $ANTLR start "rule__RegularExpression__RightAssignment_1_2"
    // InternalMyBashParser.g:15188:1: rule__RegularExpression__RightAssignment_1_2 : ( ruleRegularElements ) ;
    public final void rule__RegularExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15192:1: ( ( ruleRegularElements ) )
            // InternalMyBashParser.g:15193:2: ( ruleRegularElements )
            {
            // InternalMyBashParser.g:15193:2: ( ruleRegularElements )
            // InternalMyBashParser.g:15194:3: ruleRegularElements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getRightRegularElementsParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRegularElements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getRightRegularElementsParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularExpression__RightAssignment_1_2"


    // $ANTLR start "rule__RegularElements__PartsAssignment_1_0_1"
    // InternalMyBashParser.g:15203:1: rule__RegularElements__PartsAssignment_1_0_1 : ( ruleWord ) ;
    public final void rule__RegularElements__PartsAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15207:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15208:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15208:2: ( ruleWord )
            // InternalMyBashParser.g:15209:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getPartsWordParserRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getPartsWordParserRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__PartsAssignment_1_0_1"


    // $ANTLR start "rule__RegularElements__PartsAssignment_1_1"
    // InternalMyBashParser.g:15218:1: rule__RegularElements__PartsAssignment_1_1 : ( ruleWord ) ;
    public final void rule__RegularElements__PartsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15222:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15223:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15223:2: ( ruleWord )
            // InternalMyBashParser.g:15224:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularElementsAccess().getPartsWordParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularElementsAccess().getPartsWordParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RegularElements__PartsAssignment_1_1"


    // $ANTLR start "rule__IndexEvaluation__EndAssignment_1"
    // InternalMyBashParser.g:15233:1: rule__IndexEvaluation__EndAssignment_1 : ( ruleIndexEvaluationEnd ) ;
    public final void rule__IndexEvaluation__EndAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15237:1: ( ( ruleIndexEvaluationEnd ) )
            // InternalMyBashParser.g:15238:2: ( ruleIndexEvaluationEnd )
            {
            // InternalMyBashParser.g:15238:2: ( ruleIndexEvaluationEnd )
            // InternalMyBashParser.g:15239:3: ruleIndexEvaluationEnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationAccess().getEndIndexEvaluationEndParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIndexEvaluationEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationAccess().getEndIndexEvaluationEndParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluation__EndAssignment_1"


    // $ANTLR start "rule__IndexEvaluationStart__ExpressionAssignment_1"
    // InternalMyBashParser.g:15248:1: rule__IndexEvaluationStart__ExpressionAssignment_1 : ( ruleEvaluation ) ;
    public final void rule__IndexEvaluationStart__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15252:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:15253:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:15253:2: ( ruleEvaluation )
            // InternalMyBashParser.g:15254:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexEvaluationStartAccess().getExpressionEvaluationParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexEvaluationStartAccess().getExpressionEvaluationParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexEvaluationStart__ExpressionAssignment_1"


    // $ANTLR start "rule__ArithmeticExpansionStart__ExpressionAssignment_1"
    // InternalMyBashParser.g:15263:1: rule__ArithmeticExpansionStart__ExpressionAssignment_1 : ( ruleEvaluation ) ;
    public final void rule__ArithmeticExpansionStart__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15267:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:15268:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:15268:2: ( ruleEvaluation )
            // InternalMyBashParser.g:15269:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticExpansionStartAccess().getExpressionEvaluationParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticExpansionStartAccess().getExpressionEvaluationParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArithmeticExpansionStart__ExpressionAssignment_1"


    // $ANTLR start "rule__ParameterExpansion__EndAssignment_0_1"
    // InternalMyBashParser.g:15278:1: rule__ParameterExpansion__EndAssignment_0_1 : ( ruleParameterExpansionEnd ) ;
    public final void rule__ParameterExpansion__EndAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15282:1: ( ( ruleParameterExpansionEnd ) )
            // InternalMyBashParser.g:15283:2: ( ruleParameterExpansionEnd )
            {
            // InternalMyBashParser.g:15283:2: ( ruleParameterExpansionEnd )
            // InternalMyBashParser.g:15284:3: ruleParameterExpansionEnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getEndParameterExpansionEndParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterExpansionEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getEndParameterExpansionEndParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__EndAssignment_0_1"


    // $ANTLR start "rule__ParameterExpansion__RefAssignment_1_1"
    // InternalMyBashParser.g:15293:1: rule__ParameterExpansion__RefAssignment_1_1 : ( ( RULE_VARIABLE ) ) ;
    public final void rule__ParameterExpansion__RefAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15297:1: ( ( ( RULE_VARIABLE ) ) )
            // InternalMyBashParser.g:15298:2: ( ( RULE_VARIABLE ) )
            {
            // InternalMyBashParser.g:15298:2: ( ( RULE_VARIABLE ) )
            // InternalMyBashParser.g:15299:3: ( RULE_VARIABLE )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getRefAssignmentCrossReference_1_1_0()); 
            }
            // InternalMyBashParser.g:15300:3: ( RULE_VARIABLE )
            // InternalMyBashParser.g:15301:4: RULE_VARIABLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionAccess().getRefAssignmentVARIABLETerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_VARIABLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getRefAssignmentVARIABLETerminalRuleCall_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionAccess().getRefAssignmentCrossReference_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansion__RefAssignment_1_1"


    // $ANTLR start "rule__ParameterExpansionStart__HashAssignment_2"
    // InternalMyBashParser.g:15312:1: rule__ParameterExpansionStart__HashAssignment_2 : ( ( NumberSign ) ) ;
    public final void rule__ParameterExpansionStart__HashAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15316:1: ( ( ( NumberSign ) ) )
            // InternalMyBashParser.g:15317:2: ( ( NumberSign ) )
            {
            // InternalMyBashParser.g:15317:2: ( ( NumberSign ) )
            // InternalMyBashParser.g:15318:3: ( NumberSign )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getHashNumberSignKeyword_2_0()); 
            }
            // InternalMyBashParser.g:15319:3: ( NumberSign )
            // InternalMyBashParser.g:15320:4: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getHashNumberSignKeyword_2_0()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getHashNumberSignKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getHashNumberSignKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__HashAssignment_2"


    // $ANTLR start "rule__ParameterExpansionStart__RefAssignment_3_0"
    // InternalMyBashParser.g:15331:1: rule__ParameterExpansionStart__RefAssignment_3_0 : ( ( RULE_NAME ) ) ;
    public final void rule__ParameterExpansionStart__RefAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15335:1: ( ( ( RULE_NAME ) ) )
            // InternalMyBashParser.g:15336:2: ( ( RULE_NAME ) )
            {
            // InternalMyBashParser.g:15336:2: ( ( RULE_NAME ) )
            // InternalMyBashParser.g:15337:3: ( RULE_NAME )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getRefAssignmentCrossReference_3_0_0()); 
            }
            // InternalMyBashParser.g:15338:3: ( RULE_NAME )
            // InternalMyBashParser.g:15339:4: RULE_NAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getRefAssignmentNAMETerminalRuleCall_3_0_0_1()); 
            }
            match(input,RULE_NAME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getRefAssignmentNAMETerminalRuleCall_3_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getRefAssignmentCrossReference_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__RefAssignment_3_0"


    // $ANTLR start "rule__ParameterExpansionStart__ValueAssignment_3_1"
    // InternalMyBashParser.g:15350:1: rule__ParameterExpansionStart__ValueAssignment_3_1 : ( RULE_I_NUMBER ) ;
    public final void rule__ParameterExpansionStart__ValueAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15354:1: ( ( RULE_I_NUMBER ) )
            // InternalMyBashParser.g:15355:2: ( RULE_I_NUMBER )
            {
            // InternalMyBashParser.g:15355:2: ( RULE_I_NUMBER )
            // InternalMyBashParser.g:15356:3: RULE_I_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getValueI_NUMBERTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_I_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getValueI_NUMBERTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__ValueAssignment_3_1"


    // $ANTLR start "rule__ParameterExpansionStart__ValueAssignment_3_2"
    // InternalMyBashParser.g:15365:1: rule__ParameterExpansionStart__ValueAssignment_3_2 : ( ( QuestionMark ) ) ;
    public final void rule__ParameterExpansionStart__ValueAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15369:1: ( ( ( QuestionMark ) ) )
            // InternalMyBashParser.g:15370:2: ( ( QuestionMark ) )
            {
            // InternalMyBashParser.g:15370:2: ( ( QuestionMark ) )
            // InternalMyBashParser.g:15371:3: ( QuestionMark )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getValueQuestionMarkKeyword_3_2_0()); 
            }
            // InternalMyBashParser.g:15372:3: ( QuestionMark )
            // InternalMyBashParser.g:15373:4: QuestionMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getValueQuestionMarkKeyword_3_2_0()); 
            }
            match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getValueQuestionMarkKeyword_3_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getValueQuestionMarkKeyword_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__ValueAssignment_3_2"


    // $ANTLR start "rule__ParameterExpansionStart__ValueAssignment_3_3"
    // InternalMyBashParser.g:15384:1: rule__ParameterExpansionStart__ValueAssignment_3_3 : ( ( CommercialAt ) ) ;
    public final void rule__ParameterExpansionStart__ValueAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15388:1: ( ( ( CommercialAt ) ) )
            // InternalMyBashParser.g:15389:2: ( ( CommercialAt ) )
            {
            // InternalMyBashParser.g:15389:2: ( ( CommercialAt ) )
            // InternalMyBashParser.g:15390:3: ( CommercialAt )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getValueCommercialAtKeyword_3_3_0()); 
            }
            // InternalMyBashParser.g:15391:3: ( CommercialAt )
            // InternalMyBashParser.g:15392:4: CommercialAt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getValueCommercialAtKeyword_3_3_0()); 
            }
            match(input,CommercialAt,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getValueCommercialAtKeyword_3_3_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getValueCommercialAtKeyword_3_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__ValueAssignment_3_3"


    // $ANTLR start "rule__ParameterExpansionStart__ValueAssignment_3_4"
    // InternalMyBashParser.g:15403:1: rule__ParameterExpansionStart__ValueAssignment_3_4 : ( ( Asterisk ) ) ;
    public final void rule__ParameterExpansionStart__ValueAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15407:1: ( ( ( Asterisk ) ) )
            // InternalMyBashParser.g:15408:2: ( ( Asterisk ) )
            {
            // InternalMyBashParser.g:15408:2: ( ( Asterisk ) )
            // InternalMyBashParser.g:15409:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getValueAsteriskKeyword_3_4_0()); 
            }
            // InternalMyBashParser.g:15410:3: ( Asterisk )
            // InternalMyBashParser.g:15411:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getValueAsteriskKeyword_3_4_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getValueAsteriskKeyword_3_4_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getValueAsteriskKeyword_3_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__ValueAssignment_3_4"


    // $ANTLR start "rule__ParameterExpansionStart__IndexAssignment_4_1_2"
    // InternalMyBashParser.g:15422:1: rule__ParameterExpansionStart__IndexAssignment_4_1_2 : ( ruleEvaluation ) ;
    public final void rule__ParameterExpansionStart__IndexAssignment_4_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15426:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:15427:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:15427:2: ( ruleEvaluation )
            // InternalMyBashParser.g:15428:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getIndexEvaluationParserRuleCall_4_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getIndexEvaluationParserRuleCall_4_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__IndexAssignment_4_1_2"


    // $ANTLR start "rule__ParameterExpansionStart__ReplacerAssignment_5"
    // InternalMyBashParser.g:15437:1: rule__ParameterExpansionStart__ReplacerAssignment_5 : ( ruleParameterProcessor ) ;
    public final void rule__ParameterExpansionStart__ReplacerAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15441:1: ( ( ruleParameterProcessor ) )
            // InternalMyBashParser.g:15442:2: ( ruleParameterProcessor )
            {
            // InternalMyBashParser.g:15442:2: ( ruleParameterProcessor )
            // InternalMyBashParser.g:15443:3: ruleParameterProcessor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterExpansionStartAccess().getReplacerParameterProcessorParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterProcessor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterExpansionStartAccess().getReplacerParameterProcessorParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterExpansionStart__ReplacerAssignment_5"


    // $ANTLR start "rule__ParameterProcessor__OpAssignment_0_1"
    // InternalMyBashParser.g:15452:1: rule__ParameterProcessor__OpAssignment_0_1 : ( ruleFollowWordOp ) ;
    public final void rule__ParameterProcessor__OpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15456:1: ( ( ruleFollowWordOp ) )
            // InternalMyBashParser.g:15457:2: ( ruleFollowWordOp )
            {
            // InternalMyBashParser.g:15457:2: ( ruleFollowWordOp )
            // InternalMyBashParser.g:15458:3: ruleFollowWordOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOpFollowWordOpEnumRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFollowWordOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOpFollowWordOpEnumRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__OpAssignment_0_1"


    // $ANTLR start "rule__ParameterProcessor__WordAssignment_0_2"
    // InternalMyBashParser.g:15467:1: rule__ParameterProcessor__WordAssignment_0_2 : ( ruleWord ) ;
    public final void rule__ParameterProcessor__WordAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15471:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15472:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15472:2: ( ruleWord )
            // InternalMyBashParser.g:15473:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getWordWordParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getWordWordParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__WordAssignment_0_2"


    // $ANTLR start "rule__ParameterProcessor__OpAssignment_1_1"
    // InternalMyBashParser.g:15482:1: rule__ParameterProcessor__OpAssignment_1_1 : ( ( rule__ParameterProcessor__OpAlternatives_1_1_0 ) ) ;
    public final void rule__ParameterProcessor__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15486:1: ( ( ( rule__ParameterProcessor__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:15487:2: ( ( rule__ParameterProcessor__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:15487:2: ( ( rule__ParameterProcessor__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:15488:3: ( rule__ParameterProcessor__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:15489:3: ( rule__ParameterProcessor__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:15489:4: rule__ParameterProcessor__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__OpAssignment_1_1"


    // $ANTLR start "rule__ParameterProcessor__OriginalAssignment_1_2_0"
    // InternalMyBashParser.g:15497:1: rule__ParameterProcessor__OriginalAssignment_1_2_0 : ( ruleWord ) ;
    public final void rule__ParameterProcessor__OriginalAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15501:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15502:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15502:2: ( ruleWord )
            // InternalMyBashParser.g:15503:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOriginalWordParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOriginalWordParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__OriginalAssignment_1_2_0"


    // $ANTLR start "rule__ParameterProcessor__ReplaceAssignment_1_2_1_1"
    // InternalMyBashParser.g:15512:1: rule__ParameterProcessor__ReplaceAssignment_1_2_1_1 : ( ruleWord ) ;
    public final void rule__ParameterProcessor__ReplaceAssignment_1_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15516:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15517:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15517:2: ( ruleWord )
            // InternalMyBashParser.g:15518:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getReplaceWordParserRuleCall_1_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getReplaceWordParserRuleCall_1_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__ReplaceAssignment_1_2_1_1"


    // $ANTLR start "rule__ParameterProcessor__OpAssignment_2_1"
    // InternalMyBashParser.g:15527:1: rule__ParameterProcessor__OpAssignment_2_1 : ( ( rule__ParameterProcessor__OpAlternatives_2_1_0 ) ) ;
    public final void rule__ParameterProcessor__OpAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15531:1: ( ( ( rule__ParameterProcessor__OpAlternatives_2_1_0 ) ) )
            // InternalMyBashParser.g:15532:2: ( ( rule__ParameterProcessor__OpAlternatives_2_1_0 ) )
            {
            // InternalMyBashParser.g:15532:2: ( ( rule__ParameterProcessor__OpAlternatives_2_1_0 ) )
            // InternalMyBashParser.g:15533:3: ( rule__ParameterProcessor__OpAlternatives_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getOpAlternatives_2_1_0()); 
            }
            // InternalMyBashParser.g:15534:3: ( rule__ParameterProcessor__OpAlternatives_2_1_0 )
            // InternalMyBashParser.g:15534:4: rule__ParameterProcessor__OpAlternatives_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterProcessor__OpAlternatives_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getOpAlternatives_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__OpAssignment_2_1"


    // $ANTLR start "rule__ParameterProcessor__ReplaceAssignment_2_3"
    // InternalMyBashParser.g:15542:1: rule__ParameterProcessor__ReplaceAssignment_2_3 : ( ruleWord ) ;
    public final void rule__ParameterProcessor__ReplaceAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15546:1: ( ( ruleWord ) )
            // InternalMyBashParser.g:15547:2: ( ruleWord )
            {
            // InternalMyBashParser.g:15547:2: ( ruleWord )
            // InternalMyBashParser.g:15548:3: ruleWord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getReplaceWordParserRuleCall_2_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getReplaceWordParserRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__ReplaceAssignment_2_3"


    // $ANTLR start "rule__ParameterProcessor__StartAssignment_3_2_0"
    // InternalMyBashParser.g:15557:1: rule__ParameterProcessor__StartAssignment_3_2_0 : ( ruleEvaluation ) ;
    public final void rule__ParameterProcessor__StartAssignment_3_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15561:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:15562:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:15562:2: ( ruleEvaluation )
            // InternalMyBashParser.g:15563:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getStartEvaluationParserRuleCall_3_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getStartEvaluationParserRuleCall_3_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__StartAssignment_3_2_0"


    // $ANTLR start "rule__ParameterProcessor__LengthAssignment_3_2_1_1"
    // InternalMyBashParser.g:15572:1: rule__ParameterProcessor__LengthAssignment_3_2_1_1 : ( ruleEvaluation ) ;
    public final void rule__ParameterProcessor__LengthAssignment_3_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15576:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:15577:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:15577:2: ( ruleEvaluation )
            // InternalMyBashParser.g:15578:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getLengthEvaluationParserRuleCall_3_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getLengthEvaluationParserRuleCall_3_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__LengthAssignment_3_2_1_1"


    // $ANTLR start "rule__ParameterProcessor__LengthAssignment_4_3"
    // InternalMyBashParser.g:15587:1: rule__ParameterProcessor__LengthAssignment_4_3 : ( ruleEvaluation ) ;
    public final void rule__ParameterProcessor__LengthAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15591:1: ( ( ruleEvaluation ) )
            // InternalMyBashParser.g:15592:2: ( ruleEvaluation )
            {
            // InternalMyBashParser.g:15592:2: ( ruleEvaluation )
            // InternalMyBashParser.g:15593:3: ruleEvaluation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterProcessorAccess().getLengthEvaluationParserRuleCall_4_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvaluation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterProcessorAccess().getLengthEvaluationParserRuleCall_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterProcessor__LengthAssignment_4_3"


    // $ANTLR start "rule__CommandSubstitution__EndAssignment_1"
    // InternalMyBashParser.g:15602:1: rule__CommandSubstitution__EndAssignment_1 : ( ruleCommandSubstitutionStartEnd ) ;
    public final void rule__CommandSubstitution__EndAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15606:1: ( ( ruleCommandSubstitutionStartEnd ) )
            // InternalMyBashParser.g:15607:2: ( ruleCommandSubstitutionStartEnd )
            {
            // InternalMyBashParser.g:15607:2: ( ruleCommandSubstitutionStartEnd )
            // InternalMyBashParser.g:15608:3: ruleCommandSubstitutionStartEnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionAccess().getEndCommandSubstitutionStartEndParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCommandSubstitutionStartEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionAccess().getEndCommandSubstitutionStartEndParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitution__EndAssignment_1"


    // $ANTLR start "rule__CommandSubstitutionStart__CommandsAssignment_1"
    // InternalMyBashParser.g:15617:1: rule__CommandSubstitutionStart__CommandsAssignment_1 : ( ruleCompoundList ) ;
    public final void rule__CommandSubstitutionStart__CommandsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15621:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:15622:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:15622:2: ( ruleCompoundList )
            // InternalMyBashParser.g:15623:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommandSubstitutionStartAccess().getCommandsCompoundListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommandSubstitutionStartAccess().getCommandsCompoundListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommandSubstitutionStart__CommandsAssignment_1"


    // $ANTLR start "rule__ProcessSubstitution__EndAssignment_1"
    // InternalMyBashParser.g:15632:1: rule__ProcessSubstitution__EndAssignment_1 : ( ruleProcessSubstitutionEnd ) ;
    public final void rule__ProcessSubstitution__EndAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15636:1: ( ( ruleProcessSubstitutionEnd ) )
            // InternalMyBashParser.g:15637:2: ( ruleProcessSubstitutionEnd )
            {
            // InternalMyBashParser.g:15637:2: ( ruleProcessSubstitutionEnd )
            // InternalMyBashParser.g:15638:3: ruleProcessSubstitutionEnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionAccess().getEndProcessSubstitutionEndParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleProcessSubstitutionEnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionAccess().getEndProcessSubstitutionEndParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitution__EndAssignment_1"


    // $ANTLR start "rule__ProcessSubstitutionStart__OpAssignment_0"
    // InternalMyBashParser.g:15647:1: rule__ProcessSubstitutionStart__OpAssignment_0 : ( ( rule__ProcessSubstitutionStart__OpAlternatives_0_0 ) ) ;
    public final void rule__ProcessSubstitutionStart__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15651:1: ( ( ( rule__ProcessSubstitutionStart__OpAlternatives_0_0 ) ) )
            // InternalMyBashParser.g:15652:2: ( ( rule__ProcessSubstitutionStart__OpAlternatives_0_0 ) )
            {
            // InternalMyBashParser.g:15652:2: ( ( rule__ProcessSubstitutionStart__OpAlternatives_0_0 ) )
            // InternalMyBashParser.g:15653:3: ( rule__ProcessSubstitutionStart__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionStartAccess().getOpAlternatives_0_0()); 
            }
            // InternalMyBashParser.g:15654:3: ( rule__ProcessSubstitutionStart__OpAlternatives_0_0 )
            // InternalMyBashParser.g:15654:4: rule__ProcessSubstitutionStart__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ProcessSubstitutionStart__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionStartAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitutionStart__OpAssignment_0"


    // $ANTLR start "rule__ProcessSubstitutionStart__BodyAssignment_1"
    // InternalMyBashParser.g:15662:1: rule__ProcessSubstitutionStart__BodyAssignment_1 : ( ruleCompoundList ) ;
    public final void rule__ProcessSubstitutionStart__BodyAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15666:1: ( ( ruleCompoundList ) )
            // InternalMyBashParser.g:15667:2: ( ruleCompoundList )
            {
            // InternalMyBashParser.g:15667:2: ( ruleCompoundList )
            // InternalMyBashParser.g:15668:3: ruleCompoundList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessSubstitutionStartAccess().getBodyCompoundListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompoundList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessSubstitutionStartAccess().getBodyCompoundListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessSubstitutionStart__BodyAssignment_1"


    // $ANTLR start "rule__Evaluation__OpAssignment_1_1"
    // InternalMyBashParser.g:15677:1: rule__Evaluation__OpAssignment_1_1 : ( ( Comma ) ) ;
    public final void rule__Evaluation__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15681:1: ( ( ( Comma ) ) )
            // InternalMyBashParser.g:15682:2: ( ( Comma ) )
            {
            // InternalMyBashParser.g:15682:2: ( ( Comma ) )
            // InternalMyBashParser.g:15683:3: ( Comma )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getOpCommaKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:15684:3: ( Comma )
            // InternalMyBashParser.g:15685:4: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getOpCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getOpCommaKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getOpCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__OpAssignment_1_1"


    // $ANTLR start "rule__Evaluation__RightAssignment_1_2"
    // InternalMyBashParser.g:15696:1: rule__Evaluation__RightAssignment_1_2 : ( ruleArithmetic ) ;
    public final void rule__Evaluation__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15700:1: ( ( ruleArithmetic ) )
            // InternalMyBashParser.g:15701:2: ( ruleArithmetic )
            {
            // InternalMyBashParser.g:15701:2: ( ruleArithmetic )
            // InternalMyBashParser.g:15702:3: ruleArithmetic
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEvaluationAccess().getRightArithmeticParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArithmetic();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEvaluationAccess().getRightArithmeticParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Evaluation__RightAssignment_1_2"


    // $ANTLR start "rule__Arithmetic__LeftAssignment_0_1"
    // InternalMyBashParser.g:15711:1: rule__Arithmetic__LeftAssignment_0_1 : ( ruleVariableId ) ;
    public final void rule__Arithmetic__LeftAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15715:1: ( ( ruleVariableId ) )
            // InternalMyBashParser.g:15716:2: ( ruleVariableId )
            {
            // InternalMyBashParser.g:15716:2: ( ruleVariableId )
            // InternalMyBashParser.g:15717:3: ruleVariableId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getLeftVariableIdParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVariableId();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getLeftVariableIdParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__LeftAssignment_0_1"


    // $ANTLR start "rule__Arithmetic__OpAssignment_0_2"
    // InternalMyBashParser.g:15726:1: rule__Arithmetic__OpAssignment_0_2 : ( ( rule__Arithmetic__OpAlternatives_0_2_0 ) ) ;
    public final void rule__Arithmetic__OpAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15730:1: ( ( ( rule__Arithmetic__OpAlternatives_0_2_0 ) ) )
            // InternalMyBashParser.g:15731:2: ( ( rule__Arithmetic__OpAlternatives_0_2_0 ) )
            {
            // InternalMyBashParser.g:15731:2: ( ( rule__Arithmetic__OpAlternatives_0_2_0 ) )
            // InternalMyBashParser.g:15732:3: ( rule__Arithmetic__OpAlternatives_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getOpAlternatives_0_2_0()); 
            }
            // InternalMyBashParser.g:15733:3: ( rule__Arithmetic__OpAlternatives_0_2_0 )
            // InternalMyBashParser.g:15733:4: rule__Arithmetic__OpAlternatives_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__Arithmetic__OpAlternatives_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getOpAlternatives_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__OpAssignment_0_2"


    // $ANTLR start "rule__Arithmetic__RightAssignment_0_3"
    // InternalMyBashParser.g:15741:1: rule__Arithmetic__RightAssignment_0_3 : ( ruleArithmetic ) ;
    public final void rule__Arithmetic__RightAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15745:1: ( ( ruleArithmetic ) )
            // InternalMyBashParser.g:15746:2: ( ruleArithmetic )
            {
            // InternalMyBashParser.g:15746:2: ( ruleArithmetic )
            // InternalMyBashParser.g:15747:3: ruleArithmetic
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArithmeticAccess().getRightArithmeticParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArithmetic();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArithmeticAccess().getRightArithmeticParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arithmetic__RightAssignment_0_3"


    // $ANTLR start "rule__ConditionalOperator__FirstAssignment_1_2"
    // InternalMyBashParser.g:15756:1: rule__ConditionalOperator__FirstAssignment_1_2 : ( ruleConditionalOperator ) ;
    public final void rule__ConditionalOperator__FirstAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15760:1: ( ( ruleConditionalOperator ) )
            // InternalMyBashParser.g:15761:2: ( ruleConditionalOperator )
            {
            // InternalMyBashParser.g:15761:2: ( ruleConditionalOperator )
            // InternalMyBashParser.g:15762:3: ruleConditionalOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getFirstConditionalOperatorParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleConditionalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getFirstConditionalOperatorParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__FirstAssignment_1_2"


    // $ANTLR start "rule__ConditionalOperator__RightAssignment_1_4"
    // InternalMyBashParser.g:15771:1: rule__ConditionalOperator__RightAssignment_1_4 : ( ruleConditionalOperator ) ;
    public final void rule__ConditionalOperator__RightAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15775:1: ( ( ruleConditionalOperator ) )
            // InternalMyBashParser.g:15776:2: ( ruleConditionalOperator )
            {
            // InternalMyBashParser.g:15776:2: ( ruleConditionalOperator )
            // InternalMyBashParser.g:15777:3: ruleConditionalOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getRightConditionalOperatorParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleConditionalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getRightConditionalOperatorParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionalOperator__RightAssignment_1_4"


    // $ANTLR start "rule__LogicOr__OpAssignment_1_1"
    // InternalMyBashParser.g:15786:1: rule__LogicOr__OpAssignment_1_1 : ( ( VerticalLineVerticalLine ) ) ;
    public final void rule__LogicOr__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15790:1: ( ( ( VerticalLineVerticalLine ) ) )
            // InternalMyBashParser.g:15791:2: ( ( VerticalLineVerticalLine ) )
            {
            // InternalMyBashParser.g:15791:2: ( ( VerticalLineVerticalLine ) )
            // InternalMyBashParser.g:15792:3: ( VerticalLineVerticalLine )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:15793:3: ( VerticalLineVerticalLine )
            // InternalMyBashParser.g:15794:4: VerticalLineVerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__OpAssignment_1_1"


    // $ANTLR start "rule__LogicOr__RightAssignment_1_2"
    // InternalMyBashParser.g:15805:1: rule__LogicOr__RightAssignment_1_2 : ( ruleLogicAnd ) ;
    public final void rule__LogicOr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15809:1: ( ( ruleLogicAnd ) )
            // InternalMyBashParser.g:15810:2: ( ruleLogicAnd )
            {
            // InternalMyBashParser.g:15810:2: ( ruleLogicAnd )
            // InternalMyBashParser.g:15811:3: ruleLogicAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicOrAccess().getRightLogicAndParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicOrAccess().getRightLogicAndParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicOr__RightAssignment_1_2"


    // $ANTLR start "rule__LogicAnd__OpAssignment_1_1"
    // InternalMyBashParser.g:15820:1: rule__LogicAnd__OpAssignment_1_1 : ( ( AmpersandAmpersand ) ) ;
    public final void rule__LogicAnd__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15824:1: ( ( ( AmpersandAmpersand ) ) )
            // InternalMyBashParser.g:15825:2: ( ( AmpersandAmpersand ) )
            {
            // InternalMyBashParser.g:15825:2: ( ( AmpersandAmpersand ) )
            // InternalMyBashParser.g:15826:3: ( AmpersandAmpersand )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:15827:3: ( AmpersandAmpersand )
            // InternalMyBashParser.g:15828:4: AmpersandAmpersand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__OpAssignment_1_1"


    // $ANTLR start "rule__LogicAnd__RightAssignment_1_2"
    // InternalMyBashParser.g:15839:1: rule__LogicAnd__RightAssignment_1_2 : ( ruleBitwiseOR ) ;
    public final void rule__LogicAnd__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15843:1: ( ( ruleBitwiseOR ) )
            // InternalMyBashParser.g:15844:2: ( ruleBitwiseOR )
            {
            // InternalMyBashParser.g:15844:2: ( ruleBitwiseOR )
            // InternalMyBashParser.g:15845:3: ruleBitwiseOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicAndAccess().getRightBitwiseORParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicAndAccess().getRightBitwiseORParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicAnd__RightAssignment_1_2"


    // $ANTLR start "rule__BitwiseOR__OpAssignment_1_1"
    // InternalMyBashParser.g:15854:1: rule__BitwiseOR__OpAssignment_1_1 : ( ( VerticalLine ) ) ;
    public final void rule__BitwiseOR__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15858:1: ( ( ( VerticalLine ) ) )
            // InternalMyBashParser.g:15859:2: ( ( VerticalLine ) )
            {
            // InternalMyBashParser.g:15859:2: ( ( VerticalLine ) )
            // InternalMyBashParser.g:15860:3: ( VerticalLine )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getOpVerticalLineKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:15861:3: ( VerticalLine )
            // InternalMyBashParser.g:15862:4: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getOpVerticalLineKeyword_1_1_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getOpVerticalLineKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getOpVerticalLineKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__OpAssignment_1_1"


    // $ANTLR start "rule__BitwiseOR__RightAssignment_1_2"
    // InternalMyBashParser.g:15873:1: rule__BitwiseOR__RightAssignment_1_2 : ( ruleBitwiseExclusiveOR ) ;
    public final void rule__BitwiseOR__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15877:1: ( ( ruleBitwiseExclusiveOR ) )
            // InternalMyBashParser.g:15878:2: ( ruleBitwiseExclusiveOR )
            {
            // InternalMyBashParser.g:15878:2: ( ruleBitwiseExclusiveOR )
            // InternalMyBashParser.g:15879:3: ruleBitwiseExclusiveOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseORAccess().getRightBitwiseExclusiveORParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseExclusiveOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseORAccess().getRightBitwiseExclusiveORParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOR__RightAssignment_1_2"


    // $ANTLR start "rule__BitwiseExclusiveOR__OpAssignment_1_1"
    // InternalMyBashParser.g:15888:1: rule__BitwiseExclusiveOR__OpAssignment_1_1 : ( ( CircumflexAccent ) ) ;
    public final void rule__BitwiseExclusiveOR__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15892:1: ( ( ( CircumflexAccent ) ) )
            // InternalMyBashParser.g:15893:2: ( ( CircumflexAccent ) )
            {
            // InternalMyBashParser.g:15893:2: ( ( CircumflexAccent ) )
            // InternalMyBashParser.g:15894:3: ( CircumflexAccent )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:15895:3: ( CircumflexAccent )
            // InternalMyBashParser.g:15896:4: CircumflexAccent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            }
            match(input,CircumflexAccent,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__OpAssignment_1_1"


    // $ANTLR start "rule__BitwiseExclusiveOR__RightAssignment_1_2"
    // InternalMyBashParser.g:15907:1: rule__BitwiseExclusiveOR__RightAssignment_1_2 : ( ruleBitwiseAND ) ;
    public final void rule__BitwiseExclusiveOR__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15911:1: ( ( ruleBitwiseAND ) )
            // InternalMyBashParser.g:15912:2: ( ruleBitwiseAND )
            {
            // InternalMyBashParser.g:15912:2: ( ruleBitwiseAND )
            // InternalMyBashParser.g:15913:3: ruleBitwiseAND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseExclusiveORAccess().getRightBitwiseANDParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseAND();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseExclusiveORAccess().getRightBitwiseANDParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseExclusiveOR__RightAssignment_1_2"


    // $ANTLR start "rule__BitwiseAND__OpAssignment_1_1"
    // InternalMyBashParser.g:15922:1: rule__BitwiseAND__OpAssignment_1_1 : ( ( Ampersand ) ) ;
    public final void rule__BitwiseAND__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15926:1: ( ( ( Ampersand ) ) )
            // InternalMyBashParser.g:15927:2: ( ( Ampersand ) )
            {
            // InternalMyBashParser.g:15927:2: ( ( Ampersand ) )
            // InternalMyBashParser.g:15928:3: ( Ampersand )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getOpAmpersandKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:15929:3: ( Ampersand )
            // InternalMyBashParser.g:15930:4: Ampersand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getOpAmpersandKeyword_1_1_0()); 
            }
            match(input,Ampersand,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getOpAmpersandKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getOpAmpersandKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__OpAssignment_1_1"


    // $ANTLR start "rule__BitwiseAND__RightAssignment_1_2"
    // InternalMyBashParser.g:15941:1: rule__BitwiseAND__RightAssignment_1_2 : ( ruleEqualityAndInequality ) ;
    public final void rule__BitwiseAND__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15945:1: ( ( ruleEqualityAndInequality ) )
            // InternalMyBashParser.g:15946:2: ( ruleEqualityAndInequality )
            {
            // InternalMyBashParser.g:15946:2: ( ruleEqualityAndInequality )
            // InternalMyBashParser.g:15947:3: ruleEqualityAndInequality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseANDAccess().getRightEqualityAndInequalityParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityAndInequality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseANDAccess().getRightEqualityAndInequalityParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAND__RightAssignment_1_2"


    // $ANTLR start "rule__EqualityAndInequality__OpAssignment_1_1"
    // InternalMyBashParser.g:15956:1: rule__EqualityAndInequality__OpAssignment_1_1 : ( ( rule__EqualityAndInequality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__EqualityAndInequality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15960:1: ( ( ( rule__EqualityAndInequality__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:15961:2: ( ( rule__EqualityAndInequality__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:15961:2: ( ( rule__EqualityAndInequality__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:15962:3: ( rule__EqualityAndInequality__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:15963:3: ( rule__EqualityAndInequality__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:15963:4: rule__EqualityAndInequality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__EqualityAndInequality__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__OpAssignment_1_1"


    // $ANTLR start "rule__EqualityAndInequality__RightAssignment_1_2"
    // InternalMyBashParser.g:15971:1: rule__EqualityAndInequality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__EqualityAndInequality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15975:1: ( ( ruleComparison ) )
            // InternalMyBashParser.g:15976:2: ( ruleComparison )
            {
            // InternalMyBashParser.g:15976:2: ( ruleComparison )
            // InternalMyBashParser.g:15977:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAndInequalityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAndInequalityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityAndInequality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalMyBashParser.g:15986:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:15990:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:15991:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:15991:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:15992:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:15993:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:15993:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalMyBashParser.g:16001:1: rule__Comparison__RightAssignment_1_2 : ( ruleBitwiseShifts ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16005:1: ( ( ruleBitwiseShifts ) )
            // InternalMyBashParser.g:16006:2: ( ruleBitwiseShifts )
            {
            // InternalMyBashParser.g:16006:2: ( ruleBitwiseShifts )
            // InternalMyBashParser.g:16007:3: ruleBitwiseShifts
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightBitwiseShiftsParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitwiseShifts();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightBitwiseShiftsParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__BitwiseShifts__OpAssignment_1_1"
    // InternalMyBashParser.g:16016:1: rule__BitwiseShifts__OpAssignment_1_1 : ( ( rule__BitwiseShifts__OpAlternatives_1_1_0 ) ) ;
    public final void rule__BitwiseShifts__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16020:1: ( ( ( rule__BitwiseShifts__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:16021:2: ( ( rule__BitwiseShifts__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:16021:2: ( ( rule__BitwiseShifts__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:16022:3: ( rule__BitwiseShifts__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:16023:3: ( rule__BitwiseShifts__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:16023:4: rule__BitwiseShifts__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__BitwiseShifts__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__OpAssignment_1_1"


    // $ANTLR start "rule__BitwiseShifts__RightAssignment_1_2"
    // InternalMyBashParser.g:16031:1: rule__BitwiseShifts__RightAssignment_1_2 : ( ruleAdditionSubtraction ) ;
    public final void rule__BitwiseShifts__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16035:1: ( ( ruleAdditionSubtraction ) )
            // InternalMyBashParser.g:16036:2: ( ruleAdditionSubtraction )
            {
            // InternalMyBashParser.g:16036:2: ( ruleAdditionSubtraction )
            // InternalMyBashParser.g:16037:3: ruleAdditionSubtraction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseShiftsAccess().getRightAdditionSubtractionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAdditionSubtraction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseShiftsAccess().getRightAdditionSubtractionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseShifts__RightAssignment_1_2"


    // $ANTLR start "rule__AdditionSubtraction__OpAssignment_1_1"
    // InternalMyBashParser.g:16046:1: rule__AdditionSubtraction__OpAssignment_1_1 : ( ( rule__AdditionSubtraction__OpAlternatives_1_1_0 ) ) ;
    public final void rule__AdditionSubtraction__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16050:1: ( ( ( rule__AdditionSubtraction__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:16051:2: ( ( rule__AdditionSubtraction__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:16051:2: ( ( rule__AdditionSubtraction__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:16052:3: ( rule__AdditionSubtraction__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:16053:3: ( rule__AdditionSubtraction__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:16053:4: rule__AdditionSubtraction__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AdditionSubtraction__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__OpAssignment_1_1"


    // $ANTLR start "rule__AdditionSubtraction__RightAssignment_1_2"
    // InternalMyBashParser.g:16061:1: rule__AdditionSubtraction__RightAssignment_1_2 : ( ruleMultiplicationDivisionRemainder ) ;
    public final void rule__AdditionSubtraction__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16065:1: ( ( ruleMultiplicationDivisionRemainder ) )
            // InternalMyBashParser.g:16066:2: ( ruleMultiplicationDivisionRemainder )
            {
            // InternalMyBashParser.g:16066:2: ( ruleMultiplicationDivisionRemainder )
            // InternalMyBashParser.g:16067:3: ruleMultiplicationDivisionRemainder
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionSubtractionAccess().getRightMultiplicationDivisionRemainderParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiplicationDivisionRemainder();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionSubtractionAccess().getRightMultiplicationDivisionRemainderParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditionSubtraction__RightAssignment_1_2"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__OpAssignment_1_1"
    // InternalMyBashParser.g:16076:1: rule__MultiplicationDivisionRemainder__OpAssignment_1_1 : ( ( rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0 ) ) ;
    public final void rule__MultiplicationDivisionRemainder__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16080:1: ( ( ( rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:16081:2: ( ( rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:16081:2: ( ( rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:16082:3: ( rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:16083:3: ( rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:16083:4: rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicationDivisionRemainder__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__OpAssignment_1_1"


    // $ANTLR start "rule__MultiplicationDivisionRemainder__RightAssignment_1_2"
    // InternalMyBashParser.g:16091:1: rule__MultiplicationDivisionRemainder__RightAssignment_1_2 : ( ruleExponentiation ) ;
    public final void rule__MultiplicationDivisionRemainder__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16095:1: ( ( ruleExponentiation ) )
            // InternalMyBashParser.g:16096:2: ( ruleExponentiation )
            {
            // InternalMyBashParser.g:16096:2: ( ruleExponentiation )
            // InternalMyBashParser.g:16097:3: ruleExponentiation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationDivisionRemainderAccess().getRightExponentiationParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExponentiation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationDivisionRemainderAccess().getRightExponentiationParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicationDivisionRemainder__RightAssignment_1_2"


    // $ANTLR start "rule__Exponentiation__OpAssignment_1_1"
    // InternalMyBashParser.g:16106:1: rule__Exponentiation__OpAssignment_1_1 : ( ( AsteriskAsterisk ) ) ;
    public final void rule__Exponentiation__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16110:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalMyBashParser.g:16111:2: ( ( AsteriskAsterisk ) )
            {
            // InternalMyBashParser.g:16111:2: ( ( AsteriskAsterisk ) )
            // InternalMyBashParser.g:16112:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getOpAsteriskAsteriskKeyword_1_1_0()); 
            }
            // InternalMyBashParser.g:16113:3: ( AsteriskAsterisk )
            // InternalMyBashParser.g:16114:4: AsteriskAsterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getOpAsteriskAsteriskKeyword_1_1_0()); 
            }
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getOpAsteriskAsteriskKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getOpAsteriskAsteriskKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__OpAssignment_1_1"


    // $ANTLR start "rule__Exponentiation__RightAssignment_1_2"
    // InternalMyBashParser.g:16125:1: rule__Exponentiation__RightAssignment_1_2 : ( ruleExponentiation ) ;
    public final void rule__Exponentiation__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16129:1: ( ( ruleExponentiation ) )
            // InternalMyBashParser.g:16130:2: ( ruleExponentiation )
            {
            // InternalMyBashParser.g:16130:2: ( ruleExponentiation )
            // InternalMyBashParser.g:16131:3: ruleExponentiation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExponentiationAccess().getRightExponentiationParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExponentiation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExponentiationAccess().getRightExponentiationParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exponentiation__RightAssignment_1_2"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__OpAssignment_0_1"
    // InternalMyBashParser.g:16140:1: rule__LogicalAndBitwiseNegation__OpAssignment_0_1 : ( ( rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0 ) ) ;
    public final void rule__LogicalAndBitwiseNegation__OpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16144:1: ( ( ( rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0 ) ) )
            // InternalMyBashParser.g:16145:2: ( ( rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0 ) )
            {
            // InternalMyBashParser.g:16145:2: ( ( rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0 ) )
            // InternalMyBashParser.g:16146:3: ( rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpAlternatives_0_1_0()); 
            }
            // InternalMyBashParser.g:16147:3: ( rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0 )
            // InternalMyBashParser.g:16147:4: rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndBitwiseNegation__OpAlternatives_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndBitwiseNegationAccess().getOpAlternatives_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__OpAssignment_0_1"


    // $ANTLR start "rule__LogicalAndBitwiseNegation__OperandAssignment_0_2"
    // InternalMyBashParser.g:16155:1: rule__LogicalAndBitwiseNegation__OperandAssignment_0_2 : ( ruleLogicalAndBitwiseNegation ) ;
    public final void rule__LogicalAndBitwiseNegation__OperandAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16159:1: ( ( ruleLogicalAndBitwiseNegation ) )
            // InternalMyBashParser.g:16160:2: ( ruleLogicalAndBitwiseNegation )
            {
            // InternalMyBashParser.g:16160:2: ( ruleLogicalAndBitwiseNegation )
            // InternalMyBashParser.g:16161:3: ruleLogicalAndBitwiseNegation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndBitwiseNegationAccess().getOperandLogicalAndBitwiseNegationParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicalAndBitwiseNegation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndBitwiseNegationAccess().getOperandLogicalAndBitwiseNegationParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndBitwiseNegation__OperandAssignment_0_2"


    // $ANTLR start "rule__UnaryMinusAndPlus__OpAssignment_0_1"
    // InternalMyBashParser.g:16170:1: rule__UnaryMinusAndPlus__OpAssignment_0_1 : ( ( rule__UnaryMinusAndPlus__OpAlternatives_0_1_0 ) ) ;
    public final void rule__UnaryMinusAndPlus__OpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16174:1: ( ( ( rule__UnaryMinusAndPlus__OpAlternatives_0_1_0 ) ) )
            // InternalMyBashParser.g:16175:2: ( ( rule__UnaryMinusAndPlus__OpAlternatives_0_1_0 ) )
            {
            // InternalMyBashParser.g:16175:2: ( ( rule__UnaryMinusAndPlus__OpAlternatives_0_1_0 ) )
            // InternalMyBashParser.g:16176:3: ( rule__UnaryMinusAndPlus__OpAlternatives_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryMinusAndPlusAccess().getOpAlternatives_0_1_0()); 
            }
            // InternalMyBashParser.g:16177:3: ( rule__UnaryMinusAndPlus__OpAlternatives_0_1_0 )
            // InternalMyBashParser.g:16177:4: rule__UnaryMinusAndPlus__OpAlternatives_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryMinusAndPlus__OpAlternatives_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryMinusAndPlusAccess().getOpAlternatives_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__OpAssignment_0_1"


    // $ANTLR start "rule__UnaryMinusAndPlus__OperandAssignment_0_2"
    // InternalMyBashParser.g:16185:1: rule__UnaryMinusAndPlus__OperandAssignment_0_2 : ( ruleUnaryMinusAndPlus ) ;
    public final void rule__UnaryMinusAndPlus__OperandAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16189:1: ( ( ruleUnaryMinusAndPlus ) )
            // InternalMyBashParser.g:16190:2: ( ruleUnaryMinusAndPlus )
            {
            // InternalMyBashParser.g:16190:2: ( ruleUnaryMinusAndPlus )
            // InternalMyBashParser.g:16191:3: ruleUnaryMinusAndPlus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryMinusAndPlusAccess().getOperandUnaryMinusAndPlusParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryMinusAndPlus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryMinusAndPlusAccess().getOperandUnaryMinusAndPlusParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryMinusAndPlus__OperandAssignment_0_2"


    // $ANTLR start "rule__PreDecrement__OpAssignment_0_1"
    // InternalMyBashParser.g:16200:1: rule__PreDecrement__OpAssignment_0_1 : ( ( rule__PreDecrement__OpAlternatives_0_1_0 ) ) ;
    public final void rule__PreDecrement__OpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16204:1: ( ( ( rule__PreDecrement__OpAlternatives_0_1_0 ) ) )
            // InternalMyBashParser.g:16205:2: ( ( rule__PreDecrement__OpAlternatives_0_1_0 ) )
            {
            // InternalMyBashParser.g:16205:2: ( ( rule__PreDecrement__OpAlternatives_0_1_0 ) )
            // InternalMyBashParser.g:16206:3: ( rule__PreDecrement__OpAlternatives_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreDecrementAccess().getOpAlternatives_0_1_0()); 
            }
            // InternalMyBashParser.g:16207:3: ( rule__PreDecrement__OpAlternatives_0_1_0 )
            // InternalMyBashParser.g:16207:4: rule__PreDecrement__OpAlternatives_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PreDecrement__OpAlternatives_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreDecrementAccess().getOpAlternatives_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__OpAssignment_0_1"


    // $ANTLR start "rule__PreDecrement__OperandAssignment_0_2"
    // InternalMyBashParser.g:16215:1: rule__PreDecrement__OperandAssignment_0_2 : ( rulePostDecrement ) ;
    public final void rule__PreDecrement__OperandAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16219:1: ( ( rulePostDecrement ) )
            // InternalMyBashParser.g:16220:2: ( rulePostDecrement )
            {
            // InternalMyBashParser.g:16220:2: ( rulePostDecrement )
            // InternalMyBashParser.g:16221:3: rulePostDecrement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreDecrementAccess().getOperandPostDecrementParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePostDecrement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreDecrementAccess().getOperandPostDecrementParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreDecrement__OperandAssignment_0_2"


    // $ANTLR start "rule__PostDecrement__OpAssignment_1_1"
    // InternalMyBashParser.g:16230:1: rule__PostDecrement__OpAssignment_1_1 : ( ( rule__PostDecrement__OpAlternatives_1_1_0 ) ) ;
    public final void rule__PostDecrement__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16234:1: ( ( ( rule__PostDecrement__OpAlternatives_1_1_0 ) ) )
            // InternalMyBashParser.g:16235:2: ( ( rule__PostDecrement__OpAlternatives_1_1_0 ) )
            {
            // InternalMyBashParser.g:16235:2: ( ( rule__PostDecrement__OpAlternatives_1_1_0 ) )
            // InternalMyBashParser.g:16236:3: ( rule__PostDecrement__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostDecrementAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMyBashParser.g:16237:3: ( rule__PostDecrement__OpAlternatives_1_1_0 )
            // InternalMyBashParser.g:16237:4: rule__PostDecrement__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PostDecrement__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostDecrementAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostDecrement__OpAssignment_1_1"


    // $ANTLR start "rule__PrimaryItem__PrefixAssignment_0_1"
    // InternalMyBashParser.g:16245:1: rule__PrimaryItem__PrefixAssignment_0_1 : ( RULE_A_PREFIX ) ;
    public final void rule__PrimaryItem__PrefixAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16249:1: ( ( RULE_A_PREFIX ) )
            // InternalMyBashParser.g:16250:2: ( RULE_A_PREFIX )
            {
            // InternalMyBashParser.g:16250:2: ( RULE_A_PREFIX )
            // InternalMyBashParser.g:16251:3: RULE_A_PREFIX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getPrefixA_PREFIXTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_A_PREFIX,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getPrefixA_PREFIXTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__PrefixAssignment_0_1"


    // $ANTLR start "rule__PrimaryItem__ValueAssignment_0_2"
    // InternalMyBashParser.g:16260:1: rule__PrimaryItem__ValueAssignment_0_2 : ( RULE_I_NUMBER ) ;
    public final void rule__PrimaryItem__ValueAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16264:1: ( ( RULE_I_NUMBER ) )
            // InternalMyBashParser.g:16265:2: ( RULE_I_NUMBER )
            {
            // InternalMyBashParser.g:16265:2: ( RULE_I_NUMBER )
            // InternalMyBashParser.g:16266:3: RULE_I_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getValueI_NUMBERTerminalRuleCall_0_2_0()); 
            }
            match(input,RULE_I_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getValueI_NUMBERTerminalRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__ValueAssignment_0_2"


    // $ANTLR start "rule__PrimaryItem__PrefixAssignment_2_1"
    // InternalMyBashParser.g:16275:1: rule__PrimaryItem__PrefixAssignment_2_1 : ( RULE_A_PREFIX ) ;
    public final void rule__PrimaryItem__PrefixAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16279:1: ( ( RULE_A_PREFIX ) )
            // InternalMyBashParser.g:16280:2: ( RULE_A_PREFIX )
            {
            // InternalMyBashParser.g:16280:2: ( RULE_A_PREFIX )
            // InternalMyBashParser.g:16281:3: RULE_A_PREFIX
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getPrefixA_PREFIXTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_A_PREFIX,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getPrefixA_PREFIXTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__PrefixAssignment_2_1"


    // $ANTLR start "rule__PrimaryItem__ValueAssignment_2_2"
    // InternalMyBashParser.g:16290:1: rule__PrimaryItem__ValueAssignment_2_2 : ( ruleExpansion ) ;
    public final void rule__PrimaryItem__ValueAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16294:1: ( ( ruleExpansion ) )
            // InternalMyBashParser.g:16295:2: ( ruleExpansion )
            {
            // InternalMyBashParser.g:16295:2: ( ruleExpansion )
            // InternalMyBashParser.g:16296:3: ruleExpansion
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryItemAccess().getValueExpansionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpansion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryItemAccess().getValueExpansionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryItem__ValueAssignment_2_2"


    // $ANTLR start "rule__VariableId__RefAssignment_1"
    // InternalMyBashParser.g:16305:1: rule__VariableId__RefAssignment_1 : ( ( RULE_NAME ) ) ;
    public final void rule__VariableId__RefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMyBashParser.g:16309:1: ( ( ( RULE_NAME ) ) )
            // InternalMyBashParser.g:16310:2: ( ( RULE_NAME ) )
            {
            // InternalMyBashParser.g:16310:2: ( ( RULE_NAME ) )
            // InternalMyBashParser.g:16311:3: ( RULE_NAME )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableIdAccess().getRefAssignmentCrossReference_1_0()); 
            }
            // InternalMyBashParser.g:16312:3: ( RULE_NAME )
            // InternalMyBashParser.g:16313:4: RULE_NAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableIdAccess().getRefAssignmentNAMETerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_NAME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableIdAccess().getRefAssignmentNAMETerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableIdAccess().getRefAssignmentCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableId__RefAssignment_1"

    // $ANTLR start synpred1_InternalMyBashParser
    public final void synpred1_InternalMyBashParser_fragment() throws RecognitionException {   
        // InternalMyBashParser.g:982:5: ( rule__Words__ElementsAssignment )
        // InternalMyBashParser.g:982:5: rule__Words__ElementsAssignment
        {
        pushFollow(FOLLOW_2);
        rule__Words__ElementsAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalMyBashParser

    // $ANTLR start synpred49_InternalMyBashParser
    public final void synpred49_InternalMyBashParser_fragment() throws RecognitionException {   
        // InternalMyBashParser.g:3053:2: ( ( ( ruleLiteralWordPart ) ) )
        // InternalMyBashParser.g:3053:2: ( ( ruleLiteralWordPart ) )
        {
        // InternalMyBashParser.g:3053:2: ( ( ruleLiteralWordPart ) )
        // InternalMyBashParser.g:3054:3: ( ruleLiteralWordPart )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getWordElementAccess().getLiteralWordPartParserRuleCall_0()); 
        }
        // InternalMyBashParser.g:3055:3: ( ruleLiteralWordPart )
        // InternalMyBashParser.g:3055:4: ruleLiteralWordPart
        {
        pushFollow(FOLLOW_2);
        ruleLiteralWordPart();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred49_InternalMyBashParser

    // $ANTLR start synpred50_InternalMyBashParser
    public final void synpred50_InternalMyBashParser_fragment() throws RecognitionException {   
        // InternalMyBashParser.g:3059:2: ( ( ruleDQString ) )
        // InternalMyBashParser.g:3059:2: ( ruleDQString )
        {
        // InternalMyBashParser.g:3059:2: ( ruleDQString )
        // InternalMyBashParser.g:3060:3: ruleDQString
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getWordElementAccess().getDQStringParserRuleCall_1()); 
        }
        pushFollow(FOLLOW_2);
        ruleDQString();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalMyBashParser

    // $ANTLR start synpred147_InternalMyBashParser
    public final void synpred147_InternalMyBashParser_fragment() throws RecognitionException {   
        // InternalMyBashParser.g:8408:3: ( rule__Assignment__ValueAssignment_3 )
        // InternalMyBashParser.g:8408:3: rule__Assignment__ValueAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__Assignment__ValueAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalMyBashParser

    // $ANTLR start synpred151_InternalMyBashParser
    public final void synpred151_InternalMyBashParser_fragment() throws RecognitionException {   
        // InternalMyBashParser.g:8711:4: ( rule__LiteralStringPart__ValuesAssignment_1 )
        // InternalMyBashParser.g:8711:4: rule__LiteralStringPart__ValuesAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__LiteralStringPart__ValuesAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalMyBashParser

    // $ANTLR start synpred152_InternalMyBashParser
    public final void synpred152_InternalMyBashParser_fragment() throws RecognitionException {   
        // InternalMyBashParser.g:8772:4: ( rule__LiteralWordPart__Group_1__0 )
        // InternalMyBashParser.g:8772:4: rule__LiteralWordPart__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__LiteralWordPart__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred152_InternalMyBashParser

    // Delegated rules

    public final boolean synpred1_InternalMyBashParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalMyBashParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalMyBashParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalMyBashParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalMyBashParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalMyBashParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalMyBashParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalMyBashParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalMyBashParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalMyBashParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalMyBashParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalMyBashParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA94 dfa94 = new DFA94(this);
    static final String dfa_1s = "\66\uffff";
    static final String dfa_2s = "\1\1\65\uffff";
    static final String dfa_3s = "\1\7\1\uffff\11\0\53\uffff";
    static final String dfa_4s = "\1\156\1\uffff\11\0\53\uffff";
    static final String dfa_5s = "\1\uffff\1\2\63\uffff\1\1";
    static final String dfa_6s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\53\uffff}>";
    static final String[] dfa_7s = {
            "\5\1\1\10\2\1\5\uffff\1\5\2\uffff\1\1\1\uffff\1\1\17\uffff\3\1\1\11\1\1\1\uffff\2\1\1\uffff\2\1\1\12\1\uffff\2\1\1\uffff\1\1\2\uffff\2\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\4\2\uffff\1\1\1\3\2\1\4\uffff\1\1\1\uffff\2\1\1\uffff\1\1\6\uffff\2\1\1\uffff\3\1\1\uffff\2\1\1\2\1\uffff\1\6\2\uffff\1\1\1\uffff\1\7\1\1\1\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 982:4: ( rule__Words__ElementsAssignment )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_5 = input.LA(1);

                         
                        int index1_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_6 = input.LA(1);

                         
                        int index1_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA1_7 = input.LA(1);

                         
                        int index1_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA1_8 = input.LA(1);

                         
                        int index1_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA1_9 = input.LA(1);

                         
                        int index1_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA1_10 = input.LA(1);

                         
                        int index1_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyBashParser()) ) {s = 53;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\10\uffff";
    static final String dfa_9s = "\1\14\1\uffff\1\14\1\uffff\1\14\1\0\1\uffff\1\14";
    static final String dfa_10s = "\1\153\1\uffff\1\153\1\uffff\1\153\1\0\1\uffff\1\153";
    static final String dfa_11s = "\1\uffff\1\1\1\uffff\1\3\2\uffff\1\2\1\uffff";
    static final String dfa_12s = "\5\uffff\1\0\2\uffff}>";
    static final String[] dfa_13s = {
            "\1\3\7\uffff\1\3\27\uffff\1\3\7\uffff\1\3\17\uffff\1\2\3\uffff\1\1\33\uffff\1\1\1\uffff\1\3\4\uffff\1\3",
            "",
            "\1\6\7\uffff\1\6\27\uffff\1\6\7\uffff\1\6\17\uffff\1\5\37\uffff\1\4\1\uffff\1\6\4\uffff\1\6",
            "",
            "\1\6\7\uffff\1\6\27\uffff\1\6\7\uffff\1\6\17\uffff\1\5\37\uffff\1\7\1\uffff\1\6\4\uffff\1\6",
            "\1\uffff",
            "",
            "\1\6\7\uffff\1\6\27\uffff\1\6\7\uffff\1\6\17\uffff\1\5\37\uffff\1\7\1\uffff\1\6\4\uffff\1\6"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3048:1: rule__WordElement__Alternatives : ( ( ( ruleLiteralWordPart ) ) | ( ruleDQString ) | ( ruleExpansion ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_5 = input.LA(1);

                         
                        int index29_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalMyBashParser()) ) {s = 1;}

                        else if ( (synpred50_InternalMyBashParser()) ) {s = 6;}

                         
                        input.seek(index29_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\1\3\1\uffff\1\3\5\uffff";
    static final String dfa_15s = "\2\137\1\4\1\uffff\3\137\1\uffff";
    static final String dfa_16s = "\1\156\1\160\1\153\1\uffff\2\160\1\156\1\uffff";
    static final String dfa_17s = "\3\uffff\1\2\3\uffff\1\1";
    static final String dfa_18s = "\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\16\uffff\1\1",
            "\1\5\17\uffff\1\6\1\4",
            "\3\7\5\uffff\2\7\3\uffff\1\7\2\uffff\1\7\4\uffff\2\7\20\uffff\3\7\1\uffff\2\7\2\uffff\2\7\1\uffff\3\7\5\uffff\1\7\4\uffff\2\7\3\uffff\2\7\10\uffff\1\7\1\uffff\1\7\5\uffff\1\7\3\uffff\1\7\3\uffff\3\7\1\uffff\1\7\4\uffff\1\7",
            "",
            "\1\5\17\uffff\1\6\1\4",
            "\1\5\17\uffff\1\6\1\4",
            "\1\2\16\uffff\1\1",
            ""
    };
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_8;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 4075:2: ( rule__Bash__Group_0_2_1__0 )*";
        }
    }
    static final String dfa_20s = "\1\7\1\137\1\4\1\uffff\3\137\1\uffff";
    static final String dfa_21s = "\1\156\1\160\1\154\1\uffff\2\160\1\156\1\uffff";
    static final String[] dfa_22s = {
            "\5\3\2\uffff\1\3\32\uffff\2\3\21\uffff\2\3\14\uffff\1\3\21\uffff\1\3\2\uffff\1\2\14\uffff\1\3\1\uffff\1\1",
            "\1\5\17\uffff\1\6\1\4",
            "\3\7\5\3\2\7\1\3\2\uffff\1\7\2\uffff\1\7\4\uffff\2\7\16\uffff\2\3\3\7\1\uffff\2\7\2\uffff\2\7\1\uffff\3\7\3\uffff\2\3\1\7\4\uffff\2\7\3\uffff\2\7\1\3\7\uffff\1\7\1\uffff\1\7\5\uffff\1\7\1\uffff\1\3\1\uffff\1\7\3\uffff\3\7\1\uffff\1\7\4\uffff\1\7\1\3",
            "",
            "\1\5\17\uffff\1\6\1\4",
            "\1\5\17\uffff\1\6\1\4",
            "\1\2\16\uffff\1\1",
            ""
    };
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[][] dfa_22 = unpackEncodedStringArray(dfa_22s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_8;
            this.eof = dfa_14;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_22;
        }
        public String getDescription() {
            return "()* loopback of 4345:2: ( rule__CompoundList__Group_1_1__0 )*";
        }
    }
    static final String dfa_23s = "\13\uffff";
    static final String dfa_24s = "\4\4\2\uffff\1\4\4\uffff";
    static final String dfa_25s = "\4\12\1\uffff\1\137\1\12\1\uffff\3\137";
    static final String dfa_26s = "\1\52\3\156\1\uffff\1\160\1\153\1\uffff\2\160\1\156";
    static final String dfa_27s = "\4\uffff\1\2\2\uffff\1\1\3\uffff";
    static final String dfa_28s = "\13\uffff}>";
    static final String[] dfa_29s = {
            "\1\4\3\uffff\1\3\32\uffff\1\2\1\1",
            "\1\4\1\uffff\1\7\7\uffff\1\7\27\uffff\1\7\7\uffff\1\7\17\uffff\1\7\3\uffff\2\7\25\uffff\1\6\3\uffff\2\7\1\uffff\1\7\4\uffff\1\7\2\uffff\1\5",
            "\1\4\1\uffff\1\7\7\uffff\1\7\27\uffff\1\7\7\uffff\1\7\17\uffff\1\7\3\uffff\2\7\25\uffff\1\6\3\uffff\2\7\1\uffff\1\7\4\uffff\1\7\2\uffff\1\5",
            "\1\4\1\uffff\1\7\7\uffff\1\7\27\uffff\1\7\7\uffff\1\7\17\uffff\1\7\3\uffff\2\7\25\uffff\1\6\3\uffff\2\7\1\uffff\1\7\4\uffff\1\7\2\uffff\1\5",
            "",
            "\1\11\17\uffff\1\12\1\10",
            "\1\4\1\uffff\1\7\7\uffff\1\7\27\uffff\1\7\7\uffff\1\7\17\uffff\1\7\3\uffff\2\7\31\uffff\2\7\1\uffff\1\7\4\uffff\1\7",
            "",
            "\1\11\17\uffff\1\12\1\10",
            "\1\11\17\uffff\1\12\1\10",
            "\1\6\16\uffff\1\5"
    };

    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[][] dfa_29 = unpackEncodedStringArray(dfa_29s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_23;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "()* loopback of 6215:2: ( rule__CaseStatement__PatternsAssignment_6_1 )*";
        }
    }
    static final String dfa_30s = "\1\14\1\137\1\14\2\uffff\3\137";
    static final String dfa_31s = "\1\156\1\160\1\153\2\uffff\2\160\1\156";
    static final String dfa_32s = "\3\uffff\1\2\1\1\3\uffff";
    static final String[] dfa_33s = {
            "\1\4\7\uffff\1\4\27\uffff\1\4\7\uffff\1\4\17\uffff\1\4\3\uffff\1\4\1\uffff\1\3\24\uffff\1\2\3\uffff\2\4\1\uffff\1\4\4\uffff\1\4\2\uffff\1\1",
            "\1\6\17\uffff\1\7\1\5",
            "\1\4\7\uffff\1\4\27\uffff\1\4\7\uffff\1\4\17\uffff\1\4\3\uffff\1\4\1\uffff\1\3\30\uffff\2\4\1\uffff\1\4\4\uffff\1\4",
            "",
            "",
            "\1\6\17\uffff\1\7\1\5",
            "\1\6\17\uffff\1\7\1\5",
            "\1\2\16\uffff\1\1"
    };
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_8;
            this.eof = dfa_14;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_18;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 8166:2: ( rule__ArrayStart__Group_2__0 )*";
        }
    }
    static final String dfa_34s = "\44\uffff";
    static final String dfa_35s = "\1\14\43\uffff";
    static final String dfa_36s = "\1\7\12\0\31\uffff";
    static final String dfa_37s = "\1\156\12\0\31\uffff";
    static final String dfa_38s = "\13\uffff\1\1\1\2\27\uffff";
    static final String dfa_39s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\31\uffff}>";
    static final String[] dfa_40s = {
            "\5\14\1\7\1\uffff\1\14\5\uffff\1\4\2\uffff\1\14\21\uffff\2\14\1\uffff\1\10\7\uffff\1\11\7\uffff\2\14\2\uffff\1\14\1\uffff\1\14\1\uffff\1\3\2\uffff\1\14\1\2\1\13\1\14\6\uffff\1\14\11\uffff\2\14\2\uffff\2\14\1\uffff\1\14\1\12\1\1\1\uffff\1\5\4\uffff\1\6\1\14\1\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "8408:2: ( rule__Assignment__ValueAssignment_3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_1 = input.LA(1);

                         
                        int index89_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA89_2 = input.LA(1);

                         
                        int index89_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA89_3 = input.LA(1);

                         
                        int index89_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA89_4 = input.LA(1);

                         
                        int index89_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA89_5 = input.LA(1);

                         
                        int index89_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA89_6 = input.LA(1);

                         
                        int index89_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA89_7 = input.LA(1);

                         
                        int index89_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA89_8 = input.LA(1);

                         
                        int index89_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA89_9 = input.LA(1);

                         
                        int index89_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA89_10 = input.LA(1);

                         
                        int index89_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalMyBashParser()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index89_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\1\12\uffff";
    static final String dfa_42s = "\1\7\1\uffff\1\0\1\110\1\14\1\uffff\1\110\1\0\1\14\1\0\1\14";
    static final String dfa_43s = "\1\156\1\uffff\1\0\1\144\1\153\1\uffff\1\110\1\0\1\153\1\0\1\153";
    static final String dfa_44s = "\1\uffff\1\2\3\uffff\1\1\5\uffff";
    static final String dfa_45s = "\2\uffff\1\1\4\uffff\1\2\1\uffff\1\0\1\uffff}>";
    static final String[] dfa_46s = {
            "\10\1\5\uffff\1\1\2\uffff\1\1\1\uffff\1\1\17\uffff\5\1\1\uffff\2\1\1\uffff\3\1\1\uffff\2\1\1\uffff\1\1\2\uffff\2\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\4\2\uffff\1\1\1\3\2\1\4\uffff\1\1\1\uffff\2\1\1\uffff\1\1\6\uffff\2\1\1\uffff\3\1\1\uffff\2\1\1\2\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1",
            "",
            "\1\uffff",
            "\1\7\33\uffff\1\6",
            "\1\1\7\uffff\1\1\27\uffff\1\1\7\uffff\1\1\17\uffff\1\11\37\uffff\1\10\1\uffff\1\1\4\uffff\1\1",
            "",
            "\1\7",
            "\1\uffff",
            "\1\1\7\uffff\1\1\27\uffff\1\1\7\uffff\1\1\17\uffff\1\11\37\uffff\1\12\1\uffff\1\1\4\uffff\1\1",
            "\1\uffff",
            "\1\1\7\uffff\1\1\27\uffff\1\1\7\uffff\1\1\17\uffff\1\11\37\uffff\1\12\1\uffff\1\1\4\uffff\1\1"
    };
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_23;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "()* loopback of 8772:3: ( rule__LiteralWordPart__Group_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_9 = input.LA(1);

                         
                        int index94_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalMyBashParser()) ) {s = 5;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_2 = input.LA(1);

                         
                        int index94_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalMyBashParser()) ) {s = 5;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA94_7 = input.LA(1);

                         
                        int index94_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalMyBashParser()) ) {s = 5;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0010100000101002L,0x0000085000000110L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x00C9A80002002002L,0x0000000040140000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000400080000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x41D9B80006123070L,0x0000085C44140318L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000002L,0x0000400080000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0010100000101010L,0x0000085C00000110L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000800000L,0x0000000000020084L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000800002L,0x0000000000020084L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000001L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000001L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x00C9A80002002000L,0x0000000040140000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L,0x0000000800000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000400080000200L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0010100000101010L,0x0000085800000110L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x00D9B80002103010L,0x0000085840140110L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x00D9B80002103012L,0x0000085840140110L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x00D9B80002103010L,0x0000085C40140110L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00D9B80002103012L,0x0000085C40140110L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0010100000101010L,0x0000095800000310L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0010100240101000L,0x000008D460005318L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0010100000101410L,0x0000085800000310L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000060000004000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000060000004002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0010100000101010L,0x0000085800000310L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x2000000000000300L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000004000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0010100240101000L,0x000008D460025318L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0010100248101000L,0x000008D460005318L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000400080020000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0010100000101012L,0x0000085800000110L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x00C9880002002000L,0x0000000040140000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0010100000101010L,0x0000085840000110L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000880000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0010100000101000L,0x0000085000000110L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000110L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000110L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000100L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000010L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000800000L,0x0000000000000004L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000800002L,0x0000000000000004L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0004000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0010100000101012L,0x0000085800000310L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0010100000101010L,0x0000085800000510L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000100000L,0x0000004000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000440600820L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x080001E900280000L,0x0000000002A9F060L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0010100240101000L,0x000008D460405B18L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x080001E100280000L,0x0000000002287060L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000800000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x080001E900280000L,0x000000000229F060L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x04000014A1418000L,0x0000000000080002L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0002000000040000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0002000000040002L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0020400000000000L,0x0000000000140000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0020400000000002L,0x0000000000140000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0040200000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0040200000000002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000005000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000005000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008840L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008840L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000008L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000240000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000008040000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0010100000101000L,0x000008D000000110L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0001800080000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0001000080000000L});

}