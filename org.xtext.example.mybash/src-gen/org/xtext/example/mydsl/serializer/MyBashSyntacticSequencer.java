/*
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.MyBashGrammarAccess;

@SuppressWarnings("all")
public class MyBashSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyBashGrammarAccess grammarAccess;
	protected AbstractElementAlias match_CasePatternContinue_LeftParenthesisKeyword_1_q;
	protected AbstractElementAlias match_CasePattern_LeftParenthesisKeyword_0_q;
	protected AbstractElementAlias match_CaseStatement_____SemicolonAmpersandKeyword_6_2_0_1_or_SemicolonSemicolonAmpersandKeyword_6_2_0_2_or_SemicolonSemicolonKeyword_6_2_0_0___MaybeNewLineParserRuleCall_6_2_1__q;
	protected AbstractElementAlias match_CondExp_LeftParenthesisKeyword_2_0_a;
	protected AbstractElementAlias match_CondExp_LeftParenthesisKeyword_2_0_p;
	protected AbstractElementAlias match_CondOrAnd_AmpersandAmpersandKeyword_1_1_1_or_VerticalLineVerticalLineKeyword_1_1_0;
	protected AbstractElementAlias match_ForStatement___ListTerminatorParserRuleCall_1_0_8_0_MaybeNewLineParserRuleCall_1_0_8_1__q;
	protected AbstractElementAlias match_FunctionDefine___LeftParenthesisKeyword_0_3_0_0_RightParenthesisKeyword_0_3_0_1__q;
	protected AbstractElementAlias match_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a__a;
	protected AbstractElementAlias match_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a;
	protected AbstractElementAlias match_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__a;
	protected AbstractElementAlias match_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__p;
	protected AbstractElementAlias match_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a__a;
	protected AbstractElementAlias match_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a;
	protected AbstractElementAlias match_LiteralWordPart___QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a_QuotationMarkKeyword_1_0_2_0__a;
	protected AbstractElementAlias match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____a;
	protected AbstractElementAlias match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____p;
	protected AbstractElementAlias match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2_QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q__p;
	protected AbstractElementAlias match_LiteralWordPart_____QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2_ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q__p;
	protected AbstractElementAlias match_ParameterExpansionStart___LeftSquareBracketKeyword_4_0___AsteriskKeyword_4_1_1_or_CommercialAtKeyword_4_1_0___RightSquareBracketKeyword_4_2__q;
	protected AbstractElementAlias match_ParameterProcessor_ColonKeyword_3_1_or___ColonKeyword_4_1_ColonKeyword_4_2__;
	protected AbstractElementAlias match_ParameterProcessor_ColonKeyword_3_2_1_0_q;
	protected AbstractElementAlias match_ParameterProcessor_SolidusKeyword_1_2_1_0_q;
	protected AbstractElementAlias match_PrimaryItem_LeftParenthesisKeyword_1_0_a;
	protected AbstractElementAlias match_PrimaryItem_LeftParenthesisKeyword_1_0_p;
	protected AbstractElementAlias match_Redirection_I_NUMBERTerminalRuleCall_1_0_0_q;
	protected AbstractElementAlias match_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__a;
	protected AbstractElementAlias match_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__p;
	protected AbstractElementAlias match_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__a;
	protected AbstractElementAlias match_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__p;
	protected AbstractElementAlias match_SimpleList_SemicolonKeyword_2_1_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyBashGrammarAccess) access;
		match_CasePatternContinue_LeftParenthesisKeyword_1_q = new TokenAlias(false, true, grammarAccess.getCasePatternContinueAccess().getLeftParenthesisKeyword_1());
		match_CasePattern_LeftParenthesisKeyword_0_q = new TokenAlias(false, true, grammarAccess.getCasePatternAccess().getLeftParenthesisKeyword_0());
		match_CaseStatement_____SemicolonAmpersandKeyword_6_2_0_1_or_SemicolonSemicolonAmpersandKeyword_6_2_0_2_or_SemicolonSemicolonKeyword_6_2_0_0___MaybeNewLineParserRuleCall_6_2_1__q = new GroupAlias(false, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getCaseStatementAccess().getSemicolonAmpersandKeyword_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getCaseStatementAccess().getSemicolonSemicolonAmpersandKeyword_6_2_0_2()), new TokenAlias(false, false, grammarAccess.getCaseStatementAccess().getSemicolonSemicolonKeyword_6_2_0_0())), new TokenAlias(false, false, grammarAccess.getCaseStatementAccess().getMaybeNewLineParserRuleCall_6_2_1()));
		match_CondExp_LeftParenthesisKeyword_2_0_a = new TokenAlias(true, true, grammarAccess.getCondExpAccess().getLeftParenthesisKeyword_2_0());
		match_CondExp_LeftParenthesisKeyword_2_0_p = new TokenAlias(true, false, grammarAccess.getCondExpAccess().getLeftParenthesisKeyword_2_0());
		match_CondOrAnd_AmpersandAmpersandKeyword_1_1_1_or_VerticalLineVerticalLineKeyword_1_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getCondOrAndAccess().getAmpersandAmpersandKeyword_1_1_1()), new TokenAlias(false, false, grammarAccess.getCondOrAndAccess().getVerticalLineVerticalLineKeyword_1_1_0()));
		match_ForStatement___ListTerminatorParserRuleCall_1_0_8_0_MaybeNewLineParserRuleCall_1_0_8_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getForStatementAccess().getListTerminatorParserRuleCall_1_0_8_0()), new TokenAlias(false, false, grammarAccess.getForStatementAccess().getMaybeNewLineParserRuleCall_1_0_8_1()));
		match_FunctionDefine___LeftParenthesisKeyword_0_3_0_0_RightParenthesisKeyword_0_3_0_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getFunctionDefineAccess().getLeftParenthesisKeyword_0_3_0_0()), new TokenAlias(false, false, grammarAccess.getFunctionDefineAccess().getRightParenthesisKeyword_0_3_0_1()));
		match_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2())));
		match_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2()));
		match_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2())), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()));
		match_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2())), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()));
		match_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2())));
		match_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2()));
		match_LiteralWordPart___QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a_QuotationMarkKeyword_1_0_2_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2())), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()));
		match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2())));
		match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____p = new AlternativeAlias(true, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2())));
		match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2_QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q__p = new GroupAlias(true, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2())), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2())));
		match_LiteralWordPart_____QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2_ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q__p = new GroupAlias(true, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2())), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getQuotationMarkKeyword_1_0_2_2()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralWordPartAccess().getApostropheKeyword_1_0_1_2())));
		match_ParameterExpansionStart___LeftSquareBracketKeyword_4_0___AsteriskKeyword_4_1_1_or_CommercialAtKeyword_4_1_0___RightSquareBracketKeyword_4_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getParameterExpansionStartAccess().getLeftSquareBracketKeyword_4_0()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getParameterExpansionStartAccess().getAsteriskKeyword_4_1_1()), new TokenAlias(false, false, grammarAccess.getParameterExpansionStartAccess().getCommercialAtKeyword_4_1_0())), new TokenAlias(false, false, grammarAccess.getParameterExpansionStartAccess().getRightSquareBracketKeyword_4_2()));
		match_ParameterProcessor_ColonKeyword_3_1_or___ColonKeyword_4_1_ColonKeyword_4_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getParameterProcessorAccess().getColonKeyword_4_1()), new TokenAlias(false, false, grammarAccess.getParameterProcessorAccess().getColonKeyword_4_2())), new TokenAlias(false, false, grammarAccess.getParameterProcessorAccess().getColonKeyword_3_1()));
		match_ParameterProcessor_ColonKeyword_3_2_1_0_q = new TokenAlias(false, true, grammarAccess.getParameterProcessorAccess().getColonKeyword_3_2_1_0());
		match_ParameterProcessor_SolidusKeyword_1_2_1_0_q = new TokenAlias(false, true, grammarAccess.getParameterProcessorAccess().getSolidusKeyword_1_2_1_0());
		match_PrimaryItem_LeftParenthesisKeyword_1_0_a = new TokenAlias(true, true, grammarAccess.getPrimaryItemAccess().getLeftParenthesisKeyword_1_0());
		match_PrimaryItem_LeftParenthesisKeyword_1_0_p = new TokenAlias(true, false, grammarAccess.getPrimaryItemAccess().getLeftParenthesisKeyword_1_0());
		match_Redirection_I_NUMBERTerminalRuleCall_1_0_0_q = new TokenAlias(false, true, grammarAccess.getRedirectionAccess().getI_NUMBERTerminalRuleCall_1_0_0());
		match_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getLeftParenthesisKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getRightParenthesisKeyword_1_0_2()));
		match_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getLeftParenthesisKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getRightParenthesisKeyword_1_0_2()));
		match_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getRightParenthesisKeyword_1_0_2()), new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getLeftParenthesisKeyword_1_0_0()));
		match_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getRightParenthesisKeyword_1_0_2()), new TokenAlias(false, false, grammarAccess.getRegularElementsAccess().getLeftParenthesisKeyword_1_0_0()));
		match_SimpleList_SemicolonKeyword_2_1_q = new TokenAlias(false, true, grammarAccess.getSimpleListAccess().getSemicolonKeyword_2_1());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getArithmeticExpansionEndRule())
			return getArithmeticExpansionEndToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getArrayEndRule())
			return getArrayEndToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getCS_STARTRule())
			return getCS_STARTToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getHERE_DOC_WORDRule())
			return getHERE_DOC_WORDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getI_NUMBERRule())
			return getI_NUMBERToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getListTerminatorRule())
			return getListTerminatorToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getMaybeNewLineRule())
			return getMaybeNewLineToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getNewLineRule())
			return getNewLineToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getWSRule())
			return getWSToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * ArithmeticExpansionEnd hidden(C_LINE):
	 * 	'))';
	 */
	protected String getArithmeticExpansionEndToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "))";
	}
	
	/**
	 * ArrayEnd hidden(C_LINE):
	 * 	')';
	 */
	protected String getArrayEndToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ")";
	}
	
	/**
	 * terminal CS_START:
	 * 	'__CS_START__';
	 */
	protected String getCS_STARTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "__CS_START__";
	}
	
	/**
	 * terminal HERE_DOC_WORD:
	 * 	'__HERE_DOC_WORD__';
	 */
	protected String getHERE_DOC_WORDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "__HERE_DOC_WORD__";
	}
	
	/**
	 * terminal I_NUMBER:
	 * 	('0'..'9')+;
	 */
	protected String getI_NUMBERToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * ListTerminator:
	 * 	NewLine | ';';
	 */
	protected String getListTerminatorToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\n";
	}
	
	/**
	 * MaybeNewLine:
	 * 	NewLine?;
	 */
	protected String getMaybeNewLineToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * NewLine:
	 * 	HereDoc* NEW_LINE;
	 */
	protected String getNewLineToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\n";
	}
	
	/**
	 * terminal WS:
	 * 	(' ' | '\t');
	 */
	protected String getWSToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return " ";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_CasePatternContinue_LeftParenthesisKeyword_1_q.equals(syntax))
				emit_CasePatternContinue_LeftParenthesisKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CasePattern_LeftParenthesisKeyword_0_q.equals(syntax))
				emit_CasePattern_LeftParenthesisKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CaseStatement_____SemicolonAmpersandKeyword_6_2_0_1_or_SemicolonSemicolonAmpersandKeyword_6_2_0_2_or_SemicolonSemicolonKeyword_6_2_0_0___MaybeNewLineParserRuleCall_6_2_1__q.equals(syntax))
				emit_CaseStatement_____SemicolonAmpersandKeyword_6_2_0_1_or_SemicolonSemicolonAmpersandKeyword_6_2_0_2_or_SemicolonSemicolonKeyword_6_2_0_0___MaybeNewLineParserRuleCall_6_2_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CondExp_LeftParenthesisKeyword_2_0_a.equals(syntax))
				emit_CondExp_LeftParenthesisKeyword_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CondExp_LeftParenthesisKeyword_2_0_p.equals(syntax))
				emit_CondExp_LeftParenthesisKeyword_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CondOrAnd_AmpersandAmpersandKeyword_1_1_1_or_VerticalLineVerticalLineKeyword_1_1_0.equals(syntax))
				emit_CondOrAnd_AmpersandAmpersandKeyword_1_1_1_or_VerticalLineVerticalLineKeyword_1_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ForStatement___ListTerminatorParserRuleCall_1_0_8_0_MaybeNewLineParserRuleCall_1_0_8_1__q.equals(syntax))
				emit_ForStatement___ListTerminatorParserRuleCall_1_0_8_0_MaybeNewLineParserRuleCall_1_0_8_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionDefine___LeftParenthesisKeyword_0_3_0_0_RightParenthesisKeyword_0_3_0_1__q.equals(syntax))
				emit_FunctionDefine___LeftParenthesisKeyword_0_3_0_0_RightParenthesisKeyword_0_3_0_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a__a.equals(syntax))
				emit_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a.equals(syntax))
				emit_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__a.equals(syntax))
				emit_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__p.equals(syntax))
				emit_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a__a.equals(syntax))
				emit_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a.equals(syntax))
				emit_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart___QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a_QuotationMarkKeyword_1_0_2_0__a.equals(syntax))
				emit_LiteralWordPart___QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a_QuotationMarkKeyword_1_0_2_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____a.equals(syntax))
				emit_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____p.equals(syntax))
				emit_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2_QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q__p.equals(syntax))
				emit_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2_QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralWordPart_____QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2_ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q__p.equals(syntax))
				emit_LiteralWordPart_____QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2_ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterExpansionStart___LeftSquareBracketKeyword_4_0___AsteriskKeyword_4_1_1_or_CommercialAtKeyword_4_1_0___RightSquareBracketKeyword_4_2__q.equals(syntax))
				emit_ParameterExpansionStart___LeftSquareBracketKeyword_4_0___AsteriskKeyword_4_1_1_or_CommercialAtKeyword_4_1_0___RightSquareBracketKeyword_4_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterProcessor_ColonKeyword_3_1_or___ColonKeyword_4_1_ColonKeyword_4_2__.equals(syntax))
				emit_ParameterProcessor_ColonKeyword_3_1_or___ColonKeyword_4_1_ColonKeyword_4_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterProcessor_ColonKeyword_3_2_1_0_q.equals(syntax))
				emit_ParameterProcessor_ColonKeyword_3_2_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterProcessor_SolidusKeyword_1_2_1_0_q.equals(syntax))
				emit_ParameterProcessor_SolidusKeyword_1_2_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PrimaryItem_LeftParenthesisKeyword_1_0_a.equals(syntax))
				emit_PrimaryItem_LeftParenthesisKeyword_1_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PrimaryItem_LeftParenthesisKeyword_1_0_p.equals(syntax))
				emit_PrimaryItem_LeftParenthesisKeyword_1_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Redirection_I_NUMBERTerminalRuleCall_1_0_0_q.equals(syntax))
				emit_Redirection_I_NUMBERTerminalRuleCall_1_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__a.equals(syntax))
				emit_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__p.equals(syntax))
				emit_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__a.equals(syntax))
				emit_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__p.equals(syntax))
				emit_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleList_SemicolonKeyword_2_1_q.equals(syntax))
				emit_SimpleList_SemicolonKeyword_2_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     '('?
	 *
	 * This ambiguous syntax occurs at:
	 *     follow=';&' MaybeNewLine (ambiguity) condition=Pattern
	 *     follow=';;&' MaybeNewLine (ambiguity) condition=Pattern
	 *     follow=';;' MaybeNewLine (ambiguity) condition=Pattern
	 */
	protected void emit_CasePatternContinue_LeftParenthesisKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) condition=Pattern
	 */
	protected void emit_CasePattern_LeftParenthesisKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((';;' | ';&' | ';;&') MaybeNewLine)?
	 *
	 * This ambiguous syntax occurs at:
	 *     patterns+=CasePattern (ambiguity) 'esac' ';'? (rule end)
	 *     patterns+=CasePattern (ambiguity) 'esac' (rule end)
	 *     patterns+=CasePattern (ambiguity) 'esac' backend?='&'
	 *     patterns+=CasePattern (ambiguity) 'esac' redirects+=Redirection
	 *     patterns+=CasePatternContinue (ambiguity) 'esac' ';'? (rule end)
	 *     patterns+=CasePatternContinue (ambiguity) 'esac' (rule end)
	 *     patterns+=CasePatternContinue (ambiguity) 'esac' backend?='&'
	 *     patterns+=CasePatternContinue (ambiguity) 'esac' redirects+=Redirection
	 */
	protected void emit_CaseStatement_____SemicolonAmpersandKeyword_6_2_0_1_or_SemicolonSemicolonAmpersandKeyword_6_2_0_2_or_SemicolonSemicolonKeyword_6_2_0_0___MaybeNewLineParserRuleCall_6_2_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) op=C_S_OP
	 *     (rule start) (ambiguity) value=Word
	 *     (rule start) (ambiguity) {CondBinaryExpression.left=}
	 *     (rule start) (ambiguity) {CondUnaryExpression.left=}
	 */
	protected void emit_CondExp_LeftParenthesisKeyword_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) {CondUnaryExpression.left=}
	 */
	protected void emit_CondExp_LeftParenthesisKeyword_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '||' | '&&'
	 *
	 * This ambiguous syntax occurs at:
	 *     {CondUnaryExpression.left=} (ambiguity) right=CondExp
	 */
	protected void emit_CondOrAnd_AmpersandAmpersandKeyword_1_1_1_or_VerticalLineVerticalLineKeyword_1_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (ListTerminator MaybeNewLine)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'for' '((' ';' ';' '))' (ambiguity) 'do' body=CompoundList
	 *     condition=Evaluation ';' '))' (ambiguity) 'do' body=CompoundList
	 *     init=Evaluation ';' ';' '))' (ambiguity) 'do' body=CompoundList
	 *     step=Evaluation '))' (ambiguity) 'do' body=CompoundList
	 */
	protected void emit_ForStatement___ListTerminatorParserRuleCall_1_0_8_0_MaybeNewLineParserRuleCall_1_0_8_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=FunctionName (ambiguity) MaybeNewLine body=ShellCommand
	 */
	protected void emit_FunctionDefine___LeftParenthesisKeyword_0_3_0_0_RightParenthesisKeyword_0_3_0_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (''' ''' ('"' '"')*)*
	 *
	 * This ambiguous syntax occurs at:
	 *     values+=WORD_PART ''' ('"' '"')* (ambiguity) (rule end)
	 *     values+=WORD_PART ''' ('"' '"')* (ambiguity) values+=WORD_PART
	 */
	protected void emit_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (''' ''')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '"' ('"' (ambiguity) '"')* values+=WORD_PART
	 *     values+=WORD_PART '"' (ambiguity) ('"' '"' (ambiguity))* (rule end)
	 *     values+=WORD_PART '"' (ambiguity) ('"' '"' (ambiguity))* values+=WORD_PART
	 *     values+=WORD_PART ''' (ambiguity) (('"' '"')? ('"' '"' ''' ''')?)+ '"' values+=WORD_PART
	 *     values+=WORD_PART (ambiguity) '"' ('"' (ambiguity) '"')* values+=WORD_PART
	 */
	protected void emit_LiteralWordPart___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (''' ('"' '"')* ''')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ('"' '"')* ''' (ambiguity) values+=WORD_PART
	 *     values+=WORD_PART ('"' '"')* ''' (ambiguity) values+=WORD_PART
	 */
	protected void emit_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (''' ('"' '"')* ''')+
	 *
	 * This ambiguous syntax occurs at:
	 *     values+=WORD_PART (ambiguity) values+=WORD_PART
	 */
	protected void emit_LiteralWordPart___ApostropheKeyword_1_0_1_2___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a_ApostropheKeyword_1_0_1_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('"' '"' (''' ''')*)*
	 *
	 * This ambiguous syntax occurs at:
	 *     values+=WORD_PART '"' (''' ''')* (ambiguity) (rule end)
	 *     values+=WORD_PART '"' (''' ''')* (ambiguity) values+=WORD_PART
	 */
	protected void emit_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('"' '"')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ''' (''' (ambiguity) ''')* values+=WORD_PART
	 *     values+=WORD_PART '"' (ambiguity) ((''' ''')? (''' ''' '"' '"')?)+ ''' values+=WORD_PART
	 *     values+=WORD_PART ''' (ambiguity) (''' ''' (ambiguity))* (rule end)
	 *     values+=WORD_PART ''' (ambiguity) (''' ''' (ambiguity))* values+=WORD_PART
	 *     values+=WORD_PART (ambiguity) ''' (''' (ambiguity) ''')* values+=WORD_PART
	 */
	protected void emit_LiteralWordPart___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('"' (''' ''')* '"')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (''' ''')* '"' (ambiguity) values+=WORD_PART
	 *     values+=WORD_PART (''' ''')* '"' (ambiguity) values+=WORD_PART
	 *     values+=WORD_PART (ambiguity) values+=WORD_PART
	 */
	protected void emit_LiteralWordPart___QuotationMarkKeyword_1_0_2_2___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__a_QuotationMarkKeyword_1_0_2_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((''' ''') | ('"' '"'))*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) values+=WORD_PART
	 *     values+=WORD_PART (ambiguity) (rule end)
	 *     values+=WORD_PART (ambiguity) values+=WORD_PART
	 */
	protected void emit_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((''' ''') | ('"' '"'))+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2___or___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2____p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((''' ''')? (''' ''' '"' '"')?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     values+=WORD_PART '"' ('"' '"')* (ambiguity) ''' values+=WORD_PART
	 */
	protected void emit_LiteralWordPart_____ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q___ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2_QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('"' '"')? ('"' '"' ''' ''')?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     values+=WORD_PART ''' (''' ''')* (ambiguity) '"' values+=WORD_PART
	 */
	protected void emit_LiteralWordPart_____QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2__q___QuotationMarkKeyword_1_0_2_0_QuotationMarkKeyword_1_0_2_2_ApostropheKeyword_1_0_1_0_ApostropheKeyword_1_0_1_2__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' ('@' | '*') ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     ref=[Assignment|NAME] (ambiguity) (rule end)
	 *     ref=[Assignment|NAME] (ambiguity) end=ParameterExpansionEnd
	 *     ref=[Assignment|NAME] (ambiguity) replacer=ParameterProcessor
	 *     value='*' (ambiguity) (rule end)
	 *     value='*' (ambiguity) end=ParameterExpansionEnd
	 *     value='*' (ambiguity) replacer=ParameterProcessor
	 *     value='?' (ambiguity) (rule end)
	 *     value='?' (ambiguity) end=ParameterExpansionEnd
	 *     value='?' (ambiguity) replacer=ParameterProcessor
	 *     value='@' (ambiguity) (rule end)
	 *     value='@' (ambiguity) end=ParameterExpansionEnd
	 *     value='@' (ambiguity) replacer=ParameterProcessor
	 *     value=I_NUMBER (ambiguity) (rule end)
	 *     value=I_NUMBER (ambiguity) end=ParameterExpansionEnd
	 *     value=I_NUMBER (ambiguity) replacer=ParameterProcessor
	 */
	protected void emit_ParameterExpansionStart___LeftSquareBracketKeyword_4_0___AsteriskKeyword_4_1_1_or_CommercialAtKeyword_4_1_0___RightSquareBracketKeyword_4_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':' | (':' ':')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_ParameterProcessor_ColonKeyword_3_1_or___ColonKeyword_4_1_ColonKeyword_4_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':'?
	 *
	 * This ambiguous syntax occurs at:
	 *     start=Evaluation (ambiguity) (rule end)
	 */
	protected void emit_ParameterProcessor_ColonKeyword_3_2_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '/'?
	 *
	 * This ambiguous syntax occurs at:
	 *     original=Word (ambiguity) (rule end)
	 */
	protected void emit_ParameterProcessor_SolidusKeyword_1_2_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) left=VariableId
	 *     (rule start) (ambiguity) op='!'
	 *     (rule start) (ambiguity) op='+'
	 *     (rule start) (ambiguity) op='++'
	 *     (rule start) (ambiguity) op='-'
	 *     (rule start) (ambiguity) op='--'
	 *     (rule start) (ambiguity) op='~'
	 *     (rule start) (ambiguity) prefix=A_PREFIX
	 *     (rule start) (ambiguity) ref=[Assignment|NAME]
	 *     (rule start) (ambiguity) value=Expansion
	 *     (rule start) (ambiguity) value=I_NUMBER
	 *     (rule start) (ambiguity) {BinaryExpression.left=}
	 *     (rule start) (ambiguity) {ConditionalOperator.condition=}
	 *     (rule start) (ambiguity) {SuffixExpression.operand=}
	 */
	protected void emit_PrimaryItem_LeftParenthesisKeyword_1_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) left=VariableId
	 *     (rule start) (ambiguity) op='!'
	 *     (rule start) (ambiguity) op='+'
	 *     (rule start) (ambiguity) op='-'
	 *     (rule start) (ambiguity) op='~'
	 *     (rule start) (ambiguity) {BinaryExpression.left=}
	 *     (rule start) (ambiguity) {ConditionalOperator.condition=}
	 */
	protected void emit_PrimaryItem_LeftParenthesisKeyword_1_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     I_NUMBER?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) op='&>'
	 *     (rule start) (ambiguity) op='&>>'
	 *     (rule start) (ambiguity) op='<&'
	 *     (rule start) (ambiguity) op='<'
	 *     (rule start) (ambiguity) op='<>'
	 *     (rule start) (ambiguity) op='<|'
	 *     (rule start) (ambiguity) op='>&'
	 *     (rule start) (ambiguity) op='>'
	 *     (rule start) (ambiguity) op='>>'
	 *     (rule start) (ambiguity) op='>|'
	 */
	protected void emit_Redirection_I_NUMBERTerminalRuleCall_1_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) parts+=Word
	 *     parts+=Word ')' (ambiguity) (rule end)
	 *     parts+=Word ')' (ambiguity) parts+=Word
	 *     parts+=Word (ambiguity) (rule end)
	 *     parts+=Word (ambiguity) parts+=Word
	 */
	protected void emit_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')')+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_RegularElements___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (')' '(')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '(' (ambiguity) parts+=Word
	 *     parts+=Word '(' (ambiguity) parts+=Word
	 */
	protected void emit_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (')' '(')+
	 *
	 * This ambiguous syntax occurs at:
	 *     parts+=Word (ambiguity) parts+=Word
	 */
	protected void emit_RegularElements___RightParenthesisKeyword_1_0_2_LeftParenthesisKeyword_1_0_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     assignments+=Assignment (ambiguity) (rule end)
	 *     body=CompoundList ')' (ambiguity) (rule end)
	 *     body=CompoundList 'done' (ambiguity) (rule end)
	 *     body=CompoundList '}' (ambiguity) (rule end)
	 *     body=ShellCommand (ambiguity) (rule end)
	 *     command=CommandName (ambiguity) (rule end)
	 *     d=CompoundList 'done' (ambiguity) (rule end)
	 *     else=CompoundList 'fi' (ambiguity) (rule end)
	 *     elseIfBlock+=ElseIfBlock 'fi' (ambiguity) (rule end)
	 *     expression=CondOrAnd ']]' (ambiguity) (rule end)
	 *     expression=Evaluation '))' (ambiguity) (rule end)
	 *     parameters+=LAssignment (ambiguity) (rule end)
	 *     parameters+=Word (ambiguity) (rule end)
	 *     patterns+=CasePattern ((';;' | ';&' | ';;&') MaybeNewLine)? 'esac' (ambiguity) (rule end)
	 *     patterns+=CasePatternContinue ((';;' | ';&' | ';;&') MaybeNewLine)? 'esac' (ambiguity) (rule end)
	 *     pipeline=Pipeline (ambiguity) (rule end)
	 *     r+=Redirection (ambiguity) (rule end)
	 *     redirects+=Redirection (ambiguity) (rule end)
	 *     right=Command (ambiguity) (rule end)
	 *     right=PipelineCommand (ambiguity) (rule end)
	 *     then=CompoundList 'fi' (ambiguity) (rule end)
	 *     variable=Word MaybeNewLine 'in' MaybeNewLine 'esac' (ambiguity) (rule end)
	 */
	protected void emit_SimpleList_SemicolonKeyword_2_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
