/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myBash;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myBash.MyBashFactory
 * @model kind="package"
 * @generated
 */
public interface MyBashPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "myBash";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/MyBash";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "myBash";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MyBashPackage eINSTANCE = org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.BashImpl <em>Bash</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.BashImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getBash()
   * @generated
   */
  int BASH = 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASH__COMMANDS = 0;

  /**
   * The feature id for the '<em><b>Error</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASH__ERROR = 1;

  /**
   * The number of structural features of the '<em>Bash</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASH_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CompoundListImpl <em>Compound List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CompoundListImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCompoundList()
   * @generated
   */
  int COMPOUND_LIST = 1;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_LIST__COMMANDS = 0;

  /**
   * The number of structural features of the '<em>Compound List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CommandUnitImpl <em>Command Unit</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CommandUnitImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCommandUnit()
   * @generated
   */
  int COMMAND_UNIT = 2;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_UNIT__BACKEND = 0;

  /**
   * The number of structural features of the '<em>Command Unit</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_UNIT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.FunctionDefineImpl <em>Function Define</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.FunctionDefineImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getFunctionDefine()
   * @generated
   */
  int FUNCTION_DEFINE = 3;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINE__BACKEND = COMMAND_UNIT__BACKEND;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINE__NAME = COMMAND_UNIT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINE__BODY = COMMAND_UNIT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Function Define</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINE_FEATURE_COUNT = COMMAND_UNIT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.SimpleCommandImpl <em>Simple Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.SimpleCommandImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSimpleCommand()
   * @generated
   */
  int SIMPLE_COMMAND = 4;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_COMMAND__BACKEND = COMMAND_UNIT__BACKEND;

  /**
   * The feature id for the '<em><b>Assignments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_COMMAND__ASSIGNMENTS = COMMAND_UNIT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Command</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_COMMAND__COMMAND = COMMAND_UNIT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_COMMAND__PARAMETERS = COMMAND_UNIT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>R</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_COMMAND__R = COMMAND_UNIT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Simple Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_COMMAND_FEATURE_COUNT = COMMAND_UNIT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ShellCommandImpl <em>Shell Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ShellCommandImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getShellCommand()
   * @generated
   */
  int SHELL_COMMAND = 5;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHELL_COMMAND__BACKEND = COMMAND_UNIT__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHELL_COMMAND__REDIRECTS = COMMAND_UNIT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Shell Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHELL_COMMAND_FEATURE_COUNT = COMMAND_UNIT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.GroupCommandImpl <em>Group Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.GroupCommandImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getGroupCommand()
   * @generated
   */
  int GROUP_COMMAND = 6;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP_COMMAND__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP_COMMAND__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP_COMMAND__BODY = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Group Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP_COMMAND_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CondCommandImpl <em>Cond Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CondCommandImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondCommand()
   * @generated
   */
  int COND_COMMAND = 7;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_COMMAND__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_COMMAND__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_COMMAND__EXPRESSION = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Cond Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_COMMAND_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ArithmeticCommandImpl <em>Arithmetic Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ArithmeticCommandImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArithmeticCommand()
   * @generated
   */
  int ARITHMETIC_COMMAND = 8;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_COMMAND__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_COMMAND__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_COMMAND__EXPRESSION = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Arithmetic Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_COMMAND_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.SubshellImpl <em>Subshell</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.SubshellImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSubshell()
   * @generated
   */
  int SUBSHELL = 9;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBSHELL__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBSHELL__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBSHELL__BODY = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Subshell</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBSHELL_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.AssignableImpl <em>Assignable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.AssignableImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getAssignable()
   * @generated
   */
  int ASSIGNABLE = 23;

  /**
   * The number of structural features of the '<em>Assignable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNABLE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.WordImpl <em>Word</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.WordImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getWord()
   * @generated
   */
  int WORD = 10;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WORD__ELEMENTS = ASSIGNABLE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Word</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WORD_FEATURE_COUNT = ASSIGNABLE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CaseStatementImpl <em>Case Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CaseStatementImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCaseStatement()
   * @generated
   */
  int CASE_STATEMENT = 11;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT__VARIABLE = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Patterns</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT__PATTERNS = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Case Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CasePatternImpl <em>Case Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CasePatternImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCasePattern()
   * @generated
   */
  int CASE_PATTERN = 12;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_PATTERN__CONDITION = 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_PATTERN__BODY = 1;

  /**
   * The feature id for the '<em><b>Follow</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_PATTERN__FOLLOW = 2;

  /**
   * The number of structural features of the '<em>Case Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_PATTERN_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.PatternImpl <em>Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.PatternImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPattern()
   * @generated
   */
  int PATTERN = 13;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN__PARTS = 0;

  /**
   * The number of structural features of the '<em>Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.IfStatementImpl <em>If Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.IfStatementImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getIfStatement()
   * @generated
   */
  int IF_STATEMENT = 14;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__CONDITION = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__THEN = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else If Block</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__ELSE_IF_BLOCK = SHELL_COMMAND_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__ELSE = SHELL_COMMAND_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>If Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ElseIfBlockImpl <em>Else If Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ElseIfBlockImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getElseIfBlock()
   * @generated
   */
  int ELSE_IF_BLOCK = 15;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_BLOCK__CONDITION = 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_BLOCK__THEN = 1;

  /**
   * The number of structural features of the '<em>Else If Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_BLOCK_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ForStatementImpl <em>For Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ForStatementImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getForStatement()
   * @generated
   */
  int FOR_STATEMENT = 16;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__VARIABLE = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Words</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__WORDS = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__BODY = SHELL_COMMAND_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>For Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.WhileStatementImpl <em>While Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.WhileStatementImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getWhileStatement()
   * @generated
   */
  int WHILE_STATEMENT = 17;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__BACKEND = SHELL_COMMAND__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__REDIRECTS = SHELL_COMMAND__REDIRECTS;

  /**
   * The feature id for the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__C = SHELL_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>D</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__D = SHELL_COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>While Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT_FEATURE_COUNT = SHELL_COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.RedirectionImpl <em>Redirection</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.RedirectionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getRedirection()
   * @generated
   */
  int REDIRECTION = 18;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDIRECTION__OP = 0;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDIRECTION__TARGET = 1;

  /**
   * The number of structural features of the '<em>Redirection</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDIRECTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ArrayImpl <em>Array</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ArrayImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArray()
   * @generated
   */
  int ARRAY = 19;

  /**
   * The feature id for the '<em><b>Words</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY__WORDS = ASSIGNABLE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Array</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_FEATURE_COUNT = ASSIGNABLE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.WordElementImpl <em>Word Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.WordElementImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getWordElement()
   * @generated
   */
  int WORD_ELEMENT = 26;

  /**
   * The number of structural features of the '<em>Word Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WORD_ELEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.LiteralImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 20;

  /**
   * The feature id for the '<em><b>Values</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__VALUES = WORD_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = WORD_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.AssignmentImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 21;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__NAME = 0;

  /**
   * The feature id for the '<em><b>Index</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__INDEX = 1;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__VALUE = 2;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.LAssignmentImpl <em>LAssignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.LAssignmentImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getLAssignment()
   * @generated
   */
  int LASSIGNMENT = 22;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LASSIGNMENT__NAME = 0;

  /**
   * The feature id for the '<em><b>Index</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LASSIGNMENT__INDEX = 1;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LASSIGNMENT__VALUE = 2;

  /**
   * The number of structural features of the '<em>LAssignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LASSIGNMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.DQStringImpl <em>DQ String</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.DQStringImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getDQString()
   * @generated
   */
  int DQ_STRING = 24;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DQ_STRING__ELEMENTS = WORD_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>DQ String</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DQ_STRING_FEATURE_COUNT = WORD_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ExpansionImpl <em>Expansion</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ExpansionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getExpansion()
   * @generated
   */
  int EXPANSION = 25;

  /**
   * The number of structural features of the '<em>Expansion</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPANSION_FEATURE_COUNT = WORD_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CondExpressionImpl <em>Cond Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CondExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondExpression()
   * @generated
   */
  int COND_EXPRESSION = 27;

  /**
   * The number of structural features of the '<em>Cond Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CondConstImpl <em>Cond Const</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CondConstImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondConst()
   * @generated
   */
  int COND_CONST = 28;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_CONST__VALUE = COND_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Cond Const</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_CONST_FEATURE_COUNT = COND_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.RegularExpressionImpl <em>Regular Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.RegularExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getRegularExpression()
   * @generated
   */
  int REGULAR_EXPRESSION = 29;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_EXPRESSION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_EXPRESSION__OP = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Regular Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.RegularConstImpl <em>Regular Const</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.RegularConstImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getRegularConst()
   * @generated
   */
  int REGULAR_CONST = 30;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_CONST__LEFT = REGULAR_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_CONST__OP = REGULAR_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_CONST__RIGHT = REGULAR_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_CONST__PARTS = REGULAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Regular Const</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_CONST_FEATURE_COUNT = REGULAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ArithmeticExpansionImpl <em>Arithmetic Expansion</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ArithmeticExpansionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArithmeticExpansion()
   * @generated
   */
  int ARITHMETIC_EXPANSION = 31;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPANSION__EXPRESSION = EXPANSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Arithmetic Expansion</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPANSION_FEATURE_COUNT = EXPANSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.IndexEvaluationImpl <em>Index Evaluation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.IndexEvaluationImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getIndexEvaluation()
   * @generated
   */
  int INDEX_EVALUATION = 32;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_EVALUATION__END = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_EVALUATION__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Index Evaluation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_EVALUATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ParameterExpansionImpl <em>Parameter Expansion</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ParameterExpansionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getParameterExpansion()
   * @generated
   */
  int PARAMETER_EXPANSION = 33;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_EXPANSION__END = EXPANSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_EXPANSION__REF = EXPANSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Hash</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_EXPANSION__HASH = EXPANSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_EXPANSION__VALUE = EXPANSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Index</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_EXPANSION__INDEX = EXPANSION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Replacer</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_EXPANSION__REPLACER = EXPANSION_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Parameter Expansion</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_EXPANSION_FEATURE_COUNT = EXPANSION_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ParameterProcessorImpl <em>Parameter Processor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ParameterProcessorImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getParameterProcessor()
   * @generated
   */
  int PARAMETER_PROCESSOR = 34;

  /**
   * The number of structural features of the '<em>Parameter Processor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_PROCESSOR_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CommandSubstitutionImpl <em>Command Substitution</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CommandSubstitutionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCommandSubstitution()
   * @generated
   */
  int COMMAND_SUBSTITUTION = 35;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_SUBSTITUTION__END = EXPANSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_SUBSTITUTION__COMMANDS = EXPANSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Command Substitution</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_SUBSTITUTION_FEATURE_COUNT = EXPANSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ProcessSubstitutionImpl <em>Process Substitution</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ProcessSubstitutionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getProcessSubstitution()
   * @generated
   */
  int PROCESS_SUBSTITUTION = 36;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCESS_SUBSTITUTION__END = EXPANSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCESS_SUBSTITUTION__OP = EXPANSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCESS_SUBSTITUTION__BODY = EXPANSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Process Substitution</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCESS_SUBSTITUTION_FEATURE_COUNT = EXPANSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 37;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.VariableIdImpl <em>Variable Id</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.VariableIdImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getVariableId()
   * @generated
   */
  int VARIABLE_ID = 38;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_ID__REF = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Id</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_ID_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.SimpleListImpl <em>Simple List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.SimpleListImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSimpleList()
   * @generated
   */
  int SIMPLE_LIST = 39;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_LIST__BACKEND = COMMAND_UNIT__BACKEND;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_LIST__LEFT = COMMAND_UNIT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_LIST__OP = COMMAND_UNIT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_LIST__RIGHT = COMMAND_UNIT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Simple List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_LIST_FEATURE_COUNT = COMMAND_UNIT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.PipelineCommandImpl <em>Pipeline Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.PipelineCommandImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPipelineCommand()
   * @generated
   */
  int PIPELINE_COMMAND = 40;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE_COMMAND__BACKEND = COMMAND_UNIT__BACKEND;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE_COMMAND__NOT = COMMAND_UNIT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pipeline</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE_COMMAND__PIPELINE = COMMAND_UNIT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Pipeline Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE_COMMAND_FEATURE_COUNT = COMMAND_UNIT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.PipelineImpl <em>Pipeline</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.PipelineImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPipeline()
   * @generated
   */
  int PIPELINE = 41;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE__BACKEND = COMMAND_UNIT__BACKEND;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE__LEFT = COMMAND_UNIT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE__OP = COMMAND_UNIT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE__RIGHT = COMMAND_UNIT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Pipeline</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PIPELINE_FEATURE_COUNT = COMMAND_UNIT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CommandNameImpl <em>Command Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CommandNameImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCommandName()
   * @generated
   */
  int COMMAND_NAME = 42;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_NAME__ELEMENTS = WORD__ELEMENTS;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_NAME__REF = WORD_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Command Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_NAME_FEATURE_COUNT = WORD_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ArithmeticForStatementImpl <em>Arithmetic For Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ArithmeticForStatementImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArithmeticForStatement()
   * @generated
   */
  int ARITHMETIC_FOR_STATEMENT = 43;

  /**
   * The feature id for the '<em><b>Backend</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__BACKEND = FOR_STATEMENT__BACKEND;

  /**
   * The feature id for the '<em><b>Redirects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__REDIRECTS = FOR_STATEMENT__REDIRECTS;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__VARIABLE = FOR_STATEMENT__VARIABLE;

  /**
   * The feature id for the '<em><b>Words</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__WORDS = FOR_STATEMENT__WORDS;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__BODY = FOR_STATEMENT__BODY;

  /**
   * The feature id for the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__INIT = FOR_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__CONDITION = FOR_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Step</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT__STEP = FOR_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Arithmetic For Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FOR_STATEMENT_FEATURE_COUNT = FOR_STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CondUnaryExpressionImpl <em>Cond Unary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CondUnaryExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondUnaryExpression()
   * @generated
   */
  int COND_UNARY_EXPRESSION = 44;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_UNARY_EXPRESSION__LEFT = COND_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_UNARY_EXPRESSION__RIGHT = COND_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_UNARY_EXPRESSION__OP = COND_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Operand</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_UNARY_EXPRESSION__OPERAND = COND_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Cond Unary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_UNARY_EXPRESSION_FEATURE_COUNT = COND_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.CondBinaryExpressionImpl <em>Cond Binary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.CondBinaryExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondBinaryExpression()
   * @generated
   */
  int COND_BINARY_EXPRESSION = 45;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_BINARY_EXPRESSION__LEFT = COND_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_BINARY_EXPRESSION__OP = COND_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_BINARY_EXPRESSION__RIGHT = COND_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Cond Binary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COND_BINARY_EXPRESSION_FEATURE_COUNT = COND_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.SingleProcessorImpl <em>Single Processor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.SingleProcessorImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSingleProcessor()
   * @generated
   */
  int SINGLE_PROCESSOR = 46;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_PROCESSOR__OP = PARAMETER_PROCESSOR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Word</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_PROCESSOR__WORD = PARAMETER_PROCESSOR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Single Processor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_PROCESSOR_FEATURE_COUNT = PARAMETER_PROCESSOR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ReplaceProcessorImpl <em>Replace Processor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ReplaceProcessorImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getReplaceProcessor()
   * @generated
   */
  int REPLACE_PROCESSOR = 47;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_PROCESSOR__OP = PARAMETER_PROCESSOR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Original</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_PROCESSOR__ORIGINAL = PARAMETER_PROCESSOR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Replace</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_PROCESSOR__REPLACE = PARAMETER_PROCESSOR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Replace Processor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_PROCESSOR_FEATURE_COUNT = PARAMETER_PROCESSOR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.SubStringProcessorImpl <em>Sub String Processor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.SubStringProcessorImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSubStringProcessor()
   * @generated
   */
  int SUB_STRING_PROCESSOR = 48;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_STRING_PROCESSOR__START = PARAMETER_PROCESSOR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Length</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_STRING_PROCESSOR__LENGTH = PARAMETER_PROCESSOR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Sub String Processor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_STRING_PROCESSOR_FEATURE_COUNT = PARAMETER_PROCESSOR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.BinaryExpressionImpl <em>Binary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.BinaryExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getBinaryExpression()
   * @generated
   */
  int BINARY_EXPRESSION = 49;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Binary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ConditionalOperatorImpl <em>Conditional Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ConditionalOperatorImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getConditionalOperator()
   * @generated
   */
  int CONDITIONAL_OPERATOR = 50;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_OPERATOR__CONDITION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_OPERATOR__FIRST = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_OPERATOR__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Conditional Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_OPERATOR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.PrefixExpressionImpl <em>Prefix Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.PrefixExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPrefixExpression()
   * @generated
   */
  int PREFIX_EXPRESSION = 51;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_EXPRESSION__OP = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operand</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_EXPRESSION__OPERAND = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Prefix Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.SuffixExpressionImpl <em>Suffix Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.SuffixExpressionImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSuffixExpression()
   * @generated
   */
  int SUFFIX_EXPRESSION = 52;

  /**
   * The feature id for the '<em><b>Operand</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUFFIX_EXPRESSION__OPERAND = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUFFIX_EXPRESSION__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Suffix Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUFFIX_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.ConstPrimaryItemImpl <em>Const Primary Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.ConstPrimaryItemImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getConstPrimaryItem()
   * @generated
   */
  int CONST_PRIMARY_ITEM = 53;

  /**
   * The feature id for the '<em><b>Prefix</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_PRIMARY_ITEM__PREFIX = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_PRIMARY_ITEM__VALUE = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Const Primary Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_PRIMARY_ITEM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.impl.PrimaryItemImpl <em>Primary Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.impl.PrimaryItemImpl
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPrimaryItem()
   * @generated
   */
  int PRIMARY_ITEM = 54;

  /**
   * The feature id for the '<em><b>Prefix</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_ITEM__PREFIX = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_ITEM__VALUE = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Primary Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_ITEM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myBash.FollowWordOp <em>Follow Word Op</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myBash.FollowWordOp
   * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getFollowWordOp()
   * @generated
   */
  int FOLLOW_WORD_OP = 55;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Bash <em>Bash</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bash</em>'.
   * @see org.xtext.example.mydsl.myBash.Bash
   * @generated
   */
  EClass getBash();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.Bash#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.xtext.example.mydsl.myBash.Bash#getCommands()
   * @see #getBash()
   * @generated
   */
  EReference getBash_Commands();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.Bash#isError <em>Error</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Error</em>'.
   * @see org.xtext.example.mydsl.myBash.Bash#isError()
   * @see #getBash()
   * @generated
   */
  EAttribute getBash_Error();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CompoundList <em>Compound List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compound List</em>'.
   * @see org.xtext.example.mydsl.myBash.CompoundList
   * @generated
   */
  EClass getCompoundList();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.CompoundList#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.xtext.example.mydsl.myBash.CompoundList#getCommands()
   * @see #getCompoundList()
   * @generated
   */
  EReference getCompoundList_Commands();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CommandUnit <em>Command Unit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Command Unit</em>'.
   * @see org.xtext.example.mydsl.myBash.CommandUnit
   * @generated
   */
  EClass getCommandUnit();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.CommandUnit#isBackend <em>Backend</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Backend</em>'.
   * @see org.xtext.example.mydsl.myBash.CommandUnit#isBackend()
   * @see #getCommandUnit()
   * @generated
   */
  EAttribute getCommandUnit_Backend();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.FunctionDefine <em>Function Define</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Define</em>'.
   * @see org.xtext.example.mydsl.myBash.FunctionDefine
   * @generated
   */
  EClass getFunctionDefine();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.FunctionDefine#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.myBash.FunctionDefine#getName()
   * @see #getFunctionDefine()
   * @generated
   */
  EAttribute getFunctionDefine_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.FunctionDefine#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.myBash.FunctionDefine#getBody()
   * @see #getFunctionDefine()
   * @generated
   */
  EReference getFunctionDefine_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.SimpleCommand <em>Simple Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Command</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleCommand
   * @generated
   */
  EClass getSimpleCommand();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.SimpleCommand#getAssignments <em>Assignments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Assignments</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleCommand#getAssignments()
   * @see #getSimpleCommand()
   * @generated
   */
  EReference getSimpleCommand_Assignments();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.SimpleCommand#getCommand <em>Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Command</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleCommand#getCommand()
   * @see #getSimpleCommand()
   * @generated
   */
  EReference getSimpleCommand_Command();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.SimpleCommand#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleCommand#getParameters()
   * @see #getSimpleCommand()
   * @generated
   */
  EReference getSimpleCommand_Parameters();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.SimpleCommand#getR <em>R</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>R</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleCommand#getR()
   * @see #getSimpleCommand()
   * @generated
   */
  EReference getSimpleCommand_R();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ShellCommand <em>Shell Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Shell Command</em>'.
   * @see org.xtext.example.mydsl.myBash.ShellCommand
   * @generated
   */
  EClass getShellCommand();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.ShellCommand#getRedirects <em>Redirects</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Redirects</em>'.
   * @see org.xtext.example.mydsl.myBash.ShellCommand#getRedirects()
   * @see #getShellCommand()
   * @generated
   */
  EReference getShellCommand_Redirects();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.GroupCommand <em>Group Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Group Command</em>'.
   * @see org.xtext.example.mydsl.myBash.GroupCommand
   * @generated
   */
  EClass getGroupCommand();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.GroupCommand#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.myBash.GroupCommand#getBody()
   * @see #getGroupCommand()
   * @generated
   */
  EReference getGroupCommand_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CondCommand <em>Cond Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cond Command</em>'.
   * @see org.xtext.example.mydsl.myBash.CondCommand
   * @generated
   */
  EClass getCondCommand();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CondCommand#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.CondCommand#getExpression()
   * @see #getCondCommand()
   * @generated
   */
  EReference getCondCommand_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ArithmeticCommand <em>Arithmetic Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic Command</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticCommand
   * @generated
   */
  EClass getArithmeticCommand();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ArithmeticCommand#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticCommand#getExpression()
   * @see #getArithmeticCommand()
   * @generated
   */
  EReference getArithmeticCommand_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Subshell <em>Subshell</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subshell</em>'.
   * @see org.xtext.example.mydsl.myBash.Subshell
   * @generated
   */
  EClass getSubshell();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.Subshell#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.myBash.Subshell#getBody()
   * @see #getSubshell()
   * @generated
   */
  EReference getSubshell_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Word <em>Word</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Word</em>'.
   * @see org.xtext.example.mydsl.myBash.Word
   * @generated
   */
  EClass getWord();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.Word#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.example.mydsl.myBash.Word#getElements()
   * @see #getWord()
   * @generated
   */
  EReference getWord_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CaseStatement <em>Case Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case Statement</em>'.
   * @see org.xtext.example.mydsl.myBash.CaseStatement
   * @generated
   */
  EClass getCaseStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CaseStatement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.myBash.CaseStatement#getVariable()
   * @see #getCaseStatement()
   * @generated
   */
  EReference getCaseStatement_Variable();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.CaseStatement#getPatterns <em>Patterns</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Patterns</em>'.
   * @see org.xtext.example.mydsl.myBash.CaseStatement#getPatterns()
   * @see #getCaseStatement()
   * @generated
   */
  EReference getCaseStatement_Patterns();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CasePattern <em>Case Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case Pattern</em>'.
   * @see org.xtext.example.mydsl.myBash.CasePattern
   * @generated
   */
  EClass getCasePattern();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CasePattern#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.example.mydsl.myBash.CasePattern#getCondition()
   * @see #getCasePattern()
   * @generated
   */
  EReference getCasePattern_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CasePattern#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.myBash.CasePattern#getBody()
   * @see #getCasePattern()
   * @generated
   */
  EReference getCasePattern_Body();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.CasePattern#getFollow <em>Follow</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Follow</em>'.
   * @see org.xtext.example.mydsl.myBash.CasePattern#getFollow()
   * @see #getCasePattern()
   * @generated
   */
  EAttribute getCasePattern_Follow();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Pattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern</em>'.
   * @see org.xtext.example.mydsl.myBash.Pattern
   * @generated
   */
  EClass getPattern();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.Pattern#getParts <em>Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parts</em>'.
   * @see org.xtext.example.mydsl.myBash.Pattern#getParts()
   * @see #getPattern()
   * @generated
   */
  EReference getPattern_Parts();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.IfStatement <em>If Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Statement</em>'.
   * @see org.xtext.example.mydsl.myBash.IfStatement
   * @generated
   */
  EClass getIfStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.IfStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.example.mydsl.myBash.IfStatement#getCondition()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.IfStatement#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see org.xtext.example.mydsl.myBash.IfStatement#getThen()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Then();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.IfStatement#getElseIfBlock <em>Else If Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else If Block</em>'.
   * @see org.xtext.example.mydsl.myBash.IfStatement#getElseIfBlock()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_ElseIfBlock();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.IfStatement#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see org.xtext.example.mydsl.myBash.IfStatement#getElse()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Else();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ElseIfBlock <em>Else If Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Else If Block</em>'.
   * @see org.xtext.example.mydsl.myBash.ElseIfBlock
   * @generated
   */
  EClass getElseIfBlock();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ElseIfBlock#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.example.mydsl.myBash.ElseIfBlock#getCondition()
   * @see #getElseIfBlock()
   * @generated
   */
  EReference getElseIfBlock_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ElseIfBlock#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see org.xtext.example.mydsl.myBash.ElseIfBlock#getThen()
   * @see #getElseIfBlock()
   * @generated
   */
  EReference getElseIfBlock_Then();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ForStatement <em>For Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Statement</em>'.
   * @see org.xtext.example.mydsl.myBash.ForStatement
   * @generated
   */
  EClass getForStatement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ForStatement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.myBash.ForStatement#getVariable()
   * @see #getForStatement()
   * @generated
   */
  EAttribute getForStatement_Variable();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.ForStatement#getWords <em>Words</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Words</em>'.
   * @see org.xtext.example.mydsl.myBash.ForStatement#getWords()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_Words();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ForStatement#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.myBash.ForStatement#getBody()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.WhileStatement <em>While Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While Statement</em>'.
   * @see org.xtext.example.mydsl.myBash.WhileStatement
   * @generated
   */
  EClass getWhileStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.WhileStatement#getC <em>C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>C</em>'.
   * @see org.xtext.example.mydsl.myBash.WhileStatement#getC()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_C();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.WhileStatement#getD <em>D</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>D</em>'.
   * @see org.xtext.example.mydsl.myBash.WhileStatement#getD()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_D();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Redirection <em>Redirection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Redirection</em>'.
   * @see org.xtext.example.mydsl.myBash.Redirection
   * @generated
   */
  EClass getRedirection();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.Redirection#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.Redirection#getOp()
   * @see #getRedirection()
   * @generated
   */
  EAttribute getRedirection_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.Redirection#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Target</em>'.
   * @see org.xtext.example.mydsl.myBash.Redirection#getTarget()
   * @see #getRedirection()
   * @generated
   */
  EReference getRedirection_Target();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Array <em>Array</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Array</em>'.
   * @see org.xtext.example.mydsl.myBash.Array
   * @generated
   */
  EClass getArray();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.Array#getWords <em>Words</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Words</em>'.
   * @see org.xtext.example.mydsl.myBash.Array#getWords()
   * @see #getArray()
   * @generated
   */
  EReference getArray_Words();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see org.xtext.example.mydsl.myBash.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.myBash.Literal#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Values</em>'.
   * @see org.xtext.example.mydsl.myBash.Literal#getValues()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see org.xtext.example.mydsl.myBash.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.Assignment#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.myBash.Assignment#getName()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.Assignment#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Index</em>'.
   * @see org.xtext.example.mydsl.myBash.Assignment#getIndex()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Index();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.Assignment#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.example.mydsl.myBash.Assignment#getValue()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.LAssignment <em>LAssignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>LAssignment</em>'.
   * @see org.xtext.example.mydsl.myBash.LAssignment
   * @generated
   */
  EClass getLAssignment();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.LAssignment#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.myBash.LAssignment#getName()
   * @see #getLAssignment()
   * @generated
   */
  EAttribute getLAssignment_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.LAssignment#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Index</em>'.
   * @see org.xtext.example.mydsl.myBash.LAssignment#getIndex()
   * @see #getLAssignment()
   * @generated
   */
  EReference getLAssignment_Index();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.LAssignment#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.example.mydsl.myBash.LAssignment#getValue()
   * @see #getLAssignment()
   * @generated
   */
  EReference getLAssignment_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Assignable <em>Assignable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignable</em>'.
   * @see org.xtext.example.mydsl.myBash.Assignable
   * @generated
   */
  EClass getAssignable();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.DQString <em>DQ String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>DQ String</em>'.
   * @see org.xtext.example.mydsl.myBash.DQString
   * @generated
   */
  EClass getDQString();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.DQString#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.example.mydsl.myBash.DQString#getElements()
   * @see #getDQString()
   * @generated
   */
  EReference getDQString_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Expansion <em>Expansion</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expansion</em>'.
   * @see org.xtext.example.mydsl.myBash.Expansion
   * @generated
   */
  EClass getExpansion();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.WordElement <em>Word Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Word Element</em>'.
   * @see org.xtext.example.mydsl.myBash.WordElement
   * @generated
   */
  EClass getWordElement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CondExpression <em>Cond Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cond Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.CondExpression
   * @generated
   */
  EClass getCondExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CondConst <em>Cond Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cond Const</em>'.
   * @see org.xtext.example.mydsl.myBash.CondConst
   * @generated
   */
  EClass getCondConst();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CondConst#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.example.mydsl.myBash.CondConst#getValue()
   * @see #getCondConst()
   * @generated
   */
  EReference getCondConst_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.RegularExpression <em>Regular Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Regular Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.RegularExpression
   * @generated
   */
  EClass getRegularExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.RegularExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.myBash.RegularExpression#getLeft()
   * @see #getRegularExpression()
   * @generated
   */
  EReference getRegularExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.RegularExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.RegularExpression#getOp()
   * @see #getRegularExpression()
   * @generated
   */
  EAttribute getRegularExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.RegularExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.myBash.RegularExpression#getRight()
   * @see #getRegularExpression()
   * @generated
   */
  EReference getRegularExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.RegularConst <em>Regular Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Regular Const</em>'.
   * @see org.xtext.example.mydsl.myBash.RegularConst
   * @generated
   */
  EClass getRegularConst();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.myBash.RegularConst#getParts <em>Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parts</em>'.
   * @see org.xtext.example.mydsl.myBash.RegularConst#getParts()
   * @see #getRegularConst()
   * @generated
   */
  EReference getRegularConst_Parts();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ArithmeticExpansion <em>Arithmetic Expansion</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic Expansion</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticExpansion
   * @generated
   */
  EClass getArithmeticExpansion();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ArithmeticExpansion#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticExpansion#getExpression()
   * @see #getArithmeticExpansion()
   * @generated
   */
  EReference getArithmeticExpansion_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.IndexEvaluation <em>Index Evaluation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index Evaluation</em>'.
   * @see org.xtext.example.mydsl.myBash.IndexEvaluation
   * @generated
   */
  EClass getIndexEvaluation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.IndexEvaluation#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see org.xtext.example.mydsl.myBash.IndexEvaluation#getEnd()
   * @see #getIndexEvaluation()
   * @generated
   */
  EAttribute getIndexEvaluation_End();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.IndexEvaluation#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.IndexEvaluation#getExpression()
   * @see #getIndexEvaluation()
   * @generated
   */
  EReference getIndexEvaluation_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ParameterExpansion <em>Parameter Expansion</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameter Expansion</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterExpansion
   * @generated
   */
  EClass getParameterExpansion();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ParameterExpansion#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterExpansion#getEnd()
   * @see #getParameterExpansion()
   * @generated
   */
  EAttribute getParameterExpansion_End();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.myBash.ParameterExpansion#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterExpansion#getRef()
   * @see #getParameterExpansion()
   * @generated
   */
  EReference getParameterExpansion_Ref();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ParameterExpansion#isHash <em>Hash</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Hash</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterExpansion#isHash()
   * @see #getParameterExpansion()
   * @generated
   */
  EAttribute getParameterExpansion_Hash();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ParameterExpansion#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterExpansion#getValue()
   * @see #getParameterExpansion()
   * @generated
   */
  EAttribute getParameterExpansion_Value();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ParameterExpansion#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Index</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterExpansion#getIndex()
   * @see #getParameterExpansion()
   * @generated
   */
  EReference getParameterExpansion_Index();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ParameterExpansion#getReplacer <em>Replacer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Replacer</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterExpansion#getReplacer()
   * @see #getParameterExpansion()
   * @generated
   */
  EReference getParameterExpansion_Replacer();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ParameterProcessor <em>Parameter Processor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameter Processor</em>'.
   * @see org.xtext.example.mydsl.myBash.ParameterProcessor
   * @generated
   */
  EClass getParameterProcessor();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CommandSubstitution <em>Command Substitution</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Command Substitution</em>'.
   * @see org.xtext.example.mydsl.myBash.CommandSubstitution
   * @generated
   */
  EClass getCommandSubstitution();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.CommandSubstitution#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see org.xtext.example.mydsl.myBash.CommandSubstitution#getEnd()
   * @see #getCommandSubstitution()
   * @generated
   */
  EAttribute getCommandSubstitution_End();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CommandSubstitution#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands</em>'.
   * @see org.xtext.example.mydsl.myBash.CommandSubstitution#getCommands()
   * @see #getCommandSubstitution()
   * @generated
   */
  EReference getCommandSubstitution_Commands();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ProcessSubstitution <em>Process Substitution</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Process Substitution</em>'.
   * @see org.xtext.example.mydsl.myBash.ProcessSubstitution
   * @generated
   */
  EClass getProcessSubstitution();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ProcessSubstitution#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see org.xtext.example.mydsl.myBash.ProcessSubstitution#getEnd()
   * @see #getProcessSubstitution()
   * @generated
   */
  EAttribute getProcessSubstitution_End();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ProcessSubstitution#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.ProcessSubstitution#getOp()
   * @see #getProcessSubstitution()
   * @generated
   */
  EAttribute getProcessSubstitution_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ProcessSubstitution#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.myBash.ProcessSubstitution#getBody()
   * @see #getProcessSubstitution()
   * @generated
   */
  EReference getProcessSubstitution_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.VariableId <em>Variable Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Id</em>'.
   * @see org.xtext.example.mydsl.myBash.VariableId
   * @generated
   */
  EClass getVariableId();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.myBash.VariableId#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see org.xtext.example.mydsl.myBash.VariableId#getRef()
   * @see #getVariableId()
   * @generated
   */
  EReference getVariableId_Ref();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.SimpleList <em>Simple List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple List</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleList
   * @generated
   */
  EClass getSimpleList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.SimpleList#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleList#getLeft()
   * @see #getSimpleList()
   * @generated
   */
  EReference getSimpleList_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.SimpleList#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleList#getOp()
   * @see #getSimpleList()
   * @generated
   */
  EAttribute getSimpleList_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.SimpleList#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.myBash.SimpleList#getRight()
   * @see #getSimpleList()
   * @generated
   */
  EReference getSimpleList_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.PipelineCommand <em>Pipeline Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pipeline Command</em>'.
   * @see org.xtext.example.mydsl.myBash.PipelineCommand
   * @generated
   */
  EClass getPipelineCommand();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.PipelineCommand#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see org.xtext.example.mydsl.myBash.PipelineCommand#isNot()
   * @see #getPipelineCommand()
   * @generated
   */
  EAttribute getPipelineCommand_Not();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.PipelineCommand#getPipeline <em>Pipeline</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pipeline</em>'.
   * @see org.xtext.example.mydsl.myBash.PipelineCommand#getPipeline()
   * @see #getPipelineCommand()
   * @generated
   */
  EReference getPipelineCommand_Pipeline();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.Pipeline <em>Pipeline</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pipeline</em>'.
   * @see org.xtext.example.mydsl.myBash.Pipeline
   * @generated
   */
  EClass getPipeline();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.Pipeline#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.myBash.Pipeline#getLeft()
   * @see #getPipeline()
   * @generated
   */
  EReference getPipeline_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.Pipeline#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.Pipeline#getOp()
   * @see #getPipeline()
   * @generated
   */
  EAttribute getPipeline_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.Pipeline#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.myBash.Pipeline#getRight()
   * @see #getPipeline()
   * @generated
   */
  EReference getPipeline_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CommandName <em>Command Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Command Name</em>'.
   * @see org.xtext.example.mydsl.myBash.CommandName
   * @generated
   */
  EClass getCommandName();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.myBash.CommandName#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see org.xtext.example.mydsl.myBash.CommandName#getRef()
   * @see #getCommandName()
   * @generated
   */
  EReference getCommandName_Ref();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ArithmeticForStatement <em>Arithmetic For Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic For Statement</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticForStatement
   * @generated
   */
  EClass getArithmeticForStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ArithmeticForStatement#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticForStatement#getInit()
   * @see #getArithmeticForStatement()
   * @generated
   */
  EReference getArithmeticForStatement_Init();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ArithmeticForStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticForStatement#getCondition()
   * @see #getArithmeticForStatement()
   * @generated
   */
  EReference getArithmeticForStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ArithmeticForStatement#getStep <em>Step</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Step</em>'.
   * @see org.xtext.example.mydsl.myBash.ArithmeticForStatement#getStep()
   * @see #getArithmeticForStatement()
   * @generated
   */
  EReference getArithmeticForStatement_Step();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CondUnaryExpression <em>Cond Unary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cond Unary Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.CondUnaryExpression
   * @generated
   */
  EClass getCondUnaryExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CondUnaryExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.myBash.CondUnaryExpression#getLeft()
   * @see #getCondUnaryExpression()
   * @generated
   */
  EReference getCondUnaryExpression_Left();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CondUnaryExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.myBash.CondUnaryExpression#getRight()
   * @see #getCondUnaryExpression()
   * @generated
   */
  EReference getCondUnaryExpression_Right();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.CondUnaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.CondUnaryExpression#getOp()
   * @see #getCondUnaryExpression()
   * @generated
   */
  EAttribute getCondUnaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CondUnaryExpression#getOperand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operand</em>'.
   * @see org.xtext.example.mydsl.myBash.CondUnaryExpression#getOperand()
   * @see #getCondUnaryExpression()
   * @generated
   */
  EReference getCondUnaryExpression_Operand();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.CondBinaryExpression <em>Cond Binary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cond Binary Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.CondBinaryExpression
   * @generated
   */
  EClass getCondBinaryExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CondBinaryExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.myBash.CondBinaryExpression#getLeft()
   * @see #getCondBinaryExpression()
   * @generated
   */
  EReference getCondBinaryExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.CondBinaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.CondBinaryExpression#getOp()
   * @see #getCondBinaryExpression()
   * @generated
   */
  EAttribute getCondBinaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.CondBinaryExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.myBash.CondBinaryExpression#getRight()
   * @see #getCondBinaryExpression()
   * @generated
   */
  EReference getCondBinaryExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.SingleProcessor <em>Single Processor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Single Processor</em>'.
   * @see org.xtext.example.mydsl.myBash.SingleProcessor
   * @generated
   */
  EClass getSingleProcessor();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.SingleProcessor#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.SingleProcessor#getOp()
   * @see #getSingleProcessor()
   * @generated
   */
  EAttribute getSingleProcessor_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.SingleProcessor#getWord <em>Word</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Word</em>'.
   * @see org.xtext.example.mydsl.myBash.SingleProcessor#getWord()
   * @see #getSingleProcessor()
   * @generated
   */
  EReference getSingleProcessor_Word();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ReplaceProcessor <em>Replace Processor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Replace Processor</em>'.
   * @see org.xtext.example.mydsl.myBash.ReplaceProcessor
   * @generated
   */
  EClass getReplaceProcessor();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ReplaceProcessor#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.ReplaceProcessor#getOp()
   * @see #getReplaceProcessor()
   * @generated
   */
  EAttribute getReplaceProcessor_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ReplaceProcessor#getOriginal <em>Original</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Original</em>'.
   * @see org.xtext.example.mydsl.myBash.ReplaceProcessor#getOriginal()
   * @see #getReplaceProcessor()
   * @generated
   */
  EReference getReplaceProcessor_Original();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ReplaceProcessor#getReplace <em>Replace</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Replace</em>'.
   * @see org.xtext.example.mydsl.myBash.ReplaceProcessor#getReplace()
   * @see #getReplaceProcessor()
   * @generated
   */
  EReference getReplaceProcessor_Replace();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.SubStringProcessor <em>Sub String Processor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sub String Processor</em>'.
   * @see org.xtext.example.mydsl.myBash.SubStringProcessor
   * @generated
   */
  EClass getSubStringProcessor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.SubStringProcessor#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Start</em>'.
   * @see org.xtext.example.mydsl.myBash.SubStringProcessor#getStart()
   * @see #getSubStringProcessor()
   * @generated
   */
  EReference getSubStringProcessor_Start();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.SubStringProcessor#getLength <em>Length</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Length</em>'.
   * @see org.xtext.example.mydsl.myBash.SubStringProcessor#getLength()
   * @see #getSubStringProcessor()
   * @generated
   */
  EReference getSubStringProcessor_Length();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.BinaryExpression <em>Binary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Binary Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.BinaryExpression
   * @generated
   */
  EClass getBinaryExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.BinaryExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.myBash.BinaryExpression#getLeft()
   * @see #getBinaryExpression()
   * @generated
   */
  EReference getBinaryExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.BinaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.BinaryExpression#getOp()
   * @see #getBinaryExpression()
   * @generated
   */
  EAttribute getBinaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.BinaryExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.myBash.BinaryExpression#getRight()
   * @see #getBinaryExpression()
   * @generated
   */
  EReference getBinaryExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ConditionalOperator <em>Conditional Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional Operator</em>'.
   * @see org.xtext.example.mydsl.myBash.ConditionalOperator
   * @generated
   */
  EClass getConditionalOperator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ConditionalOperator#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.example.mydsl.myBash.ConditionalOperator#getCondition()
   * @see #getConditionalOperator()
   * @generated
   */
  EReference getConditionalOperator_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ConditionalOperator#getFirst <em>First</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>First</em>'.
   * @see org.xtext.example.mydsl.myBash.ConditionalOperator#getFirst()
   * @see #getConditionalOperator()
   * @generated
   */
  EReference getConditionalOperator_First();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.ConditionalOperator#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.myBash.ConditionalOperator#getRight()
   * @see #getConditionalOperator()
   * @generated
   */
  EReference getConditionalOperator_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.PrefixExpression <em>Prefix Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Prefix Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.PrefixExpression
   * @generated
   */
  EClass getPrefixExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.PrefixExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.PrefixExpression#getOp()
   * @see #getPrefixExpression()
   * @generated
   */
  EAttribute getPrefixExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.PrefixExpression#getOperand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operand</em>'.
   * @see org.xtext.example.mydsl.myBash.PrefixExpression#getOperand()
   * @see #getPrefixExpression()
   * @generated
   */
  EReference getPrefixExpression_Operand();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.SuffixExpression <em>Suffix Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Suffix Expression</em>'.
   * @see org.xtext.example.mydsl.myBash.SuffixExpression
   * @generated
   */
  EClass getSuffixExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.SuffixExpression#getOperand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operand</em>'.
   * @see org.xtext.example.mydsl.myBash.SuffixExpression#getOperand()
   * @see #getSuffixExpression()
   * @generated
   */
  EReference getSuffixExpression_Operand();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.SuffixExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.myBash.SuffixExpression#getOp()
   * @see #getSuffixExpression()
   * @generated
   */
  EAttribute getSuffixExpression_Op();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.ConstPrimaryItem <em>Const Primary Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Const Primary Item</em>'.
   * @see org.xtext.example.mydsl.myBash.ConstPrimaryItem
   * @generated
   */
  EClass getConstPrimaryItem();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ConstPrimaryItem#getPrefix <em>Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Prefix</em>'.
   * @see org.xtext.example.mydsl.myBash.ConstPrimaryItem#getPrefix()
   * @see #getConstPrimaryItem()
   * @generated
   */
  EAttribute getConstPrimaryItem_Prefix();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.ConstPrimaryItem#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.example.mydsl.myBash.ConstPrimaryItem#getValue()
   * @see #getConstPrimaryItem()
   * @generated
   */
  EAttribute getConstPrimaryItem_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myBash.PrimaryItem <em>Primary Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Item</em>'.
   * @see org.xtext.example.mydsl.myBash.PrimaryItem
   * @generated
   */
  EClass getPrimaryItem();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myBash.PrimaryItem#getPrefix <em>Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Prefix</em>'.
   * @see org.xtext.example.mydsl.myBash.PrimaryItem#getPrefix()
   * @see #getPrimaryItem()
   * @generated
   */
  EAttribute getPrimaryItem_Prefix();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myBash.PrimaryItem#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.example.mydsl.myBash.PrimaryItem#getValue()
   * @see #getPrimaryItem()
   * @generated
   */
  EReference getPrimaryItem_Value();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.mydsl.myBash.FollowWordOp <em>Follow Word Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Follow Word Op</em>'.
   * @see org.xtext.example.mydsl.myBash.FollowWordOp
   * @generated
   */
  EEnum getFollowWordOp();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MyBashFactory getMyBashFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.BashImpl <em>Bash</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.BashImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getBash()
     * @generated
     */
    EClass BASH = eINSTANCE.getBash();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASH__COMMANDS = eINSTANCE.getBash_Commands();

    /**
     * The meta object literal for the '<em><b>Error</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BASH__ERROR = eINSTANCE.getBash_Error();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CompoundListImpl <em>Compound List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CompoundListImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCompoundList()
     * @generated
     */
    EClass COMPOUND_LIST = eINSTANCE.getCompoundList();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOUND_LIST__COMMANDS = eINSTANCE.getCompoundList_Commands();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CommandUnitImpl <em>Command Unit</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CommandUnitImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCommandUnit()
     * @generated
     */
    EClass COMMAND_UNIT = eINSTANCE.getCommandUnit();

    /**
     * The meta object literal for the '<em><b>Backend</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMAND_UNIT__BACKEND = eINSTANCE.getCommandUnit_Backend();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.FunctionDefineImpl <em>Function Define</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.FunctionDefineImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getFunctionDefine()
     * @generated
     */
    EClass FUNCTION_DEFINE = eINSTANCE.getFunctionDefine();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_DEFINE__NAME = eINSTANCE.getFunctionDefine_Name();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DEFINE__BODY = eINSTANCE.getFunctionDefine_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.SimpleCommandImpl <em>Simple Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.SimpleCommandImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSimpleCommand()
     * @generated
     */
    EClass SIMPLE_COMMAND = eINSTANCE.getSimpleCommand();

    /**
     * The meta object literal for the '<em><b>Assignments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_COMMAND__ASSIGNMENTS = eINSTANCE.getSimpleCommand_Assignments();

    /**
     * The meta object literal for the '<em><b>Command</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_COMMAND__COMMAND = eINSTANCE.getSimpleCommand_Command();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_COMMAND__PARAMETERS = eINSTANCE.getSimpleCommand_Parameters();

    /**
     * The meta object literal for the '<em><b>R</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_COMMAND__R = eINSTANCE.getSimpleCommand_R();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ShellCommandImpl <em>Shell Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ShellCommandImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getShellCommand()
     * @generated
     */
    EClass SHELL_COMMAND = eINSTANCE.getShellCommand();

    /**
     * The meta object literal for the '<em><b>Redirects</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHELL_COMMAND__REDIRECTS = eINSTANCE.getShellCommand_Redirects();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.GroupCommandImpl <em>Group Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.GroupCommandImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getGroupCommand()
     * @generated
     */
    EClass GROUP_COMMAND = eINSTANCE.getGroupCommand();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GROUP_COMMAND__BODY = eINSTANCE.getGroupCommand_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CondCommandImpl <em>Cond Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CondCommandImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondCommand()
     * @generated
     */
    EClass COND_COMMAND = eINSTANCE.getCondCommand();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COND_COMMAND__EXPRESSION = eINSTANCE.getCondCommand_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ArithmeticCommandImpl <em>Arithmetic Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ArithmeticCommandImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArithmeticCommand()
     * @generated
     */
    EClass ARITHMETIC_COMMAND = eINSTANCE.getArithmeticCommand();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_COMMAND__EXPRESSION = eINSTANCE.getArithmeticCommand_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.SubshellImpl <em>Subshell</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.SubshellImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSubshell()
     * @generated
     */
    EClass SUBSHELL = eINSTANCE.getSubshell();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBSHELL__BODY = eINSTANCE.getSubshell_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.WordImpl <em>Word</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.WordImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getWord()
     * @generated
     */
    EClass WORD = eINSTANCE.getWord();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WORD__ELEMENTS = eINSTANCE.getWord_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CaseStatementImpl <em>Case Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CaseStatementImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCaseStatement()
     * @generated
     */
    EClass CASE_STATEMENT = eINSTANCE.getCaseStatement();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_STATEMENT__VARIABLE = eINSTANCE.getCaseStatement_Variable();

    /**
     * The meta object literal for the '<em><b>Patterns</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_STATEMENT__PATTERNS = eINSTANCE.getCaseStatement_Patterns();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CasePatternImpl <em>Case Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CasePatternImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCasePattern()
     * @generated
     */
    EClass CASE_PATTERN = eINSTANCE.getCasePattern();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_PATTERN__CONDITION = eINSTANCE.getCasePattern_Condition();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_PATTERN__BODY = eINSTANCE.getCasePattern_Body();

    /**
     * The meta object literal for the '<em><b>Follow</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CASE_PATTERN__FOLLOW = eINSTANCE.getCasePattern_Follow();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.PatternImpl <em>Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.PatternImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPattern()
     * @generated
     */
    EClass PATTERN = eINSTANCE.getPattern();

    /**
     * The meta object literal for the '<em><b>Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN__PARTS = eINSTANCE.getPattern_Parts();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.IfStatementImpl <em>If Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.IfStatementImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getIfStatement()
     * @generated
     */
    EClass IF_STATEMENT = eINSTANCE.getIfStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__CONDITION = eINSTANCE.getIfStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__THEN = eINSTANCE.getIfStatement_Then();

    /**
     * The meta object literal for the '<em><b>Else If Block</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__ELSE_IF_BLOCK = eINSTANCE.getIfStatement_ElseIfBlock();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__ELSE = eINSTANCE.getIfStatement_Else();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ElseIfBlockImpl <em>Else If Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ElseIfBlockImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getElseIfBlock()
     * @generated
     */
    EClass ELSE_IF_BLOCK = eINSTANCE.getElseIfBlock();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE_IF_BLOCK__CONDITION = eINSTANCE.getElseIfBlock_Condition();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE_IF_BLOCK__THEN = eINSTANCE.getElseIfBlock_Then();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ForStatementImpl <em>For Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ForStatementImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getForStatement()
     * @generated
     */
    EClass FOR_STATEMENT = eINSTANCE.getForStatement();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOR_STATEMENT__VARIABLE = eINSTANCE.getForStatement_Variable();

    /**
     * The meta object literal for the '<em><b>Words</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__WORDS = eINSTANCE.getForStatement_Words();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__BODY = eINSTANCE.getForStatement_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.WhileStatementImpl <em>While Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.WhileStatementImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getWhileStatement()
     * @generated
     */
    EClass WHILE_STATEMENT = eINSTANCE.getWhileStatement();

    /**
     * The meta object literal for the '<em><b>C</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__C = eINSTANCE.getWhileStatement_C();

    /**
     * The meta object literal for the '<em><b>D</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__D = eINSTANCE.getWhileStatement_D();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.RedirectionImpl <em>Redirection</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.RedirectionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getRedirection()
     * @generated
     */
    EClass REDIRECTION = eINSTANCE.getRedirection();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REDIRECTION__OP = eINSTANCE.getRedirection_Op();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REDIRECTION__TARGET = eINSTANCE.getRedirection_Target();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ArrayImpl <em>Array</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ArrayImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArray()
     * @generated
     */
    EClass ARRAY = eINSTANCE.getArray();

    /**
     * The meta object literal for the '<em><b>Words</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY__WORDS = eINSTANCE.getArray_Words();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.LiteralImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__VALUES = eINSTANCE.getLiteral_Values();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.AssignmentImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__NAME = eINSTANCE.getAssignment_Name();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__INDEX = eINSTANCE.getAssignment_Index();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__VALUE = eINSTANCE.getAssignment_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.LAssignmentImpl <em>LAssignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.LAssignmentImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getLAssignment()
     * @generated
     */
    EClass LASSIGNMENT = eINSTANCE.getLAssignment();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LASSIGNMENT__NAME = eINSTANCE.getLAssignment_Name();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LASSIGNMENT__INDEX = eINSTANCE.getLAssignment_Index();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LASSIGNMENT__VALUE = eINSTANCE.getLAssignment_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.AssignableImpl <em>Assignable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.AssignableImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getAssignable()
     * @generated
     */
    EClass ASSIGNABLE = eINSTANCE.getAssignable();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.DQStringImpl <em>DQ String</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.DQStringImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getDQString()
     * @generated
     */
    EClass DQ_STRING = eINSTANCE.getDQString();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DQ_STRING__ELEMENTS = eINSTANCE.getDQString_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ExpansionImpl <em>Expansion</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ExpansionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getExpansion()
     * @generated
     */
    EClass EXPANSION = eINSTANCE.getExpansion();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.WordElementImpl <em>Word Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.WordElementImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getWordElement()
     * @generated
     */
    EClass WORD_ELEMENT = eINSTANCE.getWordElement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CondExpressionImpl <em>Cond Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CondExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondExpression()
     * @generated
     */
    EClass COND_EXPRESSION = eINSTANCE.getCondExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CondConstImpl <em>Cond Const</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CondConstImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondConst()
     * @generated
     */
    EClass COND_CONST = eINSTANCE.getCondConst();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COND_CONST__VALUE = eINSTANCE.getCondConst_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.RegularExpressionImpl <em>Regular Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.RegularExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getRegularExpression()
     * @generated
     */
    EClass REGULAR_EXPRESSION = eINSTANCE.getRegularExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REGULAR_EXPRESSION__LEFT = eINSTANCE.getRegularExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REGULAR_EXPRESSION__OP = eINSTANCE.getRegularExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REGULAR_EXPRESSION__RIGHT = eINSTANCE.getRegularExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.RegularConstImpl <em>Regular Const</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.RegularConstImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getRegularConst()
     * @generated
     */
    EClass REGULAR_CONST = eINSTANCE.getRegularConst();

    /**
     * The meta object literal for the '<em><b>Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REGULAR_CONST__PARTS = eINSTANCE.getRegularConst_Parts();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ArithmeticExpansionImpl <em>Arithmetic Expansion</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ArithmeticExpansionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArithmeticExpansion()
     * @generated
     */
    EClass ARITHMETIC_EXPANSION = eINSTANCE.getArithmeticExpansion();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_EXPANSION__EXPRESSION = eINSTANCE.getArithmeticExpansion_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.IndexEvaluationImpl <em>Index Evaluation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.IndexEvaluationImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getIndexEvaluation()
     * @generated
     */
    EClass INDEX_EVALUATION = eINSTANCE.getIndexEvaluation();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INDEX_EVALUATION__END = eINSTANCE.getIndexEvaluation_End();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_EVALUATION__EXPRESSION = eINSTANCE.getIndexEvaluation_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ParameterExpansionImpl <em>Parameter Expansion</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ParameterExpansionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getParameterExpansion()
     * @generated
     */
    EClass PARAMETER_EXPANSION = eINSTANCE.getParameterExpansion();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER_EXPANSION__END = eINSTANCE.getParameterExpansion_End();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_EXPANSION__REF = eINSTANCE.getParameterExpansion_Ref();

    /**
     * The meta object literal for the '<em><b>Hash</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER_EXPANSION__HASH = eINSTANCE.getParameterExpansion_Hash();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER_EXPANSION__VALUE = eINSTANCE.getParameterExpansion_Value();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_EXPANSION__INDEX = eINSTANCE.getParameterExpansion_Index();

    /**
     * The meta object literal for the '<em><b>Replacer</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_EXPANSION__REPLACER = eINSTANCE.getParameterExpansion_Replacer();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ParameterProcessorImpl <em>Parameter Processor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ParameterProcessorImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getParameterProcessor()
     * @generated
     */
    EClass PARAMETER_PROCESSOR = eINSTANCE.getParameterProcessor();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CommandSubstitutionImpl <em>Command Substitution</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CommandSubstitutionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCommandSubstitution()
     * @generated
     */
    EClass COMMAND_SUBSTITUTION = eINSTANCE.getCommandSubstitution();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMAND_SUBSTITUTION__END = eINSTANCE.getCommandSubstitution_End();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND_SUBSTITUTION__COMMANDS = eINSTANCE.getCommandSubstitution_Commands();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ProcessSubstitutionImpl <em>Process Substitution</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ProcessSubstitutionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getProcessSubstitution()
     * @generated
     */
    EClass PROCESS_SUBSTITUTION = eINSTANCE.getProcessSubstitution();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROCESS_SUBSTITUTION__END = eINSTANCE.getProcessSubstitution_End();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROCESS_SUBSTITUTION__OP = eINSTANCE.getProcessSubstitution_Op();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCESS_SUBSTITUTION__BODY = eINSTANCE.getProcessSubstitution_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.VariableIdImpl <em>Variable Id</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.VariableIdImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getVariableId()
     * @generated
     */
    EClass VARIABLE_ID = eINSTANCE.getVariableId();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_ID__REF = eINSTANCE.getVariableId_Ref();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.SimpleListImpl <em>Simple List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.SimpleListImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSimpleList()
     * @generated
     */
    EClass SIMPLE_LIST = eINSTANCE.getSimpleList();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_LIST__LEFT = eINSTANCE.getSimpleList_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_LIST__OP = eINSTANCE.getSimpleList_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_LIST__RIGHT = eINSTANCE.getSimpleList_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.PipelineCommandImpl <em>Pipeline Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.PipelineCommandImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPipelineCommand()
     * @generated
     */
    EClass PIPELINE_COMMAND = eINSTANCE.getPipelineCommand();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PIPELINE_COMMAND__NOT = eINSTANCE.getPipelineCommand_Not();

    /**
     * The meta object literal for the '<em><b>Pipeline</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PIPELINE_COMMAND__PIPELINE = eINSTANCE.getPipelineCommand_Pipeline();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.PipelineImpl <em>Pipeline</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.PipelineImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPipeline()
     * @generated
     */
    EClass PIPELINE = eINSTANCE.getPipeline();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PIPELINE__LEFT = eINSTANCE.getPipeline_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PIPELINE__OP = eINSTANCE.getPipeline_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PIPELINE__RIGHT = eINSTANCE.getPipeline_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CommandNameImpl <em>Command Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CommandNameImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCommandName()
     * @generated
     */
    EClass COMMAND_NAME = eINSTANCE.getCommandName();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND_NAME__REF = eINSTANCE.getCommandName_Ref();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ArithmeticForStatementImpl <em>Arithmetic For Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ArithmeticForStatementImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getArithmeticForStatement()
     * @generated
     */
    EClass ARITHMETIC_FOR_STATEMENT = eINSTANCE.getArithmeticForStatement();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_FOR_STATEMENT__INIT = eINSTANCE.getArithmeticForStatement_Init();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_FOR_STATEMENT__CONDITION = eINSTANCE.getArithmeticForStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Step</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_FOR_STATEMENT__STEP = eINSTANCE.getArithmeticForStatement_Step();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CondUnaryExpressionImpl <em>Cond Unary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CondUnaryExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondUnaryExpression()
     * @generated
     */
    EClass COND_UNARY_EXPRESSION = eINSTANCE.getCondUnaryExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COND_UNARY_EXPRESSION__LEFT = eINSTANCE.getCondUnaryExpression_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COND_UNARY_EXPRESSION__RIGHT = eINSTANCE.getCondUnaryExpression_Right();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COND_UNARY_EXPRESSION__OP = eINSTANCE.getCondUnaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Operand</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COND_UNARY_EXPRESSION__OPERAND = eINSTANCE.getCondUnaryExpression_Operand();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.CondBinaryExpressionImpl <em>Cond Binary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.CondBinaryExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getCondBinaryExpression()
     * @generated
     */
    EClass COND_BINARY_EXPRESSION = eINSTANCE.getCondBinaryExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COND_BINARY_EXPRESSION__LEFT = eINSTANCE.getCondBinaryExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COND_BINARY_EXPRESSION__OP = eINSTANCE.getCondBinaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COND_BINARY_EXPRESSION__RIGHT = eINSTANCE.getCondBinaryExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.SingleProcessorImpl <em>Single Processor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.SingleProcessorImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSingleProcessor()
     * @generated
     */
    EClass SINGLE_PROCESSOR = eINSTANCE.getSingleProcessor();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SINGLE_PROCESSOR__OP = eINSTANCE.getSingleProcessor_Op();

    /**
     * The meta object literal for the '<em><b>Word</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SINGLE_PROCESSOR__WORD = eINSTANCE.getSingleProcessor_Word();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ReplaceProcessorImpl <em>Replace Processor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ReplaceProcessorImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getReplaceProcessor()
     * @generated
     */
    EClass REPLACE_PROCESSOR = eINSTANCE.getReplaceProcessor();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REPLACE_PROCESSOR__OP = eINSTANCE.getReplaceProcessor_Op();

    /**
     * The meta object literal for the '<em><b>Original</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPLACE_PROCESSOR__ORIGINAL = eINSTANCE.getReplaceProcessor_Original();

    /**
     * The meta object literal for the '<em><b>Replace</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPLACE_PROCESSOR__REPLACE = eINSTANCE.getReplaceProcessor_Replace();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.SubStringProcessorImpl <em>Sub String Processor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.SubStringProcessorImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSubStringProcessor()
     * @generated
     */
    EClass SUB_STRING_PROCESSOR = eINSTANCE.getSubStringProcessor();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUB_STRING_PROCESSOR__START = eINSTANCE.getSubStringProcessor_Start();

    /**
     * The meta object literal for the '<em><b>Length</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUB_STRING_PROCESSOR__LENGTH = eINSTANCE.getSubStringProcessor_Length();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.BinaryExpressionImpl <em>Binary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.BinaryExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getBinaryExpression()
     * @generated
     */
    EClass BINARY_EXPRESSION = eINSTANCE.getBinaryExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_EXPRESSION__LEFT = eINSTANCE.getBinaryExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_EXPRESSION__OP = eINSTANCE.getBinaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_EXPRESSION__RIGHT = eINSTANCE.getBinaryExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ConditionalOperatorImpl <em>Conditional Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ConditionalOperatorImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getConditionalOperator()
     * @generated
     */
    EClass CONDITIONAL_OPERATOR = eINSTANCE.getConditionalOperator();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_OPERATOR__CONDITION = eINSTANCE.getConditionalOperator_Condition();

    /**
     * The meta object literal for the '<em><b>First</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_OPERATOR__FIRST = eINSTANCE.getConditionalOperator_First();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_OPERATOR__RIGHT = eINSTANCE.getConditionalOperator_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.PrefixExpressionImpl <em>Prefix Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.PrefixExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPrefixExpression()
     * @generated
     */
    EClass PREFIX_EXPRESSION = eINSTANCE.getPrefixExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PREFIX_EXPRESSION__OP = eINSTANCE.getPrefixExpression_Op();

    /**
     * The meta object literal for the '<em><b>Operand</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PREFIX_EXPRESSION__OPERAND = eINSTANCE.getPrefixExpression_Operand();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.SuffixExpressionImpl <em>Suffix Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.SuffixExpressionImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getSuffixExpression()
     * @generated
     */
    EClass SUFFIX_EXPRESSION = eINSTANCE.getSuffixExpression();

    /**
     * The meta object literal for the '<em><b>Operand</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUFFIX_EXPRESSION__OPERAND = eINSTANCE.getSuffixExpression_Operand();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SUFFIX_EXPRESSION__OP = eINSTANCE.getSuffixExpression_Op();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.ConstPrimaryItemImpl <em>Const Primary Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.ConstPrimaryItemImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getConstPrimaryItem()
     * @generated
     */
    EClass CONST_PRIMARY_ITEM = eINSTANCE.getConstPrimaryItem();

    /**
     * The meta object literal for the '<em><b>Prefix</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONST_PRIMARY_ITEM__PREFIX = eINSTANCE.getConstPrimaryItem_Prefix();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONST_PRIMARY_ITEM__VALUE = eINSTANCE.getConstPrimaryItem_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.impl.PrimaryItemImpl <em>Primary Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.impl.PrimaryItemImpl
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getPrimaryItem()
     * @generated
     */
    EClass PRIMARY_ITEM = eINSTANCE.getPrimaryItem();

    /**
     * The meta object literal for the '<em><b>Prefix</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRIMARY_ITEM__PREFIX = eINSTANCE.getPrimaryItem_Prefix();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_ITEM__VALUE = eINSTANCE.getPrimaryItem_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myBash.FollowWordOp <em>Follow Word Op</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myBash.FollowWordOp
     * @see org.xtext.example.mydsl.myBash.impl.MyBashPackageImpl#getFollowWordOp()
     * @generated
     */
    EEnum FOLLOW_WORD_OP = eINSTANCE.getFollowWordOp();

  }

} //MyBashPackage
