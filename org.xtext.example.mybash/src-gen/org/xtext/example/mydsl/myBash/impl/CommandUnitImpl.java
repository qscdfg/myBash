/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myBash.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myBash.CommandUnit;
import org.xtext.example.mydsl.myBash.MyBashPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Command Unit</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myBash.impl.CommandUnitImpl#isBackend <em>Backend</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommandUnitImpl extends MinimalEObjectImpl.Container implements CommandUnit
{
  /**
   * The default value of the '{@link #isBackend() <em>Backend</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBackend()
   * @generated
   * @ordered
   */
  protected static final boolean BACKEND_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBackend() <em>Backend</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBackend()
   * @generated
   * @ordered
   */
  protected boolean backend = BACKEND_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommandUnitImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyBashPackage.Literals.COMMAND_UNIT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isBackend()
  {
    return backend;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBackend(boolean newBackend)
  {
    boolean oldBackend = backend;
    backend = newBackend;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyBashPackage.COMMAND_UNIT__BACKEND, oldBackend, backend));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyBashPackage.COMMAND_UNIT__BACKEND:
        return isBackend();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyBashPackage.COMMAND_UNIT__BACKEND:
        setBackend((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyBashPackage.COMMAND_UNIT__BACKEND:
        setBackend(BACKEND_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyBashPackage.COMMAND_UNIT__BACKEND:
        return backend != BACKEND_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (backend: ");
    result.append(backend);
    result.append(')');
    return result.toString();
  }

} //CommandUnitImpl
