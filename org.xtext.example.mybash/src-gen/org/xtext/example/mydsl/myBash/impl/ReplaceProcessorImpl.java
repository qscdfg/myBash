/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myBash.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myBash.MyBashPackage;
import org.xtext.example.mydsl.myBash.ReplaceProcessor;
import org.xtext.example.mydsl.myBash.Word;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Replace Processor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myBash.impl.ReplaceProcessorImpl#getOp <em>Op</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myBash.impl.ReplaceProcessorImpl#getOriginal <em>Original</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myBash.impl.ReplaceProcessorImpl#getReplace <em>Replace</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReplaceProcessorImpl extends ParameterProcessorImpl implements ReplaceProcessor
{
  /**
   * The default value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected static final String OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected String op = OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getOriginal() <em>Original</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOriginal()
   * @generated
   * @ordered
   */
  protected Word original;

  /**
   * The cached value of the '{@link #getReplace() <em>Replace</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReplace()
   * @generated
   * @ordered
   */
  protected Word replace;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReplaceProcessorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyBashPackage.Literals.REPLACE_PROCESSOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp(String newOp)
  {
    String oldOp = op;
    op = newOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyBashPackage.REPLACE_PROCESSOR__OP, oldOp, op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Word getOriginal()
  {
    return original;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOriginal(Word newOriginal, NotificationChain msgs)
  {
    Word oldOriginal = original;
    original = newOriginal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyBashPackage.REPLACE_PROCESSOR__ORIGINAL, oldOriginal, newOriginal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOriginal(Word newOriginal)
  {
    if (newOriginal != original)
    {
      NotificationChain msgs = null;
      if (original != null)
        msgs = ((InternalEObject)original).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyBashPackage.REPLACE_PROCESSOR__ORIGINAL, null, msgs);
      if (newOriginal != null)
        msgs = ((InternalEObject)newOriginal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyBashPackage.REPLACE_PROCESSOR__ORIGINAL, null, msgs);
      msgs = basicSetOriginal(newOriginal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyBashPackage.REPLACE_PROCESSOR__ORIGINAL, newOriginal, newOriginal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Word getReplace()
  {
    return replace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReplace(Word newReplace, NotificationChain msgs)
  {
    Word oldReplace = replace;
    replace = newReplace;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyBashPackage.REPLACE_PROCESSOR__REPLACE, oldReplace, newReplace);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReplace(Word newReplace)
  {
    if (newReplace != replace)
    {
      NotificationChain msgs = null;
      if (replace != null)
        msgs = ((InternalEObject)replace).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyBashPackage.REPLACE_PROCESSOR__REPLACE, null, msgs);
      if (newReplace != null)
        msgs = ((InternalEObject)newReplace).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyBashPackage.REPLACE_PROCESSOR__REPLACE, null, msgs);
      msgs = basicSetReplace(newReplace, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyBashPackage.REPLACE_PROCESSOR__REPLACE, newReplace, newReplace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyBashPackage.REPLACE_PROCESSOR__ORIGINAL:
        return basicSetOriginal(null, msgs);
      case MyBashPackage.REPLACE_PROCESSOR__REPLACE:
        return basicSetReplace(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyBashPackage.REPLACE_PROCESSOR__OP:
        return getOp();
      case MyBashPackage.REPLACE_PROCESSOR__ORIGINAL:
        return getOriginal();
      case MyBashPackage.REPLACE_PROCESSOR__REPLACE:
        return getReplace();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyBashPackage.REPLACE_PROCESSOR__OP:
        setOp((String)newValue);
        return;
      case MyBashPackage.REPLACE_PROCESSOR__ORIGINAL:
        setOriginal((Word)newValue);
        return;
      case MyBashPackage.REPLACE_PROCESSOR__REPLACE:
        setReplace((Word)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyBashPackage.REPLACE_PROCESSOR__OP:
        setOp(OP_EDEFAULT);
        return;
      case MyBashPackage.REPLACE_PROCESSOR__ORIGINAL:
        setOriginal((Word)null);
        return;
      case MyBashPackage.REPLACE_PROCESSOR__REPLACE:
        setReplace((Word)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyBashPackage.REPLACE_PROCESSOR__OP:
        return OP_EDEFAULT == null ? op != null : !OP_EDEFAULT.equals(op);
      case MyBashPackage.REPLACE_PROCESSOR__ORIGINAL:
        return original != null;
      case MyBashPackage.REPLACE_PROCESSOR__REPLACE:
        return replace != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (op: ");
    result.append(op);
    result.append(')');
    return result.toString();
  }

} //ReplaceProcessorImpl
