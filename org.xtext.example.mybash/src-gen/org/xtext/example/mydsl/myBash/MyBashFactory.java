/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myBash;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myBash.MyBashPackage
 * @generated
 */
public interface MyBashFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MyBashFactory eINSTANCE = org.xtext.example.mydsl.myBash.impl.MyBashFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Bash</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Bash</em>'.
   * @generated
   */
  Bash createBash();

  /**
   * Returns a new object of class '<em>Compound List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Compound List</em>'.
   * @generated
   */
  CompoundList createCompoundList();

  /**
   * Returns a new object of class '<em>Command Unit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Unit</em>'.
   * @generated
   */
  CommandUnit createCommandUnit();

  /**
   * Returns a new object of class '<em>Function Define</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Function Define</em>'.
   * @generated
   */
  FunctionDefine createFunctionDefine();

  /**
   * Returns a new object of class '<em>Simple Command</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Simple Command</em>'.
   * @generated
   */
  SimpleCommand createSimpleCommand();

  /**
   * Returns a new object of class '<em>Shell Command</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Shell Command</em>'.
   * @generated
   */
  ShellCommand createShellCommand();

  /**
   * Returns a new object of class '<em>Group Command</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Group Command</em>'.
   * @generated
   */
  GroupCommand createGroupCommand();

  /**
   * Returns a new object of class '<em>Cond Command</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cond Command</em>'.
   * @generated
   */
  CondCommand createCondCommand();

  /**
   * Returns a new object of class '<em>Arithmetic Command</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Arithmetic Command</em>'.
   * @generated
   */
  ArithmeticCommand createArithmeticCommand();

  /**
   * Returns a new object of class '<em>Subshell</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Subshell</em>'.
   * @generated
   */
  Subshell createSubshell();

  /**
   * Returns a new object of class '<em>Word</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Word</em>'.
   * @generated
   */
  Word createWord();

  /**
   * Returns a new object of class '<em>Case Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Case Statement</em>'.
   * @generated
   */
  CaseStatement createCaseStatement();

  /**
   * Returns a new object of class '<em>Case Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Case Pattern</em>'.
   * @generated
   */
  CasePattern createCasePattern();

  /**
   * Returns a new object of class '<em>Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pattern</em>'.
   * @generated
   */
  Pattern createPattern();

  /**
   * Returns a new object of class '<em>If Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>If Statement</em>'.
   * @generated
   */
  IfStatement createIfStatement();

  /**
   * Returns a new object of class '<em>Else If Block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Else If Block</em>'.
   * @generated
   */
  ElseIfBlock createElseIfBlock();

  /**
   * Returns a new object of class '<em>For Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>For Statement</em>'.
   * @generated
   */
  ForStatement createForStatement();

  /**
   * Returns a new object of class '<em>While Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>While Statement</em>'.
   * @generated
   */
  WhileStatement createWhileStatement();

  /**
   * Returns a new object of class '<em>Redirection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Redirection</em>'.
   * @generated
   */
  Redirection createRedirection();

  /**
   * Returns a new object of class '<em>Array</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Array</em>'.
   * @generated
   */
  Array createArray();

  /**
   * Returns a new object of class '<em>Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Literal</em>'.
   * @generated
   */
  Literal createLiteral();

  /**
   * Returns a new object of class '<em>Assignment</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Assignment</em>'.
   * @generated
   */
  Assignment createAssignment();

  /**
   * Returns a new object of class '<em>LAssignment</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>LAssignment</em>'.
   * @generated
   */
  LAssignment createLAssignment();

  /**
   * Returns a new object of class '<em>Assignable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Assignable</em>'.
   * @generated
   */
  Assignable createAssignable();

  /**
   * Returns a new object of class '<em>DQ String</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>DQ String</em>'.
   * @generated
   */
  DQString createDQString();

  /**
   * Returns a new object of class '<em>Expansion</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expansion</em>'.
   * @generated
   */
  Expansion createExpansion();

  /**
   * Returns a new object of class '<em>Word Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Word Element</em>'.
   * @generated
   */
  WordElement createWordElement();

  /**
   * Returns a new object of class '<em>Cond Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cond Expression</em>'.
   * @generated
   */
  CondExpression createCondExpression();

  /**
   * Returns a new object of class '<em>Cond Const</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cond Const</em>'.
   * @generated
   */
  CondConst createCondConst();

  /**
   * Returns a new object of class '<em>Regular Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Regular Expression</em>'.
   * @generated
   */
  RegularExpression createRegularExpression();

  /**
   * Returns a new object of class '<em>Regular Const</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Regular Const</em>'.
   * @generated
   */
  RegularConst createRegularConst();

  /**
   * Returns a new object of class '<em>Arithmetic Expansion</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Arithmetic Expansion</em>'.
   * @generated
   */
  ArithmeticExpansion createArithmeticExpansion();

  /**
   * Returns a new object of class '<em>Index Evaluation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Index Evaluation</em>'.
   * @generated
   */
  IndexEvaluation createIndexEvaluation();

  /**
   * Returns a new object of class '<em>Parameter Expansion</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Parameter Expansion</em>'.
   * @generated
   */
  ParameterExpansion createParameterExpansion();

  /**
   * Returns a new object of class '<em>Parameter Processor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Parameter Processor</em>'.
   * @generated
   */
  ParameterProcessor createParameterProcessor();

  /**
   * Returns a new object of class '<em>Command Substitution</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Substitution</em>'.
   * @generated
   */
  CommandSubstitution createCommandSubstitution();

  /**
   * Returns a new object of class '<em>Process Substitution</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Process Substitution</em>'.
   * @generated
   */
  ProcessSubstitution createProcessSubstitution();

  /**
   * Returns a new object of class '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression</em>'.
   * @generated
   */
  Expression createExpression();

  /**
   * Returns a new object of class '<em>Variable Id</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable Id</em>'.
   * @generated
   */
  VariableId createVariableId();

  /**
   * Returns a new object of class '<em>Simple List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Simple List</em>'.
   * @generated
   */
  SimpleList createSimpleList();

  /**
   * Returns a new object of class '<em>Pipeline Command</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pipeline Command</em>'.
   * @generated
   */
  PipelineCommand createPipelineCommand();

  /**
   * Returns a new object of class '<em>Pipeline</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pipeline</em>'.
   * @generated
   */
  Pipeline createPipeline();

  /**
   * Returns a new object of class '<em>Command Name</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Name</em>'.
   * @generated
   */
  CommandName createCommandName();

  /**
   * Returns a new object of class '<em>Arithmetic For Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Arithmetic For Statement</em>'.
   * @generated
   */
  ArithmeticForStatement createArithmeticForStatement();

  /**
   * Returns a new object of class '<em>Cond Unary Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cond Unary Expression</em>'.
   * @generated
   */
  CondUnaryExpression createCondUnaryExpression();

  /**
   * Returns a new object of class '<em>Cond Binary Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cond Binary Expression</em>'.
   * @generated
   */
  CondBinaryExpression createCondBinaryExpression();

  /**
   * Returns a new object of class '<em>Single Processor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Single Processor</em>'.
   * @generated
   */
  SingleProcessor createSingleProcessor();

  /**
   * Returns a new object of class '<em>Replace Processor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Replace Processor</em>'.
   * @generated
   */
  ReplaceProcessor createReplaceProcessor();

  /**
   * Returns a new object of class '<em>Sub String Processor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sub String Processor</em>'.
   * @generated
   */
  SubStringProcessor createSubStringProcessor();

  /**
   * Returns a new object of class '<em>Binary Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Binary Expression</em>'.
   * @generated
   */
  BinaryExpression createBinaryExpression();

  /**
   * Returns a new object of class '<em>Conditional Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conditional Operator</em>'.
   * @generated
   */
  ConditionalOperator createConditionalOperator();

  /**
   * Returns a new object of class '<em>Prefix Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Prefix Expression</em>'.
   * @generated
   */
  PrefixExpression createPrefixExpression();

  /**
   * Returns a new object of class '<em>Suffix Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Suffix Expression</em>'.
   * @generated
   */
  SuffixExpression createSuffixExpression();

  /**
   * Returns a new object of class '<em>Const Primary Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Const Primary Item</em>'.
   * @generated
   */
  ConstPrimaryItem createConstPrimaryItem();

  /**
   * Returns a new object of class '<em>Primary Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Primary Item</em>'.
   * @generated
   */
  PrimaryItem createPrimaryItem();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  MyBashPackage getMyBashPackage();

} //MyBashFactory
