/*
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl

import com.google.inject.Binder
import com.google.inject.name.Names
import org.eclipse.xtext.conversion.IValueConverterService
import org.eclipse.xtext.linking.ILinkingDiagnosticMessageProvider
import org.eclipse.xtext.parser.antlr.IPartialParsingHelper
import org.eclipse.xtext.parser.antlr.Lexer
import org.eclipse.xtext.parser.antlr.LexerBindings
import org.xtext.example.mydsl.datatype.MyBashTerminalConverters
import org.xtext.example.mydsl.lexer.MyBashPartialParsingHelper
import org.xtext.example.mydsl.lexer.MyInnerLexer
import org.xtext.example.mydsl.link.MyBashLinkingDiagnosticMessageProvider

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class MyBashRuntimeModule extends AbstractMyBashRuntimeModule {

	def Class<? extends ILinkingDiagnosticMessageProvider> bindILinkingDiagnosticMessageProvider() {
		return MyBashLinkingDiagnosticMessageProvider;
	}

	override Class<? extends Lexer> bindLexer() {
		return MyInnerLexer;
	}

	override configureRuntimeLexer(Binder binder) {
		binder.bind(Lexer).annotatedWith(Names.named(LexerBindings.RUNTIME)).to(MyInnerLexer);
	}

	override Class<? extends IValueConverterService> bindIValueConverterService() {
		return MyBashTerminalConverters;
	}

	override Class<? extends IPartialParsingHelper> bindIPartialParserHelper() {
		return MyBashPartialParsingHelper
	}
}
